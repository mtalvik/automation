apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: week21-app
  labels:
    app: frontend
    component: frontend
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Week 21 Kubernetes App</title>
        <style>
            body { 
                font-family: Arial, sans-serif; 
                margin: 40px; 
                background-color: #f5f5f5;
            }
            .container { 
                max-width: 800px; 
                margin: 0 auto; 
                background: white;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            .status { 
                background-color: #d4edda; 
                color: #155724; 
                padding: 15px; 
                border-radius: 4px;
                margin: 10px 0;
            }
            .error { 
                background-color: #f8d7da; 
                color: #721c24; 
            }
            button {
                background-color: #007bff;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 4px;
                cursor: pointer;
                margin: 5px;
            }
            button:hover {
                background-color: #0056b3;
            }
            .kubernetes-info {
                background-color: #e7f3ff;
                border-left: 4px solid #007bff;
                padding: 15px;
                margin: 10px 0;
            }
            pre {
                background-color: #f1f1f1;
                padding: 10px;
                border-radius: 4px;
                overflow-x: auto;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöÄ Week 21 Kubernetes Homework</h1>
            <div class="kubernetes-info">
                <h3>üê≥ Kubernetes Deployment</h3>
                <p><strong>Namespace:</strong> week21-app</p>
                <p><strong>Frontend:</strong> Nginx (ConfigMap)</p>
                <p><strong>Backend:</strong> Flask API (Deployment)</p>
                <p><strong>Database:</strong> PostgreSQL (StatefulSet)</p>
            </div>
            
            <div id="status" class="status">
                <h3>üìä Rakenduse staatus</h3>
                <p><strong>Frontend:</strong> ‚úÖ T√∂√∂tab (Kubernetes)</p>
                <p><strong>Backend:</strong> <span id="backend-status">‚è≥ Kontrollin...</span></p>
                <p><strong>Database:</strong> <span id="db-status">‚è≥ Kontrollin...</span></p>
                <p><strong>Aeg:</strong> <span id="timestamp"></span></p>
            </div>

            <div>
                <h3>üîß API Testimine</h3>
                <button onclick="testBackend()">Testi Backend'i</button>
                <button onclick="testDatabase()">Testi Andmebaasi</button>
                <button onclick="testHealth()">Health Check</button>
                <button onclick="refreshStatus()">V√§rskenda</button>
            </div>

            <div id="results"></div>

            <div class="kubernetes-info">
                <h3>üìö Kubernetes Komponendid</h3>
                <p><strong>Deployments:</strong> backend-deployment, database-deployment</p>
                <p><strong>Services:</strong> backend-service, database-service</p>
                <p><strong>ConfigMap:</strong> frontend-config</p>
                <p><strong>PVC:</strong> postgres-pvc</p>
            </div>
        </div>

        <script>
            // V√§rskenda aega
            function updateTime() {
                document.getElementById('timestamp').textContent = new Date().toLocaleString();
            }
            updateTime();
            setInterval(updateTime, 1000);

            // Testi backend'i
            async function testBackend() {
                try {
                    const response = await fetch('/api/status');
                    const data = await response.json();
                    
                    document.getElementById('backend-status').textContent = '‚úÖ T√∂√∂tab';
                    document.getElementById('db-status').textContent = data.database === 'Connected' ? '‚úÖ T√∂√∂tab' : '‚ùå Ei t√∂√∂ta';
                    
                    document.getElementById('results').innerHTML = `
                        <div class="status">
                            <h4>Backend vastus:</h4>
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        </div>
                    `;
                } catch (error) {
                    document.getElementById('backend-status').textContent = '‚ùå Ei t√∂√∂ta';
                    document.getElementById('results').innerHTML = `
                        <div class="status error">
                            <h4>Viga:</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                }
            }

            // Testi andmebaasi
            async function testDatabase() {
                try {
                    const response = await fetch('/api/db-test');
                    const data = await response.json();
                    
                    document.getElementById('results').innerHTML = `
                        <div class="status">
                            <h4>Andmebaasi test:</h4>
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        </div>
                    `;
                } catch (error) {
                    document.getElementById('results').innerHTML = `
                        <div class="status error">
                            <h4>Andmebaasi viga:</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                }
            }

            // Testi health check
            async function testHealth() {
                try {
                    const response = await fetch('/api/health');
                    const data = await response.json();
                    
                    document.getElementById('results').innerHTML = `
                        <div class="status">
                            <h4>Health Check:</h4>
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        </div>
                    `;
                } catch (error) {
                    document.getElementById('results').innerHTML = `
                        <div class="status error">
                            <h4>Health Check viga:</h4>
                            <p>${error.message}</p>
                        </div>
                    `;
                }
            }

            // V√§rskenda staatust
            function refreshStatus() {
                testBackend();
            }

            // Kontrolli staatust lehe laadimisel
            window.onload = function() {
                testBackend();
            };
        </script>
    </body>
    </html>
