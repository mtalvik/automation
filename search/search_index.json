{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Infrastruktuuri Automatiseerimine","text":"<p>Tere tulemast infrastruktuuri automatiseerimise kursusele! See kursus \u00f5petab kaasaegseid DevOps t\u00f6\u00f6riistu ja praktikaid.</p>"},{"location":"#mida-opime","title":"Mida \u00f5pime?","text":"<ul> <li>Git &amp; Versioonihaldus - Koost\u00f6\u00f6 ja koodihalduse alused</li> <li>Docker - Konteineriseerimine ja mikroteenused</li> <li>Ansible - Konfiguratsioonihaldus ja automatiseerimine</li> <li>CI/CD - Pidev integratsioon ja tarnimine</li> <li>Kubernetes - Konteinerite orkestreerimine</li> <li>Terraform - Infrastructure as Code</li> </ul>"},{"location":"#kiirlingid","title":"Kiirlingid","text":""},{"location":"#praktikumid","title":"Praktikumid","text":"<ul> <li>Git alused</li> <li>Docker praktikum</li> <li>Ansible praktikum</li> </ul>"},{"location":"#kodutood","title":"Kodut\u00f6\u00f6d","text":"<ul> <li>Git kodut\u00f6\u00f6</li> <li>Docker kodut\u00f6\u00f6</li> <li>Ansible kodut\u00f6\u00f6</li> </ul>"},{"location":"#abi-ja-tugi","title":"Abi ja tugi","text":"<ul> <li>GitHub Discussions</li> <li>\u00d5ppematerjalid</li> </ul>"},{"location":"#ajakava","title":"Ajakava","text":"N\u00e4dal Teema Praktikum Kodut\u00f6\u00f6 9 Git &amp; Versioonihaldus Jah Jah 10-12 Docker Jah Jah 13-15 Ansible Jah Jah 16-19 CI/CD Jah Jah 20-21 Kubernetes Jah Jah 22-23 Terraform Jah Jah <p>\u00d5ppej\u00f5ud: Maria Talvik</p>"},{"location":"curriculum/","title":"\ud83d\udcda Automatiseerimise Kursuse \u00d5ppekava","text":"<p>ITS-24 - T\u00e4iskasvanute klass (34 tundi, 8 moodulit)</p>"},{"location":"curriculum/#kursuse-ulevaade","title":"\ud83d\udccb Kursuse \u00dclevaade","text":"<p>See kursus katab olulisi automatiseerimise t\u00f6\u00f6riistu ja praktikaid kaasaegsetes DevOps t\u00f6\u00f6voogudes. Iga moodul sisaldab 4 tundi kontakt\u00f5pet ning struktureeritud kodut\u00f6id.</p>"},{"location":"curriculum/#kursuse-struktuur","title":"\ud83d\udcca Kursuse Struktuur","text":"Moodul Teema Kontaktaeg Kodut\u00f6\u00f6 \u00dclesanne 1 Kodut\u00f6\u00f6 \u00dclesanne 2 1 Git Versioonihaldus 4h Git projekti portfoolio n\u00e4idetega Lugemine: Git ajalugu, sisemused, edasij\u00f5udnud kontseptsioonid 2 Ansible Alused 4h Kohalik LAMP stack (VirtualBox/Vagrant) Lugemine: Ansible arhitektuur, YAML, moodulid 3 Docker Alused 4h Mitme-rakendusega konteineriseerimise projekt Lugemine: Docker arhitektuur, turvalisus 4 Docker Orkestratsioon 4h T\u00e4ispinu kohalik paigaldus Lugemine: Konteinerite orkestreerimise mustrid 5 Ansible Edasij\u00f5udnud Iseseisvad Labored Edasij\u00f5udnud funktsioonide laboriharjutused Lugemine: Jinja2, muutujad, Ansible Vault 6 Ansible Rollid Iseseisvad Labored Rolli loomise labor + Puppet v\u00f5rdlus Lugemine: Rollide parimad praktikad, Galaxy 7 Terraform Alused 2h Kohalik infrastruktuur (failid, konfiguratsioon) Lugemine: IaC p\u00f5him\u00f5tted, Terraform mustrid 8 CI/CD + Kubernetes 2h T\u00e4ielik pipeline + K8s \u00fclevaade (kohalik minikube) Lugemine: GitOps, Kubernetes, produktsioon"},{"location":"curriculum/#moodulite-detailid","title":"\ud83c\udfaf Moodulite Detailid","text":""},{"location":"curriculum/#moodul-1-git-versioonihaldus-4h","title":"Moodul 1: Git Versioonihaldus (4h)","text":"<p>Kontaktaja Struktuur: - Git kontseptsioonid ja t\u00f6\u00f6voog (1h) - P\u00f5hilised k\u00e4sud praktikas (1h) - GitHub koost\u00f6\u00f6 (1h) - Harude loomine ja \u00fchendamine praktikas (1h) - Boonus: Edasij\u00f5udnud Git funktsioonid (hooks, submodules, kohandatud k\u00e4sud)</p> <p>K\u00e4sitletud Teemad: - Git alused ja versioonihalduse p\u00f5him\u00f5tted - Kohalik Git kasutamine ja p\u00f5hilised k\u00e4sud - GitHub ja kaugrepositooriumid - Meeskonnat\u00f6\u00f6 ja Pull Request'id</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: T\u00e4ielik Git projekti portfoolio harude t\u00f6\u00f6vooga - \u00dclesanne 2: Loe Git ajalugu, sisemusi ja edasij\u00f5udnud kontseptsioone (2-3 tundi)</p>"},{"location":"curriculum/#moodul-2-ansible-alused-4h","title":"Moodul 2: Ansible Alused (4h)","text":"<p>Kontaktaja Struktuur: - Ansible arhitektuuri \u00fclevaade (30 min) - Kohalik VM seadistus Vagrant'iga (30 min) - SSH seadistus ja inventory (1h) - Ad-hoc k\u00e4skude praktika (1h) - Esimese playbook'i loomine (1h) - Boonus: Edasij\u00f5udnud playbook'id, veakk\u00e4sitlemine, kohandatud moodulid</p> <p>K\u00e4sitletud Teemad: - Ansible arhitektuur ja SSH konfiguratsioon - Kohalik testimine Vagrant/VirtualBox'iga - Inventory haldamine ja ad-hoc k\u00e4sud - YAML s\u00fcntaks ja p\u00f5hilised playbook'id - Esimesed automatiseerimise t\u00f6\u00f6vood</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: Paigalda LAMP stack kohalikult Vagrant VM'idega + palju n\u00e4iteid - \u00dclesanne 2: Loe Ansible arhitektuur, YAML ja moodulite \u00f6kos\u00fcsteem (2-3 tundi)</p>"},{"location":"curriculum/#moodul-3-docker-alused-4h","title":"Moodul 3: Docker Alused (4h)","text":"<p>Kontaktaja Struktuur: - Konteinerite kontseptsioonid vs VM'id (30 min) - Docker'i installimine ja esimene konteiner (1h) - Dockerfile'i loomise t\u00f6\u00f6tuba (1.5h) - P\u00f5hiline v\u00f5rgustik ja helitugevused (1h) - Boonus: Mitme-etapiline ehitus, turvalisus, edasij\u00f5udnud v\u00f5rgustik</p> <p>K\u00e4sitletud Teemad: - Konteineritehnoloogia \u00fclevaade - Docker'i installimine ja p\u00f5hilised k\u00e4sud - Dockerfile'i loomine ja parimad praktikad - Docker'i v\u00f5rgustik ja helitugevused</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: Konteineriseeri mitu rakendust paljude n\u00e4idetega - \u00dclesanne 2: Loe Docker'i arhitektuur, turvalisus ja parimad praktikad (2-3 tundi)</p>"},{"location":"curriculum/#moodul-4-docker-orkestratsioon-4h","title":"Moodul 4: Docker Orkestratsioon (4h)","text":"<p>Kontaktaja Struktuur: - Mitme-konteineriga kontseptsioonid (30 min) - Compose faili loomine (1.5h) - Mitme-teenusega rakenduse seadistus (1.5h) - Kohalik orkestratsioon n\u00e4idetega (30 min)</p> <p>K\u00e4sitletud Teemad: - Docker Compose s\u00fcntaks ja kasutamine - Mitme-konteineriga rakendused - Keskkonna-spetsiifilised konfiguratsioonid - Kohalikud arenduse t\u00f6\u00f6vood</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: Paigalda full-stack rakendus kohalikult paljude teenuste n\u00e4idetega - \u00dclesanne 2: Loe konteinerite orkestreerimise mustreid ja strateegiaid (2-3 tundi)</p>"},{"location":"curriculum/#moodul-5-ansible-edasijoudnud-iseseisvad-labored","title":"Moodul 5: Ansible Edasij\u00f5udnud (Iseseisvad Labored)","text":"<p>Iseseisva Labori Struktuur: - Juhendatud harjutused samm-sammuliste juhistega - Muutujate ja Jinja2 mallide labor - K\u00e4sitlejate ja veak\u00e4sitlemise labor - Ansible Vault turvalisuse labor - Mitmesugused praktilised n\u00e4ited</p> <p>K\u00e4sitletud Teemad: - Muutujad ja Jinja2 mallid - K\u00e4sitlejad ja veak\u00e4sitlemise strateegiad - Ansible Vault saladuste haldamiseks - Parimad praktikad ja optimeerimine</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: L\u00f5peta k\u00f5ik iseseisva labori harjutused n\u00e4idetega - \u00dclesanne 2: Loe Jinja2 mallid, muutujad ja Vault turvalisus (2-3 tundi)</p>"},{"location":"curriculum/#moodul-6-ansible-rollid-iseseisvad-labored","title":"Moodul 6: Ansible Rollid (Iseseisvad Labored)","text":"<p>Iseseisva Labori Struktuur: - Rolli loomise samm-sammuline juhend - Rolli muutujate ja s\u00f5ltuvuste labor - Ansible Galaxy uurimine - Puppet vs Ansible v\u00f5rdlusharjutus</p> <p>K\u00e4sitletud Teemad: - Ansible rollide struktuur ja parimad praktikad - Rolli muutujad ja s\u00f5ltuvused - Ansible Galaxy kogukond - Konfiguratsiooni haldamise v\u00f5rdlus</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: Loo roll + Puppet v\u00f5rdlus paljude n\u00e4idetega - \u00dclesanne 2: Loe rolli parimaid praktikaid ja Galaxy \u00f6kos\u00fcsteemi (2-3 tundi)</p>"},{"location":"curriculum/#moodul-7-terraform-alused-2h-kontaktope","title":"Moodul 7: Terraform Alused (2h Kontakt\u00f5pe)","text":"<p>Kontaktaja Struktuur: - Infrastructure as Code \u00fclevaade (30 min) - Kohalik Terraform demo (failis\u00fcsteemi haldamine) (1h) - Praktiline: Loo kohalik infrastruktuur (30 min) - Boonus: Moodulid, t\u00f6\u00f6ruumid, edasij\u00f5udnud mallid</p> <p>K\u00e4sitletud Teemad: - Terraform alused ja HCL keel - Kohalikud providerid (failis\u00fcsteemi haldamine) - State'i haldamise kontseptsioonid - Infrastructure as Code p\u00f5him\u00f5tted</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: Kohalik infrastruktuuriprojekt (failid, konfiguratsioon, skriptid) paljude n\u00e4idetega - \u00dclesanne 2: Loe IaC p\u00f5him\u00f5tteid ja Terraform mustreid (2-3 tundi)</p>"},{"location":"curriculum/#moodul-8-cicd-kubernetes-2h-kontaktope","title":"Moodul 8: CI/CD + Kubernetes (2h Kontakt\u00f5pe)","text":"<p>Kontaktaja Struktuur: - T\u00e4ieliku automatiseerimise pipeline demo (1h) - Kubernetes \u00fclevaade kohaliku minikube'iga (30 min) - K\u00f5igi t\u00f6\u00f6riistade integratsioon (30 min)</p> <p>K\u00e4sitletud Teemad: - GitHub Actions eelnevate t\u00f6\u00f6riistadega - T\u00e4ielik automatiseerimise t\u00f6\u00f6voog - Kubernetes tutvustus (kohalik) - DevOps pipeline integratsioon</p> <p>Kodut\u00f6\u00f6d: - \u00dclesanne 1: T\u00e4ielik automatiseerimise projekt k\u00f5igi t\u00f6\u00f6riistade integratsiooniga + n\u00e4ited - \u00dclesanne 2: Loe GitOps, Kubernetes ja produktsiooni mustreid (2-3 tundi)</p>"},{"location":"curriculum/#opieesmargid","title":"\ud83c\udfaf \u00d5pieesm\u00e4rgid","text":"<ul> <li>Praktiline kogemus k\u00f5igi automatiseerimise t\u00f6\u00f6riistadega</li> <li>Projektip\u00f5hise \u00f5ppimise l\u00e4henemine</li> <li>Meeskonnat\u00f6\u00f6 oskused</li> <li>T\u00f6\u00f6stuse standardid ja parimad praktikad</li> <li>Iseseisev \u00f5ppimine lugemi\u00fclesannete kaudu</li> </ul>"},{"location":"curriculum/#hindamisstrateegia","title":"\ud83d\udcdd Hindamisstrateegia","text":"<ul> <li>\u00dclesanne 1: Praktiline t\u00f6\u00f6 (hinnatakse funktsionaalsuse j\u00e4rgi)</li> <li>\u00dclesanne 2: Lugemise refleksioon (hinnatakse m\u00f5istmise j\u00e4rgi)</li> <li>Portfoolio: GitHub repositoorium kogu t\u00f6\u00f6ga</li> <li>L\u00f5puprojekt: K\u00f5igi t\u00f6\u00f6riistade integratsioon</li> </ul>"},{"location":"curriculum/#seadistamise-juhendid","title":"\ud83d\udd27 Seadistamise Juhendid","text":""},{"location":"curriculum/#enne-kursuse-alustamist","title":"Enne kursuse alustamist:","text":"<ul> <li>Linux/macOS kasutajad: Kodu Masina Ehitus Juhend</li> </ul>"},{"location":"curriculum/#vajalikud-tooriistad","title":"Vajalikud t\u00f6\u00f6riistad:","text":"<ul> <li>Git (versioonihaldus)</li> <li>Docker Desktop (konteinerid)</li> <li>Ansible (konfiguratsiooni haldamine)</li> <li>Terraform (infrastruktuuri kood)</li> <li>kubectl + Minikube (Kubernetes)</li> <li>VSCode (arenduskeskkond)</li> </ul>"},{"location":"ansible_advanced/homework/","title":"\ud83d\udcdd N\u00e4dal 13 Kodut\u00f6\u00f6: Deploy Web Server with Vault &amp; Templates","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Apache serveri juurutamine Ansible Vault salajaste andmete ja Jinja2 mallide abil Aeg: 1.5-2 tundi praktilist juurutamist</p> <p>Te saate valmis starter failid - fookus on Vault'i ja template'ide \u00f5ppimisel!</p>"},{"location":"ansible_advanced/homework/#projekt-secure-web-server-deployment","title":"\ud83c\udfaf Projekt: Secure Web Server Deployment","text":"<p>Mida te ehitate: - \ud83c\udf10 Apache web server d\u00fcnaamilise sisuga - \ud83d\udd10 Vault-kr\u00fcptitud salajased andmed (paroolid, API v\u00f5tmed) - \ud83d\udcc4 Jinja2 mallid d\u00fcnaamilise HTML genereerimiseks - \ud83d\udd27 Teenuse k\u00e4sitlejad automaatsete taask\u00e4ivituste jaoks - \ud83d\udcca S\u00fcsteemi teabe kuvamine serveri statistikaga</p> <p>Mida te \u00f5pite: - Ansible Vault salajaste andmete haldamine - Mallip\u00f5hine konfiguratsioon - Teenuse haldamine k\u00e4sitlejate abil - Turvaline identimisteabe haldamine</p>"},{"location":"ansible_advanced/homework/#samm-1-setup-project-10-min","title":"\ud83d\udcc1 Samm 1: Setup Project (10 min)","text":""},{"location":"ansible_advanced/homework/#11-veebi-varade-hankimine-ja-automatiseerimisfailide-loomine","title":"1.1 Veebi varade hankimine ja automatiseerimisfailide loomine","text":"<pre><code># Kodut\u00f6\u00f6 kataloogi loomine\nmkdir ~/ansible-advanced-homework\ncd ~/ansible-advanced-homework\n\n# Ainult veebi varade kloonimine (HTML mallid, CSS)\ngit clone https://github.com/[teacher-repo]/ansible-web-assets.git assets\ncp -r assets/templates assets/static .\nrm -rf assets/\n\n# Sinu git hoidla initsialiseerimine automatiseerimisfailide jaoks\ngit init\ngit remote add origin https://github.com/[your-username]/ansible-advanced-homework.git\n\n# Ansible struktuuri loomine\nmkdir group_vars\ntouch ansible.cfg inventory.yml site.yml README.md\n</code></pre>"},{"location":"ansible_advanced/homework/#12-automatiseerimise-konfiguratsiooni-loomine","title":"1.2 Automatiseerimise konfiguratsiooni loomine","text":"<p>Fail: <code>ansible.cfg</code>: <pre><code>[defaults]\ninventory = inventory.yml\nhost_key_checking = False\n</code></pre></p> <p>Fail: <code>inventory.yml</code>: <pre><code>all:\n  hosts:\n    webserver:\n      ansible_host: localhost\n      ansible_connection: local\n  vars:\n    server_name: \"my-web-server\"\n    admin_email: \"admin@example.com\"\n</code></pre></p>"},{"location":"ansible_advanced/homework/#13-esimene-commit-ainult-automatiseerimisfailid","title":"1.3 Esimene commit (ainult automatiseerimisfailid)","text":"<pre><code># Lisa loodud automatiseerimisfailid\ngit add ansible.cfg inventory.yml templates/ static/\ngit commit -m \"Loodud Ansible konfiguratsioon + lisatud veebi varad\"\n</code></pre>"},{"location":"ansible_advanced/homework/#samm-2-create-vault-file-15-min","title":"\ud83d\udd10 Samm 2: Create Vault File (15 min)","text":""},{"location":"ansible_advanced/homework/#21-vaulti-loomise-oppimine","title":"2.1 Vault'i loomise \u00f5ppimine","text":"<pre><code># Kr\u00fcptitud vault faili loomine\nansible-vault create group_vars/vault.yml\n# Parooli k\u00fcsimisel kasuta: vault123\n</code></pre>"},{"location":"ansible_advanced/homework/#22-salajaste-andmete-lisamine-vaulti-kirjuta-need","title":"2.2 Salajaste andmete lisamine vault'i (KIRJUTA NEED!)","text":"<pre><code># Lisa need salajased andmed oma vault faili:\nvault_mysql_password: \"mysql_secret_123\"\nvault_admin_password: \"admin_secret_456\"\nvault_website_title: \"Minu Turvaline Veebiserver\"\nvault_api_key: \"api-key-12345-secret\"\nvault_student_name: \"Sinu Nimi Siin\"\n</code></pre>"},{"location":"ansible_advanced/homework/#23-vaulti-operatsioonide-testimine","title":"2.3 Vault'i operatsioonide testimine","text":"<pre><code># Vaata oma kr\u00fcptitud vault faili\ncat group_vars/vault.yml\n# Peaks n\u00e4itama kr\u00fcptitud sisu\n\n# Vaata vault'i sisu (dekr\u00fcpteeri kontrollimiseks)\nansible-vault view group_vars/vault.yml\n# Parool: vault123\n\n# Redigeeri vault faili vajadusel\nansible-vault edit group_vars/vault.yml\n</code></pre>"},{"location":"ansible_advanced/homework/#24-vaulti-loomise-commit","title":"2.4 Vault'i loomise commit","text":"<pre><code>git add group_vars/vault.yml\ngit commit -m \"Loodud kr\u00fcptitud vault salajaste andmetega\"\n</code></pre>"},{"location":"ansible_advanced/homework/#samm-3-create-playbook-25-min","title":"\ud83d\udcdd Samm 3: Create Playbook (25 min)","text":""},{"location":"ansible_advanced/homework/#31-peamise-playbooki-kirjutamine","title":"3.1 Peamise playbook'i kirjutamine","text":"<p>Fail: <code>site.yml</code>: <pre><code>---\n- name: \"Web server with Vault and Templates\"\n  hosts: all\n  become: yes\n  vars:\n    web_root: \"/var/www/html\"\n    service_name: \"apache2\"\n\n  tasks:\n    - name: \"Install Apache web server\"\n      package:\n        name: \"{{ service_name }}\"\n        state: present\n      notify: \"start apache\"\n\n    - name: \"Create web directory\"\n      file:\n        path: \"{{ web_root }}\"\n        state: directory\n        mode: '0755'\n\n    - name: \"Generate HTML page from template\"\n      template:\n        src: index.html.j2\n        dest: \"{{ web_root }}/index.html\"\n        mode: '0644'\n      notify: \"restart apache\"\n\n    - name: \"Create server info file\"\n      copy:\n        content: |\n          Server: {{ ansible_hostname }}\n          Student: {{ vault_student_name }}\n          MySQL Password Length: {{ vault_mysql_password | length }}\n          Generated: {{ ansible_date_time.iso8601 }}\n        dest: \"{{ web_root }}/server-info.txt\"\n        mode: '0644'\n\n    - name: \"Ensure Apache is running\"\n      service:\n        name: \"{{ service_name }}\"\n        state: started\n        enabled: yes\n\n  handlers:\n    - name: \"start apache\"\n      service:\n        name: \"{{ service_name }}\"\n        state: started\n\n    - name: \"restart apache\"\n      service:\n        name: \"{{ service_name }}\"\n        state: restarted\n</code></pre></p>"},{"location":"ansible_advanced/homework/#32-playbooki-testimine","title":"3.2 Playbook'i testimine","text":"<pre><code># Kontrolli s\u00fcntaksit (oluline!)\nansible-playbook --syntax-check site.yml\n\n# Kuiv jooks esmalt\nansible-playbook --check site.yml --ask-vault-pass\n# Parool: vault123\n\n# Juurutamine p\u00e4riselt\nansible-playbook site.yml --ask-vault-pass\n</code></pre>"},{"location":"ansible_advanced/homework/#33-juurutamise-kontrollimine","title":"3.3 Juurutamise kontrollimine","text":"<pre><code># Kontrolli, kas Apache t\u00f6\u00f6tab\nsudo systemctl status apache2\n\n# Testi veebiserverit\ncurl http://localhost\n\n# Kontrolli genereeritud faile\ncat /var/www/html/index.html | head -10\ncat /var/www/html/server-info.txt\n\n# Ava brauseris\necho \"Ava brauser: http://localhost\"\n</code></pre>"},{"location":"ansible_advanced/homework/#34-playbooki-loomise-commit","title":"3.4 Playbook'i loomise commit","text":"<pre><code>git add site.yml\ngit commit -m \"Loodud t\u00e4ielik playbook vault'i ja mallidega\"\n</code></pre>"},{"location":"ansible_advanced/homework/#samm-4-test-vault-and-handler-operations-15-min","title":"\ud83e\uddea Samm 4: Test Vault and Handler Operations (15 min)","text":""},{"location":"ansible_advanced/homework/#41-vaulti-operatsioonide-testimine","title":"4.1 Vault'i operatsioonide testimine","text":"<pre><code># Kontrolli praegust vault'i sisu\nansible-vault view group_vars/vault.yml\n\n# Muuda vault'i salajast andmet\nansible-vault edit group_vars/vault.yml\n# Muuda vault_website_title v\u00e4\u00e4rtuseks \"Minu Uuendatud Sait - [Sinu Nimi]\"\n\n# Juuruta uue salajase andmega\nansible-playbook site.yml --ask-vault-pass\n\n# Kontrolli muudatust brauseris\ncurl http://localhost | grep \"Minu Uuendatud Sait\"\n</code></pre>"},{"location":"ansible_advanced/homework/#42-kasitleja-funktsionaalsuse-testimine","title":"4.2 K\u00e4sitleja funktsionaalsuse testimine","text":"<pre><code># Tee mallis muudatus (k\u00e4ivitab k\u00e4sitleja)\necho \"&lt;!-- Muudetud $(date) --&gt;\" &gt;&gt; templates/index.html.j2\n\n# Juuruta ja j\u00e4lgi k\u00e4sitleja k\u00e4ivitamist\nansible-playbook site.yml --ask-vault-pass -v\n# Peaks n\u00e4gema \"restart apache\" k\u00e4sitleja k\u00e4ivitamist\n\n# Kontrolli Apache taask\u00e4ivitumist\nsudo systemctl status apache2 | grep \"Active since\"\n</code></pre>"},{"location":"ansible_advanced/homework/#43-playbooki-funktsioonide-testimine","title":"4.3 Playbook'i funktsioonide testimine","text":"<pre><code># K\u00e4ivita ainult kindlad \u00fclesanded siltidega (kui saadaval)\nansible-playbook site.yml --ask-vault-pass --list-tasks\n\n# K\u00e4ivita kontrollire\u017eiimis (kuiv jooks)\nansible-playbook site.yml --ask-vault-pass --check\n\n# K\u00e4ivita t\u00e4iendava \u00fcksikasjalikkusega\nansible-playbook site.yml --ask-vault-pass -vv\n</code></pre>"},{"location":"ansible_advanced/homework/#44-operatsionaalse-testimise-commit","title":"4.4 Operatsionaalse testimise commit","text":"<pre><code>git add .\ngit commit -m \"Testitud vault'i operatsioone ja k\u00e4sitleja funktsionaalsust\"\ngit push origin homework-[your-name]\n</code></pre>"},{"location":"ansible_advanced/homework/#samm-5-final-documentation-and-evidence-10-min","title":"\ud83d\udccb Samm 5: Final Documentation and Evidence (10 min)","text":""},{"location":"ansible_advanced/homework/#51-readmemd-uuendamine","title":"5.1 README.md uuendamine","text":"<p>T\u00e4ida <code>README.md</code> mall: <pre><code># N\u00e4dal 13 Ansible Kodut\u00f6\u00f6 - Vault ja Mallid\n\n## Mida ma ehitasin\n- Apache veebiserver d\u00fcnaamilise sisuga\n- Kr\u00fcptitud vault salajased andmed turvalise identimisteabe salvestamiseks\n- Jinja2 mallid d\u00fcnaamilise HTML genereerimiseks\n- Teenuse k\u00e4sitlejad automaatsete taask\u00e4ivituste jaoks\n\n## Juurutamise k\u00e4sud\n```bash\n# Klooni ja juuruta\ngit clone [repository-url]\ncd ansible-vault-templates-starter\nansible-playbook site.yml --ask-vault-pass\n# Vault parool: vault123\n</code></pre></p>"},{"location":"ansible_advanced/homework/#tootavad-tulemused","title":"T\u00f6\u00f6tavad tulemused","text":"<ul> <li>Veebiserver: http://localhost</li> <li>N\u00e4itab kr\u00fcptitud vault andmeid turvaliselt</li> <li>Mall genereerib d\u00fcnaamilist sisu</li> <li>K\u00e4sitlejad taask\u00e4ivitavad teenused muudatuste korral</li> </ul>"},{"location":"ansible_advanced/homework/#mida-ma-oppisin","title":"Mida ma \u00f5ppisin","text":"<ul> <li>Ansible Vault kr\u00fcptib tundlikke andmeid</li> <li>Jinja2 mallid loovad d\u00fcnaamilisi konfiguratsioone</li> <li>K\u00e4sitlejad k\u00e4ivituvad ainult muudatuste korral</li> <li>Vault paroolid kaitsevad salajasi andmeid git hoidlates</li> </ul>"},{"location":"ansible_advanced/homework/#toendid","title":"T\u00f5endid","text":"<ul> <li>Ekraanipildid <code>screenshots/</code> kaustas</li> <li>T\u00f6\u00f6tav veebiserver demonstreeritav</li> <li>Git ajalugu n\u00e4itab arengut <pre><code>### 5.2 Tee ekraanipildid\n\n**Vajalikud ekraanipildid:**\n1. **Vault'i sisu**: `ansible-vault view group_vars/vault.yml`\n2. **Juurutatud veebisait**: Brauser n\u00e4itab http://localhost\n3. **Apache olek**: `sudo systemctl status apache2`\n4. **Mall tegevuses**: N\u00e4ita d\u00fcnaamilist sisu sinu kohandustega\n\n### 5.3 L\u00f5plik commit ja push\n\n```bash\n# L\u00f5plik dokumentatsiooni commit\ngit add README.md screenshots/\ngit commit -m \"L\u00f5plik dokumentatsioon - N\u00e4dal 13 kodut\u00f6\u00f6 valmis\"\n\n# Push GitHub'i\ngit push origin main\n\n# Loo puhas hoidla struktuur\nmkdir -p docs/evidence docs/automation\nmv ansible.cfg inventory.yml site.yml group_vars/ docs/automation/\nmv templates/ static/ docs/automation/\nmv screenshots/ docs/evidence/\n\n# L\u00f5plik organiseeritud commit\ngit add docs/\ngit commit -m \"Kodut\u00f6\u00f6 organiseeritud \u00f5igesse struktuuri\"\ngit push origin main\n</code></pre></li> </ul>"},{"location":"ansible_advanced/homework/#repository-submission-requirements","title":"\ud83d\udccb Repository Submission Requirements","text":""},{"location":"ansible_advanced/homework/#hoidla-struktuur-peab-sisaldama","title":"Hoidla struktuur peab sisaldama:","text":"<pre><code>ansible-advanced-homework/\n\u251c\u2500\u2500 README.md                          # T\u00e4ielik dokumentatsioon\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 automation/                    # SINU automatiseerimisfailid\n\u2502   \u2502   \u251c\u2500\u2500 ansible.cfg\n\u2502   \u2502   \u251c\u2500\u2500 inventory.yml  \n\u2502   \u2502   \u251c\u2500\u2500 site.yml\n\u2502   \u2502   \u251c\u2500\u2500 group_vars/vault.yml\n\u2502   \u2502   \u2514\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 evidence/                      # T\u00f6\u00f6 t\u00f5endid\n\u2502       \u251c\u2500\u2500 screenshots/\n\u2502       \u2502   \u251c\u2500\u2500 vault-contents.png\n\u2502       \u2502   \u251c\u2500\u2500 website-working.png\n\u2502       \u2502   \u2514\u2500\u2500 apache-status.png\n\u2502       \u2514\u2500\u2500 deployment-log.txt\n\u2514\u2500\u2500 .gitignore\n</code></pre>"},{"location":"ansible_advanced/homework/#esitamise-meetod","title":"Esitamise meetod:","text":"<ol> <li>GitHub hoidla link esitatud kursuse s\u00fcsteemis</li> <li>Hoidla peab olema avalik \u00fclevaatamiseks</li> <li>Selge esitlus - puhas, organiseeritud, dokumenteeritud</li> <li>T\u00f6\u00f6tav demonstreerimine - \u00f5petaja saab kloonida ja juurutada</li> </ol>"},{"location":"ansible_advanced/homework/#edu-nouanded","title":"\ud83d\udca1 Edu n\u00f5uanded","text":"<ol> <li>Klooni esmalt, koodi hiljem - Alusta t\u00f6\u00f6tava hoidlaga</li> <li>Testi iga muudatust - Juuruta p\u00e4rast iga muudatust</li> <li>Dokumenteeri k\u00f5ike - Tee ekraanipildid edenedes</li> <li>M\u00f5ista vault'i turvalisust - \u00c4ra kunagi commita dekr\u00fcptitud salajasi andmeid</li> <li>Harjuta k\u00e4sitlejaid - Tee muudatusi ja n\u00e4e teenuse taask\u00e4ivitumisi</li> <li>Kasuta git'i korrektselt - Commit p\u00e4rast iga t\u00f6\u00f6tavat sammu</li> </ol>"},{"location":"ansible_advanced/homework/#uuendatud-ajakava-2h-kokku","title":"\u23f0 Uuendatud ajakava (2h kokku):","text":"<pre><code>10 min: Veebi varade hankimine + automatiseerimisfailide loomine\n15 min: Vault faili loomine ja testimine\n25 min: Playbook'i kirjutamine ja juurutamine\n15 min: Vault'i/k\u00e4sitleja operatsioonide testimine\n10 min: L\u00f5plik dokumentatsioon ja ekraanipildid\n\nKokku: 1h 15min (t\u00e4iuslik 2h labori jaoks piisava varuga!)\n</code></pre>"},{"location":"ansible_advanced/homework/#pohilised-opiteemad","title":"\ud83c\udfaf P\u00f5hilised \u00f5piteemad:","text":"<p>\u00d5pilased omandavad: - \ud83d\udd10 Ansible Vault - kr\u00fcpti ja halda salajasi andmeid turvaliselt - \ud83d\udcc4 Jinja2 Mallid - loo d\u00fcnaamilisi konfiguratsioone - \ud83d\udd27 Teenuse K\u00e4sitlejad - automatiseeri teenuse haldamine - \ud83d\udcc1 Git T\u00f6\u00f6voog - hoidla haldamine</p> <p>Praktilised Oskused: - Turvaline identimisteabe haldamine infrastruktuuri koodis - D\u00fcnaamiline konfiguratsiooni genereerimine erinevate keskkondade jaoks - Teenuse taask\u00e4ivituse automatiseerimine konfiguratsiooni muudatuste korral - Versioonikontrolli parimad tavad infrastruktuuri jaoks</p> <p>See on praktiline salajaste andmete haldamise harjutus! \ud83d\ude80</p>"},{"location":"ansible_advanced/lab/","title":"\ud83e\uddea Ansible Advanced Lab: Template-based Configuration","text":"<p>Kestus: 2 tundi Eesm\u00e4rk: \u00d5ppida Ansible'i t\u00e4psemaid funktsioone ja luua d\u00fcnaamilisi konfiguratsioone</p>"},{"location":"ansible_advanced/lab/#samm-1-opivaljundid","title":"\ud83c\udfaf Samm 1: \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast laborit oskate: - D\u00fcnaamilised konfiguratsioonid Jinja2 template'itega - Muutujate hierarhia m\u00f5istmine ja kasutamine - Handler'ite kasutamise oskus - Ansible Vault kr\u00fcpteerimise oskus - T\u00f6\u00f6korras LAMP stack vault'iga</p>"},{"location":"ansible_advanced/lab/#samm-1-advanced-variables-setup-30-min","title":"\ud83d\udccb Samm 1: Advanced Variables Setup (30 min)","text":""},{"location":"ansible_advanced/lab/#11-projekti-struktuuri-loomine-organiseeritud-struktuur","title":"1.1: Projekti struktuuri loomine - Organiseeritud struktuur","text":"<p>Miks struktureeritud projekt: - Suuremad projektid vajavad selget organisatsiooni - Erinevad keskkonnad (dev, staging, prod) vajavad erinevaid seadistusi - Team collaboration on lihtsam struktuuriga</p> <p>Loome professionaalse struktuuri sammhaaval:</p> <ol> <li> <p>Looge peakaust: <pre><code>mkdir -p ~/ansible-advanced\ncd ~/ansible-advanced\n</code></pre></p> </li> <li> <p>Looge k\u00f5ik vajalikud kaustad: <pre><code># P\u00f5histruktuur\nmkdir -p {inventory,group_vars,host_vars,roles,playbooks,templates,files}\n\n# Group variables struktuuri\nmkdir -p group_vars/{all,webservers,dbservers}\n\n# Host-spetsiifilised muutujad\nmkdir -p host_vars/{web1,web2,db1}\n</code></pre></p> </li> <li> <p>Kontrollige struktuuri: <pre><code>tree .  # v\u00f5i ls -la kui tree ei ole installitud\n</code></pre></p> </li> </ol> <p>Peaks n\u00e4itama: <pre><code>.\n\u251c\u2500\u2500 files/\n\u251c\u2500\u2500 group_vars/\n\u2502   \u251c\u2500\u2500 all/\n\u2502   \u251c\u2500\u2500 dbservers/\n\u2502   \u2514\u2500\u2500 webservers/\n\u251c\u2500\u2500 host_vars/\n\u2502   \u251c\u2500\u2500 db1/\n\u2502   \u251c\u2500\u2500 web1/\n\u2502   \u2514\u2500\u2500 web2/\n\u251c\u2500\u2500 inventory/\n\u251c\u2500\u2500 playbooks/\n\u251c\u2500\u2500 roles/\n\u2514\u2500\u2500 templates/\n</code></pre></p>"},{"location":"ansible_advanced/lab/#12-inventory-seadistamine-serverite-hierarhia","title":"1.2: Inventory seadistamine - Serverite hierarhia","text":"<p>M\u00f5istame inventory struktuuri: - Groups - serverite grupid (webservers, dbservers) - Children - gruppide hierarhia - Vars - grupi-spetsiifilised muutujad</p> <p>Loome inventory faili sammhaaval:</p> <ol> <li> <p>Looge p\u00f5hi inventory fail: <pre><code>touch inventory/hosts.yml\nnano inventory/hosts.yml\n</code></pre></p> </li> <li> <p>Lisage server gruppid: <pre><code>all:\n  children:\n    webservers:\n      hosts:\n        web1:\n          ansible_host: localhost\n          ansible_connection: local\n          server_id: 1\n          server_role: primary\n        web2:\n          ansible_host: localhost\n          ansible_connection: local\n          server_id: 2\n          server_role: secondary\n</code></pre></p> </li> <li> <p>Lisage group variables: <pre><code>      vars:\n        http_port: 80\n        https_port: 443\n        web_root: \"/var/www/html\"\n</code></pre></p> </li> <li> <p>Lisage database serverid: <pre><code>    dbservers:\n      hosts:\n        db1:\n          ansible_host: localhost\n          ansible_connection: local\n          mysql_server_id: 1\n          mysql_role: master\n      vars:\n        mysql_port: 3306\n        mysql_data_dir: \"/var/lib/mysql\"\n</code></pre></p> </li> <li> <p>Lisage keskkonna grupid: <pre><code>    development:\n      children:\n        webservers:\n        dbservers:\n      vars:\n        app_env: \"development\"\n        debug_mode: true\n        ssl_enabled: false\n\n    production:\n      children:\n        webservers:\n        dbservers:\n      vars:\n        app_env: \"production\"\n        debug_mode: false\n        ssl_enabled: true\n</code></pre></p> </li> </ol> <p>\u2753 M\u00f5elge: Miks on kasulik grupeerida servereid nii rolli kui keskkonna j\u00e4rgi?</p>"},{"location":"ansible_advanced/lab/#samm-3-variables-hierarchy-loomine","title":"Samm 3: Variables hierarchy loomine","text":"<p>Loome muutujate hierarhia sammhaaval:</p> <ol> <li>Globaalsed muutujad (group_vars/all/vars.yml): <pre><code>touch group_vars/all/vars.yml\nnano group_vars/all/vars.yml\n</code></pre></li> </ol> <pre><code># K\u00f5ikidele serveritele \u00fchised seadistused\napp_name: \"advanced-lamp\"\napp_version: \"1.0.0\"\nadmin_email: \"admin@company.com\"\n\n# OS-spetsiifilised paketid (d\u00fcnaamilised)\napache_package: \"{% if ansible_os_family == 'Debian' %}apache2{% else %}httpd{% endif %}\"\nmysql_package: \"{% if ansible_os_family == 'Debian' %}mysql-server{% else %}mariadb-server{% endif %}\"\n\n# Keskkonna s\u00f5ltuvad seadistused\nbackup_enabled: \"{{ app_env == 'production' }}\"\nmonitoring_enabled: \"{{ app_env == 'production' }}\"\nlog_level: \"{% if debug_mode %}DEBUG{% else %}INFO{% endif %}\"\n</code></pre> <ol> <li>Webserverite muutujad (group_vars/webservers/vars.yml): <pre><code>touch group_vars/webservers/vars.yml\nnano group_vars/webservers/vars.yml\n</code></pre></li> </ol> <pre><code># Apache/Nginx seadistused\nmax_workers: \"{{ ansible_processor_vcpus * 2 }}\"\nmax_connections: 1000\nkeepalive_timeout: 65\n\n# PHP seadistused\nphp_version: \"7.4\"\nphp_memory_limit: \"{% if ansible_memtotal_mb &gt; 4096 %}512M{% else %}256M{% endif %}\"\nphp_max_execution_time: 30\n\n# Virtual hosts\nvirtual_hosts:\n  - name: \"{{ app_name }}.local\"\n    document_root: \"{{ web_root }}/{{ app_name }}\"\n    ssl_enabled: \"{{ ssl_enabled }}\"\n  - name: \"api.{{ app_name }}.local\"\n    document_root: \"{{ web_root }}/api\"\n    ssl_enabled: \"{{ ssl_enabled }}\"\n</code></pre> <ol> <li>Database serverite muutujad (group_vars/dbservers/vars.yml): <pre><code>touch group_vars/dbservers/vars.yml\nnano group_vars/dbservers/vars.yml\n</code></pre></li> </ol> <pre><code># MySQL konfigureerimine\nmysql_root_user: \"root\"\nmysql_bind_address: \"127.0.0.1\"\nmysql_max_connections: 100\n\n# D\u00fcnaamiline buffer pool arvutamine\nmysql_innodb_buffer_pool_size: \"{{ (ansible_memtotal_mb * 0.7) | int }}M\"\n\n# Andmebaasid\nmysql_databases:\n  - name: \"{{ app_name }}_{{ app_env }}\"\n    encoding: \"utf8mb4\"\n    collation: \"utf8mb4_unicode_ci\"\n\nmysql_users:\n  - name: \"{{ app_name }}_user\"\n    host: \"localhost\"\n    priv: \"{{ app_name }}_{{ app_env }}.*:ALL\"\n    # Parool tuleb vault'ist\n</code></pre> <p>\ud83d\udca1 M\u00e4rkused: - Kasutame Jinja2 loogikat d\u00fcnaamilisteks v\u00e4\u00e4rtusteks - Serverite v\u00f5imsus m\u00f5jutab konfiguratsiooni - Keskkond m\u00e4\u00e4rab turvalisuse taseme</p>"},{"location":"ansible_advanced/lab/#samm-2-jinja2-templateite-loomine-45-min","title":"\ud83d\udccb Samm 2: Jinja2 Template'ite loomine (45 min)","text":""},{"location":"ansible_advanced/lab/#21-apache-virtual-host-template-dunaamiline-konfiguratsioon","title":"2.1: Apache virtual host template - D\u00fcnaamiline konfiguratsioon","text":"<p>Miks template'id on olulised: - \u00dcks template, mitu erinevat konfiguratsiooni - Automaatne kohandamine serverite j\u00e4rgi - V\u00e4hendab konfiguratsioonivigu</p> <p>Loome Apache virtual host template'i sammhaaval:</p> <ol> <li> <p>Looge template fail: <pre><code>touch templates/apache_vhost.conf.j2\nnano templates/apache_vhost.conf.j2\n</code></pre></p> </li> <li> <p>Alustage p\u00f5histruktuuriga: <pre><code># {{ ansible_managed }}\n# Virtual Host for {{ item.name }}\n# Generated on {{ ansible_date_time.iso8601 }}\n\n&lt;VirtualHost *:{{ http_port }}&gt;\n    ServerName {{ item.name }}\n    DocumentRoot {{ item.document_root }}\n</code></pre></p> </li> <li> <p>Lisage conditionals: <pre><code>    # Logging configuration\n    {% if debug_mode %}\n    LogLevel debug\n    {% else %}\n    LogLevel warn\n    {% endif %}\n\n    ErrorLog ${APACHE_LOG_DIR}/{{ item.name }}_error.log\n    CustomLog ${APACHE_LOG_DIR}/{{ item.name }}_access.log combined\n</code></pre></p> </li> <li> <p>Lisage keskkonna-spetsiifilised seadistused: <pre><code>    &lt;Directory {{ item.document_root }}&gt;\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Require all granted\n\n        {% if app_env == 'production' %}\n        # Production security headers\n        Header always set X-Frame-Options DENY\n        Header always set X-Content-Type-Options nosniff\n        Header always set X-XSS-Protection \"1; mode=block\"\n        {% endif %}\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre></p> </li> <li> <p>Lisage SSL support (conditional): <pre><code>{% if item.ssl_enabled and ssl_enabled %}\n# SSL Virtual Host\n&lt;VirtualHost *:{{ https_port }}&gt;\n    ServerName {{ item.name }}\n    DocumentRoot {{ item.document_root }}\n\n    # SSL Configuration\n    SSLEngine on\n    SSLProtocol TLSv1.2 TLSv1.3\n\n    # SSL Certificates (will come from vault)\n    SSLCertificateFile {{ ssl_cert_path | default('/etc/ssl/certs/server.crt') }}\n    SSLCertificateKeyFile {{ ssl_key_path | default('/etc/ssl/private/server.key') }}\n&lt;/VirtualHost&gt;\n{% endif %}\n</code></pre></p> </li> </ol> <p>\ud83e\udd14 Anal\u00fc\u00fcs: Kuidas template aitab hallata erinevaid keskkondi (dev vs prod)?</p>"},{"location":"ansible_advanced/lab/#22-mysql-konfiguratsioon-template","title":"2.2: MySQL konfiguratsioon template","text":"<p>Loome MySQL template'i sammhaaval:</p> <ol> <li> <p>Looge MySQL template: <pre><code>touch templates/mysql.cnf.j2\nnano templates/mysql.cnf.j2\n</code></pre></p> </li> <li> <p>Lisage d\u00fcnaamiline konfiguratsioon: <pre><code># {{ ansible_managed }}\n# MySQL Configuration for {{ inventory_hostname }}\n# Environment: {{ app_env }}\n\n[mysqld]\n# Basic settings\nport = {{ mysql_port }}\nbind-address = {{ mysql_bind_address }}\n\n# Performance tuning based on available memory\ninnodb_buffer_pool_size = {{ mysql_innodb_buffer_pool_size }}\nmax_connections = {{ mysql_max_connections }}\n\n# Environment-specific settings\n{% if app_env == 'production' %}\n# Production optimizations\ninnodb_flush_log_at_trx_commit = 1\nsync_binlog = 1\n{% else %}\n# Development settings (faster but less safe)\ninnodb_flush_log_at_trx_commit = 2\nsync_binlog = 0\n{% endif %}\n\n# Logging\n{% if debug_mode %}\ngeneral_log = 1\ngeneral_log_file = /var/log/mysql/general.log\nslow_query_log = 1\nslow_query_log_file = /var/log/mysql/slow.log\nlong_query_time = 1\n{% endif %}\n</code></pre></p> </li> </ol>"},{"location":"ansible_advanced/lab/#23-php-konfiguratsioon-template","title":"2.3: PHP konfiguratsioon template","text":"<p>Looge PHP-FPM template:</p> <ol> <li> <p>Looge PHP template: <pre><code>touch templates/php-fpm.conf.j2\nnano templates/php-fpm.conf.j2\n</code></pre></p> </li> <li> <p>Lisage d\u00fcnaamilised seadistused: <pre><code># {{ ansible_managed }}\n# PHP-FPM pool configuration\n\n[{{ app_name }}]\nuser = www-data\ngroup = www-data\n\nlisten = /var/run/php/php{{ php_version }}-fpm-{{ app_name }}.sock\nlisten.owner = www-data\nlisten.group = www-data\nlisten.mode = 0660\n\n# Process management\npm = dynamic\npm.max_children = {{ ansible_processor_vcpus * 4 }}\npm.start_servers = {{ ansible_processor_vcpus }}\npm.min_spare_servers = {{ ansible_processor_vcpus }}\npm.max_spare_servers = {{ ansible_processor_vcpus * 2 }}\n\n# PHP settings\nphp_admin_value[memory_limit] = {{ php_memory_limit }}\nphp_admin_value[max_execution_time] = {{ php_max_execution_time }}\nphp_admin_value[upload_max_filesize] = 32M\nphp_admin_value[post_max_size] = 32M\n\n{% if app_env == 'development' %}\n# Development settings\nphp_admin_flag[display_errors] = on\nphp_admin_value[error_reporting] = E_ALL\n{% else %}\n# Production settings\nphp_admin_flag[display_errors] = off\nphp_admin_value[error_reporting] = E_ERROR\n{% endif %}\n</code></pre></p> </li> </ol>"},{"location":"ansible_advanced/lab/#samm-3-handlers-ja-advanced-playbook-30-min","title":"\ud83d\udccb Samm 3: Handlers ja Advanced Playbook (30 min)","text":""},{"location":"ansible_advanced/lab/#31-playbook-handlersitega","title":"3.1: Playbook handlers'itega","text":"<p>Loome t\u00e4iustatud playbook'i sammhaaval:</p> <ol> <li> <p>Looge p\u00f5hi playbook: <pre><code>touch playbooks/site.yml\nnano playbooks/site.yml\n</code></pre></p> </li> <li> <p>Lisage playbook struktuur: <pre><code>---\n- name: \"LAMP Stack Deployment with Advanced Configuration\"\n  hosts: all\n  become: yes\n  gather_facts: yes\n\n  tasks:\n    - name: \"Update package cache\"\n      package:\n        update_cache: yes\n      when: ansible_os_family == \"Debian\"\n</code></pre></p> </li> <li> <p>Lisage Apache seadistamine handlers'itega: <pre><code>    - name: \"Install Apache\"\n      package:\n        name: \"{{ apache_package }}\"\n        state: present\n      notify:\n        - \"start apache\"\n        - \"enable apache\"\n\n    - name: \"Create virtual host directories\"\n      file:\n        path: \"{{ item.document_root }}\"\n        state: directory\n        owner: www-data\n        group: www-data\n        mode: '0755'\n      loop: \"{{ virtual_hosts }}\"\n      when: virtual_hosts is defined\n\n    - name: \"Generate virtual host configurations\"\n      template:\n        src: apache_vhost.conf.j2\n        dest: \"/etc/apache2/sites-available/{{ item.name }}.conf\"\n        backup: yes\n      loop: \"{{ virtual_hosts }}\"\n      notify: \"reload apache\"\n      when: virtual_hosts is defined\n\n    - name: \"Enable virtual hosts\"\n      command: \"a2ensite {{ item.name }}\"\n      args:\n        creates: \"/etc/apache2/sites-enabled/{{ item.name }}.conf\"\n      loop: \"{{ virtual_hosts }}\"\n      notify: \"reload apache\"\n      when: virtual_hosts is defined\n</code></pre></p> </li> <li> <p>Lisage handlers sektsioon: <pre><code>  handlers:\n    - name: \"start apache\"\n      service:\n        name: \"{{ apache_package }}\"\n        state: started\n\n    - name: \"enable apache\"\n      service:\n        name: \"{{ apache_package }}\"\n        enabled: yes\n\n    - name: \"reload apache\"\n      service:\n        name: \"{{ apache_package }}\"\n        state: reloaded\n\n    - name: \"restart apache\"\n      service:\n        name: \"{{ apache_package }}\"\n        state: restarted\n</code></pre></p> </li> </ol> <p>\ud83d\udcad M\u00f5elge: Miks kasutame <code>reload</code> mitte <code>restart</code>? Mis vahe on?</p>"},{"location":"ansible_advanced/lab/#32-testimine","title":"3.2: Testimine","text":"<p>Testida konfiguratsiooni:</p> <ol> <li> <p>Syntax check: <pre><code>ansible-playbook --syntax-check playbooks/site.yml\n</code></pre></p> </li> <li> <p>Kuiv k\u00e4ivitus: <pre><code>ansible-playbook --check -i inventory/hosts.yml playbooks/site.yml\n</code></pre></p> </li> <li> <p>Template'i testimine: <pre><code>ansible-playbook -i inventory/hosts.yml playbooks/site.yml --tags \"config\" -v\n</code></pre></p> </li> </ol>"},{"location":"ansible_advanced/lab/#samm-4-ansible-vault-rakendamine-35-min","title":"\ud83d\udccb Samm 4: Ansible Vault rakendamine (35 min)","text":""},{"location":"ansible_advanced/lab/#41-vault-failide-loomine","title":"4.1: Vault failide loomine","text":"<p>Loome turvalist vault struktuuri:</p> <ol> <li> <p>Looge vault fail group_vars jaoks: <pre><code>ansible-vault create group_vars/all/vault.yml\n</code></pre></p> </li> <li> <p>Lisage tundlikud andmed: <pre><code># Database credentials\nvault_mysql_root_password: \"SecureRootPassword123!\"\nvault_mysql_app_password: \"AppPassword456!\"\n\n# SSL certificates paths\nvault_ssl_cert_path: \"/etc/ssl/certs/company.crt\"\nvault_ssl_key_path: \"/etc/ssl/private/company.key\"\n\n# API keys\nvault_backup_api_key: \"backup_api_key_here\"\nvault_monitoring_token: \"monitoring_token_here\"\n\n# Admin passwords\nvault_admin_password: \"AdminSecurePass789!\"\n</code></pre></p> </li> <li> <p>Looge production-spetsiifiline vault: <pre><code>ansible-vault create group_vars/production/vault.yml\n</code></pre></p> </li> </ol> <pre><code># Production SSL certificates\nvault_ssl_cert_content: |\n  -----BEGIN CERTIFICATE-----\n  [certificate content here]\n  -----END CERTIFICATE-----\n\nvault_ssl_key_content: |\n  -----BEGIN PRIVATE KEY-----\n  [private key content here]\n  -----END PRIVATE KEY-----\n\n# Production database settings\nvault_production_db_host: \"prod-db.company.com\"\nvault_production_db_password: \"ProdDbPass123!\"\n</code></pre>"},{"location":"ansible_advanced/lab/#42-vault-muutujate-kasutamine","title":"4.2: Vault muutujate kasutamine","text":"<p>\u00dchendame vault muutujad tavaliste muutujatega:</p> <ol> <li>Uuendage group_vars/all/vars.yml: <pre><code>nano group_vars/all/vars.yml\n</code></pre></li> </ol> <pre><code># Lisage vault viited\nmysql_root_password: \"{{ vault_mysql_root_password }}\"\nmysql_app_password: \"{{ vault_mysql_app_password }}\"\nssl_cert_path: \"{{ vault_ssl_cert_path }}\"\nssl_key_path: \"{{ vault_ssl_key_path }}\"\nadmin_password: \"{{ vault_admin_password }}\"\n</code></pre> <ol> <li>Uuendage MySQL template'i: <pre><code>nano templates/mysql.cnf.j2\n</code></pre></li> </ol> <pre><code># Lisage vault-p\u00f5hised seadistused\n{% if app_env == 'production' %}\n# Production SSL settings\nssl-ca={{ vault_ssl_cert_path }}\nssl-cert={{ vault_ssl_cert_path }}\nssl-key={{ vault_ssl_key_path }}\n{% endif %}\n</code></pre>"},{"location":"ansible_advanced/lab/#43-vault-kasitsikasutatavus","title":"4.3: Vault k\u00e4sitsikasutatavus","text":"<p>Vault operatsioonid:</p> <ol> <li> <p>Vaata vault faili: <pre><code>ansible-vault view group_vars/all/vault.yml\n</code></pre></p> </li> <li> <p>Muuda vault faili: <pre><code>ansible-vault edit group_vars/production/vault.yml\n</code></pre></p> </li> <li> <p>K\u00e4ivita playbook vault'iga: <pre><code>ansible-playbook -i inventory/hosts.yml playbooks/site.yml --ask-vault-pass\n</code></pre></p> </li> <li> <p>V\u00f5i kasuta vault password faili: <pre><code>echo \"your_vault_password\" &gt; .vault_pass\nchmod 600 .vault_pass\nansible-playbook -i inventory/hosts.yml playbooks/site.yml --vault-password-file .vault_pass\n</code></pre></p> </li> </ol> <p>\ud83d\udd10 Turvalisus: \u00c4ra iial commiti <code>.vault_pass</code> faili Git'i!</p>"},{"location":"ansible_advanced/lab/#samm-2-labi-kontrollnimekiri","title":"\ud83c\udfaf Samm 2: Labi kontrollnimekiri","text":"<p>Veenduge, et olete l\u00f5petanud:</p>"},{"location":"ansible_advanced/lab/#struktuur-ja-organisatsioon","title":"Struktuur ja organisatsioon","text":"<ul> <li> Organiseeritud projektinstruktuur - kaustad organiseeritud</li> <li> Inventory hierarhia - serverid grupeeritud ja konfigureeritud</li> <li> Muutujate hierarhia - group_vars ja host_vars seadistatud</li> </ul>"},{"location":"ansible_advanced/lab/#templateid-ja-konfiguratsioon","title":"Template'id ja konfiguratsioon","text":"<ul> <li> Apache virtual host template - d\u00fcnaamiline ja keskkonna-p\u00f5hine</li> <li> MySQL konfiguratsioon template - tulemuste optimeeritud</li> <li> PHP-FPM template - performance tuned</li> </ul>"},{"location":"ansible_advanced/lab/#playbookid-ja-handlers","title":"Playbook'id ja handlers","text":"<ul> <li> Advanced playbook - template'id, loops, conditionals</li> <li> Proper handlers - efficient service management</li> <li> Error handling - backup ja validation</li> </ul>"},{"location":"ansible_advanced/lab/#vault-ja-turvalisus","title":"Vault ja turvalisus","text":"<ul> <li> Vault failid loodud - tundlikud andmed kr\u00fcpteeritud</li> <li> Vault integratsioon - muutujad \u00fchendatud</li> <li> Turvaline workflow - .vault_pass ei commitit\u00e5</li> </ul>"},{"location":"ansible_advanced/lab/#testing-ja-validation","title":"Testing ja validation","text":"<ul> <li> Syntax check - playbook'id valid</li> <li> Dry run - --check mode t\u00f6\u00f6tab</li> <li> Template testing - konfiguratsioonid genereeruvad \u00f5igesti</li> </ul>"},{"location":"ansible_advanced/lab/#jargmised-sammud","title":"\ud83d\ude80 J\u00e4rgmised sammud","text":"<p>Valmis kodut\u00f6\u00f6ks: - Kasutage siin \u00f5pitud advanced pattern'e - Rakendage vault'i k\u00f5ikides tootmise playbook'ides - Organiseerige projektide struktuuri professionaalselt</p> <p>J\u00e4rgmine n\u00e4dal: - Ansible Roles ja Galaxy - Automated testing strategies - Enterprise deployment patterns</p> <p>H\u00e4sti tehtud! \ud83c\udf89 Te oskate n\u00fc\u00fcd luua production-ready Ansible projekte!</p>"},{"location":"ansible_advanced/lecture/","title":"\ud83d\udcda Ansible Advanced: Edasij\u00f5udnud Funktsioonid","text":"<p>Kestus: 4 tundi Teemad: Variables, Templates, Handlers, Vault</p>"},{"location":"ansible_advanced/lecture/#opivaljundid","title":"\ud83c\udfaf \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast seda n\u00e4dalat oskate: - Hallata keerukamaid muutujaid ja nende hierarhiat - Luua d\u00fcnaamilisi konfiguratsioone Jinja2 template'itega - Kasutada handler'eid efektiivseks teenuste haldamiseks - Rakendada Ansible Vault'i tundlike andmete kaitsmiseks - J\u00e4rgida Ansible best practice'sid</p>"},{"location":"ansible_advanced/lecture/#loeng-131-variables-ja-variable-precedence-20-min","title":"\ud83d\udcd6 Loeng 13.1: Variables ja Variable Precedence (20 min)","text":""},{"location":"ansible_advanced/lecture/#muutujate-hierarhia","title":"Muutujate hierarhia","text":"<p>Ansible'is on muutujatel kindel prioriteedi j\u00e4rjekord:</p> <pre><code>graph TD\n    A[1. Command line&lt;br/&gt;-e, --extra-vars] --&gt; B[2. Task variables&lt;br/&gt;task sees]\n    B --&gt; C[3. Block variables&lt;br/&gt;block sees]\n    C --&gt; D[4. Role variables&lt;br/&gt;role/vars/main.yml]\n    D --&gt; E[5. Play variables&lt;br/&gt;playbook sees]\n    E --&gt; F[6. Host variables&lt;br/&gt;host_vars/]\n    F --&gt; G[7. Group variables&lt;br/&gt;group_vars/]\n    G --&gt; H[8. Role defaults&lt;br/&gt;role/defaults/main.yml]\n\n    style A fill:#ff9999\n    style B fill:#ffcc99\n    style C fill:#ffff99\n    style D fill:#99ff99\n    style E fill:#99ccff\n    style F fill:#cc99ff\n    style G fill:#ff99cc\n    style H fill:#99ffcc</code></pre> <ol> <li>Command line (<code>-e</code>, <code>--extra-vars</code>)</li> <li>Task variables (task sees)</li> <li>Block variables (block sees)</li> <li>Role variables (role/vars/main.yml)</li> <li>Play variables (playbook sees)</li> <li>Host variables (host_vars/)</li> <li>Group variables (group_vars/)</li> <li>Role defaults (role/defaults/main.yml)</li> </ol> <p>N\u00e4ide muutujate konfliktist:</p> <pre><code># group_vars/all.yml\nserver_port: 80\n\n# host_vars/webserver1.yml  \nserver_port: 8080\n\n# playbook.yml\n- name: \"Server setup\"\n  vars:\n    server_port: 3000\n  debug:\n    msg: \"Port will be: {{ server_port }}\"  # Tulemus: 3000\n</code></pre> <p>\ud83e\udd14 Realiteedikontroll: Kui teil on 100 serverit ja igal on erinev konfiguratsioon, kuidas te seda ilma muutujate hierarhiata hallaksite?</p>"},{"location":"ansible_advanced/lecture/#faktide-kasutamine","title":"Faktide kasutamine","text":"<p>Ansible kogub automaatselt s\u00fcsteemi infot:</p> <pre><code>- name: \"N\u00e4ita s\u00fcsteemi faktid\"\n    debug:\n    msg:\n      - \"OS: {{ ansible_os_family }}\"\n      - \"Memory: {{ ansible_memtotal_mb }}MB\"\n      - \"CPU cores: {{ ansible_processor_vcpus }}\"\n      - \"IP: {{ ansible_default_ipv4.address }}\"\n</code></pre>"},{"location":"ansible_advanced/lecture/#registered-variables","title":"Registered variables","text":"<p>Salvestage k\u00e4su tulemusi:</p> <pre><code>- name: \"Kontrolli Apache staatust\"\n  shell: \"systemctl is-active apache2\"\n  register: apache_status\n  failed_when: false\n\n- name: \"Tegevus Apache staatuse p\u00f5hjal\"\n    debug:\n    msg: \"Apache on {{ apache_status.stdout }}\"\n  when: apache_status.rc == 0\n</code></pre>"},{"location":"ansible_advanced/lecture/#loeng-132-jinja2-templates-18-min","title":"\ud83d\udcd6 Loeng 13.2: Jinja2 Templates (18 min)","text":""},{"location":"ansible_advanced/lecture/#templateite-pohitoed","title":"Template'ite p\u00f5hit\u00f5ed","text":"<p>Jinja2 v\u00f5imaldab luua d\u00fcnaamilisi faile:</p> <pre><code># Playbook task\n- name: \"Genereeri konfiguratsioon\"\n  template:\n    src: app.conf.j2\n    dest: /etc/app/config.conf\n</code></pre> <p>Template fail (<code>templates/app.conf.j2</code>): <pre><code># {{ ansible_managed }}\nserver_name = {{ inventory_hostname }}\nport = {{ server_port | default(80) }}\ndebug = {{ debug_mode | default(false) | lower }}\n\n# Environment specific\n{% if environment == 'production' %}\nlog_level = ERROR\ncache_enabled = true\n{% else %}\nlog_level = DEBUG\ncache_enabled = false\n    {% endif %}\n</code></pre></p> <p>\u2753 K\u00fcsimus: Miks on kasulik kasutada <code>{{ ansible_managed }}</code> kommentaari template'i alguses?</p>"},{"location":"ansible_advanced/lecture/#conditionals-templateites","title":"Conditionals template'ites","text":"<pre><code>{% if ansible_os_family == \"Debian\" %}\npackage_manager = apt\n{% elif ansible_os_family == \"RedHat\" %}\npackage_manager = yum\n{% else %}\npackage_manager = unknown\n{% endif %}\n\n# Inline conditionals\nservice_port = {{ 443 if ssl_enabled else 80 }}\n</code></pre> <p>\ud83e\udd14 M\u00f5elge: Kuidas aitavad conditionals hallata erinevaid operatsioonis\u00fcsteeme \u00fches template'is?</p>"},{"location":"ansible_advanced/lecture/#loops-templateites","title":"Loops template'ites","text":"<pre><code># Virtual hosts\n{% for host in virtual_hosts %}\n&lt;VirtualHost *:{{ host.port }}&gt;\n    ServerName {{ host.name }}\n    DocumentRoot {{ host.document_root }}\n    {% if host.ssl_enabled | default(false) %}\n    SSLEngine on\n    SSLCertificateFile {{ host.ssl_cert }}\n    {% endif %}\n&lt;/VirtualHost&gt;\n{% endfor %}\n\n# Database users\n{% for user in database_users %}\nCREATE USER '{{ user.name }}'@'{{ user.host }}' IDENTIFIED BY '{{ user.password }}';\nGRANT {{ user.privileges | join(', ') }} ON {{ user.database }}.* TO '{{ user.name }}'@'{{ user.host }}';\n{% endfor %}\n</code></pre> <p>\u2753 V\u00f5rdlus: V\u00f5rrelge template'i kasutamist staatilise konfiguratsiooniga. Millised on eelised ja puudused?</p>"},{"location":"ansible_advanced/lecture/#filters","title":"Filters","text":"<pre><code># String manipulation\nserver_name = {{ inventory_hostname | upper }}\nconfig_file = {{ app_name | lower }}.conf\n\n# Number operations\nmemory_limit = {{ (ansible_memtotal_mb * 0.8) | int }}M\nworker_processes = {{ ansible_processor_vcpus | default(1) }}\n\n# List operations\npackages = {{ required_packages | join(' ') }}\nfirst_server = {{ groups['webservers'] | first }}\n\n# JSON/YAML\nconfig = {{ app_config | to_nice_json }}\n</code></pre> <p>\ud83d\udca1 Praktiline nipp: Kasutage <code>| default()</code> filter'it vaikev\u00e4\u00e4rtuste m\u00e4\u00e4ramiseks template'ites.</p>"},{"location":"ansible_advanced/lecture/#loeng-133-handlers-ja-notifications-15-min","title":"\ud83d\udcd6 Loeng 13.3: Handlers ja Notifications (15 min)","text":""},{"location":"ansible_advanced/lecture/#handlerite-pohitoed","title":"Handler'ite p\u00f5hit\u00f5ed","text":"<p>Handler'id k\u00e4ivituvad ainult siis, kui task teeb muudatusi:</p> <pre><code>tasks:\n  - name: \"Uuenda Apache konfiguratsioon\"\n    template:\n      src: apache.conf.j2\n        dest: /etc/apache2/apache2.conf\n      notify: \"restart apache\"\n\n  - name: \"Lisa virtual host\"\n      template:\n        src: vhost.conf.j2\n        dest: \"/etc/apache2/sites-available/{{ site_name }}.conf\"\n    notify:\n      - \"enable site\"\n      - \"reload apache\"\n\n  handlers:\n    - name: \"restart apache\"\n      service:\n        name: apache2\n        state: restarted\n\n    - name: \"reload apache\"\n      service:\n        name: apache2\n        state: reloaded\n\n  - name: \"enable site\"\n    command: \"a2ensite {{ site_name }}\"\n</code></pre> <p>\ud83e\udd14 M\u00f5elge: Miks kasutada <code>reload</code> mitte <code>restart</code>? Millal on vahe oluline?</p>"},{"location":"ansible_advanced/lecture/#handlerite-taiustatud-kasutamine","title":"Handler'ite t\u00e4iustatud kasutamine","text":"<p>Listen groups: <pre><code>tasks:\n  - name: \"Uuenda PHP konfiguratsioon\"\n    template:\n      src: php.ini.j2\n      dest: /etc/php/7.4/fpm/php.ini\n    notify: \"restart web services\"\n\n  - name: \"Uuenda Apache konfiguratsioon\"\n    template:\n      src: apache.conf.j2\n      dest: /etc/apache2/apache2.conf\n    notify: \"restart web services\"\n\nhandlers:\n  - name: \"restart php-fpm\"\n    service:\n      name: php7.4-fpm\n      state: restarted\n    listen: \"restart web services\"\n\n  - name: \"restart apache\"\n    service:\n      name: apache2\n      state: restarted\n    listen: \"restart web services\"\n</code></pre></p> <p>\u2753 K\u00fcsimus: Mis j\u00e4rjekorras k\u00e4ivituvad handler'id ja miks see on oluline?</p> <p>\ud83c\udfaf Praktikaasoovitus: Kasutage <code>meta: flush_handlers</code> kriitiliste kontrollidel, kui peate veenduma, et teenus on taask\u00e4ivitatud enne j\u00e4rgmisi task'e.</p>"},{"location":"ansible_advanced/lecture/#loeng-134-ansible-vault-secrets-25-min","title":"\ud83d\udcd6 Loeng 13.4: Ansible Vault Secrets (25 min)","text":""},{"location":"ansible_advanced/lecture/#vaulti-pohitoed","title":"Vault'i p\u00f5hit\u00f5ed","text":"<p>Ansible Vault kr\u00fcpteerib tundlikud andmed:</p> <pre><code># Loo kr\u00fcpteeritud fail\nansible-vault create secrets.yml\n\n# Muuda kr\u00fcpteeritud faili\nansible-vault edit secrets.yml\n\n# Vaata kr\u00fcpteeritud faili\nansible-vault view secrets.yml\n\n# Kr\u00fcpteeri olemasolev fail\nansible-vault encrypt plaintext.yml\n\n# Dekr\u00fcpteeri fail\nansible-vault decrypt secrets.yml\n</code></pre> <p>N\u00e4ide vault failis: <pre><code># secrets.yml (kr\u00fcpteeritud)\nvault_db_password: \"supersecretpassword123\"\nvault_api_key: \"abc123def456ghi789\"\nvault_ssl_private_key: |\n  -----BEGIN PRIVATE KEY-----\n  [private key content]\n  -----END PRIVATE KEY-----\n</code></pre></p> <p>\ud83d\udca1 Turvanipp: Vault'i parool peaks olema v\u00e4hemalt 12 t\u00e4hem\u00e4rki ja sisaldama erinevaid s\u00fcmboleid.</p>"},{"location":"ansible_advanced/lecture/#vaulti-kasutamine-playbookides","title":"Vault'i kasutamine playbook'ides","text":"<pre><code># group_vars/production/vault.yml (kr\u00fcpteeritud)\nvault_mysql_root_password: \"production_mysql_secret\"\nvault_app_secret_key: \"prod_app_key_123456\"\n\n# group_vars/production/vars.yml (avatud)\nmysql_root_password: \"{{ vault_mysql_root_password }}\"\napp_secret_key: \"{{ vault_app_secret_key }}\"\nenvironment: \"production\"\n</code></pre> <p>Playbook k\u00e4ivitamine: <pre><code># K\u00fcsi parooli\nansible-playbook site.yml --ask-vault-pass\n\n# Kasuta parool faili\necho \"mypassword\" &gt; .vault_pass\nansible-playbook site.yml --vault-password-file .vault_pass\n</code></pre></p> <p>\ud83e\udd14 M\u00f5elge: Kuidas saaksite organisatsioonis turvaliselt jagada vault paroole?</p>"},{"location":"ansible_advanced/lecture/#multiple-vault-passwords","title":"Multiple vault passwords","text":"<pre><code># Erinev vault erinevale keskkonnale\nansible-vault create --vault-id prod@prompt production-secrets.yml\nansible-vault create --vault-id dev@prompt development-secrets.yml\n\n# K\u00e4ivitamine\nansible-playbook site.yml --vault-id prod@prompt --vault-id dev@prompt\n</code></pre>"},{"location":"ansible_advanced/lecture/#vault-parooli-haldamine","title":"Vault parooli haldamine","text":"<p>Environment variable: <pre><code>export ANSIBLE_VAULT_PASSWORD=mypassword\nansible-playbook site.yml\n</code></pre></p> <p>Script'iga: <pre><code>#!/bin/bash\n# vault_pass.sh\necho \"my_secret_password\"\n\nchmod +x vault_pass.sh\nansible-playbook site.yml --vault-password-file vault_pass.sh\n</code></pre></p> <p>\u2753 K\u00fcsimus: Mis probleeme v\u00f5ib tekkida vault paroolide haldamisel meeskonnat\u00f6\u00f6s?</p>"},{"location":"ansible_advanced/lecture/#vaulti-rekey","title":"Vault'i rekey","text":"<pre><code># Muuda vault parooli\nansible-vault rekey secrets.yml\n\n# Muuda spetsiifilise vault'i parooli\nansible-vault rekey --vault-id old@prompt --new-vault-id new@prompt secrets.yml\n</code></pre> <p>\ud83d\udca1 Praktiline nipp: Regulaarselt muutge vault paroole ja dokumenteerige rotatsiooni protseduuri.</p>"},{"location":"ansible_advanced/lecture/#best-practices","title":"Best practices","text":"<ol> <li>Vault failide organisatsioon: <pre><code>group_vars/\n\u251c\u2500\u2500 all/\n\u2502   \u251c\u2500\u2500 vars.yml          # Avalikud muutujad\n\u2502   \u2514\u2500\u2500 vault.yml         # Kr\u00fcpteeritud saladused\n\u251c\u2500\u2500 production/\n\u2502   \u251c\u2500\u2500 vars.yml\n\u2502   \u2514\u2500\u2500 vault.yml\n\u2514\u2500\u2500 development/\n    \u251c\u2500\u2500 vars.yml\n    \u2514\u2500\u2500 vault.yml\n</code></pre></li> </ol> <p>\ud83e\udd14 M\u00f5elge: Kuidas organiseerida vault faile nii, et oleks selge, millised andmed on kr\u00fcpteeritud ja millised mitte?</p> <ol> <li>Vault rotatsiooni strateegi</li> </ol> <pre><code># Regulaarne parooli vahetamine (n\u00e4iteks kvartaalselt)\n# 1. Loo uus vault parool\nansible-vault rekey --new-vault-password-file new_password production-secrets.yml\n\n# 2. Uuenda CI/CD s\u00fcsteemid uue parooliga\n# 3. Teavita meeskonda muudatusest\n# 4. Eemalda vana parool k\u00f5igist s\u00fcsteemidest\n</code></pre>"},{"location":"ansible_advanced/lecture/#lab-template-based-configuration","title":"\ud83e\uddea Lab: Template-based Configuration","text":"<p>K\u00e4ed-k\u00fcljes praktikum Ansible'i t\u00e4psemate funktsioonidega tutvumiseks.</p> <p>\ud83d\udcc1 Vaata: lab.md</p> <p>Sisaldab: - Advanced variables setup - Jinja2 template'ite loomine - Handlers ja advanced playbook'id - Ansible Vault rakendamine</p>"},{"location":"ansible_advanced/lecture/#kokkuvote-week-13-advanced-ansible","title":"Kokkuv\u00f5te: Week 13 Advanced Ansible","text":"<p>Selles n\u00e4dalas \u00f5ppisime:</p>"},{"location":"ansible_advanced/lecture/#peamised-teemad","title":"\ud83c\udfaf Peamised teemad:","text":"<ol> <li>Variables ja Precedence</li> <li>Muutujate hierarhia ja prioriteedid</li> <li>Group_vars ja host_vars</li> <li>Runtime muutujad ja extra_vars</li> <li> <p>Facts ja registered variables</p> </li> <li> <p>Jinja2 Templates</p> </li> <li>D\u00fcnaamiliste konfiguratsioonide loomine</li> <li>Conditional logic template'ites</li> <li>Loops ja filters</li> <li> <p>Environment-specific configurations</p> </li> <li> <p>Handlers ja Notifications</p> </li> <li>Smart service management</li> <li>Handler precedence ja timing</li> <li>Listen groups ja meta tasks</li> <li> <p>Error handling ja recovery</p> </li> <li> <p>Ansible Vault</p> </li> <li>Secrets encryption ja decryption</li> <li>Vault files vs inline vault</li> <li>Multiple vault passwords</li> <li>CI/CD integration strategies</li> </ol>"},{"location":"ansible_advanced/lecture/#praktilised-oskused","title":"\ud83d\udd27 Praktilised oskused:","text":"<ul> <li>Advanced playbook architecture</li> <li>Production-ready template'ite loomine</li> <li>Secure password management</li> <li>Multi-environment deployments</li> <li>Professional project structure</li> </ul>"},{"location":"ansible_advanced/lecture/#jargmiseks-nadalaks","title":"\ud83d\udcda J\u00e4rgmiseks n\u00e4dalaks:","text":"<p>Enne j\u00e4rgmist loengut (Ansible Roles ja Puppet): 1. L\u00f5petage kodut\u00f6\u00f6 - lihtne vault ja template'id projekt 2. Lugege Ansible Galaxy documentation 3. Tutvuge Puppet vs Ansible comparison'iga 4. M\u00f5elge, kuidas teete oma infrastruktuuri korduvkasutatavaks</p> <p>\ud83c\udfaf V\u00e4ljakutse: Proovige rakendada siin \u00f5pitud template'e ja vault'i oma kodut\u00f6\u00f6s!</p> <p>K\u00fcsimused? K\u00fcsige julgelt j\u00e4rgmisel loengul v\u00f5i kursuse chat'is!</p>"},{"location":"ansible_basics/homework/","title":"\ud83d\udcdd N\u00e4dal 11 Kodut\u00f6\u00f6: LAMP Stack Playbook","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: \u00d5ppida Ansible playbook'i loomist praktiliselt ja iseseisvalt Aeg: 2-3 tundi lahendamist ja uurimist</p>"},{"location":"ansible_basics/homework/#ulesande-kirjeldus","title":"\ud83c\udfaf \u00dclesande kirjeldus","text":"<p>See kodut\u00f6\u00f6 ei anna valmis koodi - see annab probleemid lahendamiseks! Kasutage lab'is \u00f5pitud oskusi ja Ansible dokumentatsiooni, et ehitada LAMP stack samm-sammult.</p> <p>P\u00f5him\u00f5te: Igal sammul antakse \u00fclesanne, kontrollviis ja n\u00f5uanded. Kood peate ise kirjutama!</p>"},{"location":"ansible_basics/homework/#projekti-seadistamine-enne-alustamist","title":"\ud83d\udccb Projekti seadistamine (enne alustamist)","text":""},{"location":"ansible_basics/homework/#ulesanne-1-looge-projekti-struktuur","title":"\u00dclesanne 1: Looge projekti struktuur","text":"<p>Mida vaja teha: Looge j\u00e4rgmine kataloogide ja failide struktuur (kasutage <code>mkdir</code> ja <code>touch</code> k\u00e4ske):</p> <pre><code>ansible-lamp/\n\u251c\u2500\u2500 inventory/\n\u2502   \u2514\u2500\u2500 hosts.yml\n\u251c\u2500\u2500 group_vars/\n\u2502   \u2514\u2500\u2500 webservers.yml  \n\u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 (failid lisate hiljem)\n\u251c\u2500\u2500 lamp-stack.yml\n\u251c\u2500\u2500 ansible.cfg\n\u2514\u2500\u2500 README.md\n</code></pre> <p>Kontroll: <code>tree ansible-lamp</code> peaks n\u00e4itama \u00f5iget struktuuri</p> <p>\u2753 K\u00fcsimus: Miks kasutame group_vars/ kausta? (Vastake README.md'sse)</p>"},{"location":"ansible_basics/homework/#probleem-1-inventory-seadistamine","title":"\ud83d\udcdd Probleem 1: Inventory seadistamine","text":""},{"location":"ansible_basics/homework/#ulesanne-11-inventory-fail","title":"\u00dclesanne 1.1: Inventory fail","text":"<p>Probleem: Vajate inventory faili, mis t\u00f6\u00f6tab nii localhost'iga kui ka teise serveriga.</p> <p>N\u00f5uded: - Looge YAML formaat inventory (kasutage lab'is \u00f5pitut) - Gruppi nimi: <code>webservers</code> - Localhost peab kasutama <code>ansible_connection: local</code> - J\u00e4tke kommentaaridesse n\u00e4ide teise serveri lisamiseks</p> <p>Fail: <code>inventory/hosts.yml</code></p> <p>Kontroll: <code>ansible-inventory --list</code> peaks n\u00e4itama teie servereid</p> <p>\ud83d\udd0d Uurige: K\u00e4ivitage <code>ansible webservers -m ping</code> - kas t\u00f6\u00f6tab?</p>"},{"location":"ansible_basics/homework/#ulesanne-12-muutujate-defineerimine","title":"\u00dclesanne 1.2: Muutujate defineerimine","text":"<p>Probleem: LAMP stack vajab palju konfiguratsiooni. Kus muutujaid hoida?</p> <p>N\u00f5uded: Looge <code>group_vars/webservers.yml</code> ja defineerige: - MySQL root parool - Rakenduse andmebaasi nimi - Rakenduse kasutaja nimi ja parool - PHP pakettide loend - Document root tee - Rakenduse nimi ja versioon</p> <p>\ud83d\udca1 N\u00e4pun\u00e4ide: Vaadake lab'i n\u00e4iteid muutujate kohta</p> <p>\u2753 M\u00f5elge: Millised muutujad peaksid olema \"salajased\"? Kuidas neid hiljem kaitsta?</p> <p>Kontroll: <code>ansible webservers -m debug -a \"var=hostvars[inventory_hostname]\"</code> - kas n\u00e4ete oma muutujaid?</p>"},{"location":"ansible_basics/homework/#probleem-2-vigane-playbook-parandamine","title":"\ud83d\udcdd Probleem 2: Vigane playbook parandamine","text":""},{"location":"ansible_basics/homework/#ulesanne-21-parandage-see-vigane-playbook","title":"\u00dclesanne 2.1: Parandage see vigane playbook","text":"<p>Antud on vigane playbook algus. Leidke ja parandage vead:</p> <pre><code>---\n- name: LAMP Stack Setup\n  hosts: all                    # &lt;- VIGA 1: vale grupp\n  become: true\n\n  tasks:\n    - name: Update cache\n      package:\n        update_cache: true      # &lt;- VIGA 2: vale moodul\n\n    - name: Install Apache\n      apt:\n        name: apache            # &lt;- VIGA 3: vale paketi nimi\n        state: present\n      notify: restart apache\n\n    - name: Start Apache\n      systemd:                  # &lt;- VIGA 4: miks mitte service?\n        name: apache2\n        state: started\n\n  handlers:                     # &lt;- VIGA 5: handlers vale kohas?\n    - name: restart apache\n      service:\n        name: apache2\n        state: restarted\n</code></pre> <p>\u00dclesanne:  1. Kopeerige see kood faili <code>lamp-stack.yml</code> 2. Leidke k\u00f5ik 5+ viga 3. Parandage need 4. Lisage proper YAML vormistus (<code>---</code> alguses)</p> <p>Kontroll: <code>ansible-playbook --syntax-check lamp-stack.yml</code></p> <p>\ud83d\udd0d Uurige: Mis vahe on <code>package</code> ja <code>apt</code> moodulil? Kumb on parem?</p>"},{"location":"ansible_basics/homework/#probleem-3-mysql-seadistamine","title":"\ud83d\udcdd Probleem 3: MySQL seadistamine","text":""},{"location":"ansible_basics/homework/#ulesanne-31-mysql-installimine-ja-turvamine","title":"\u00dclesanne 3.1: MySQL installimine ja turvamine","text":"<p>Probleem: MySQL vajab spetsiaalset seadistamist. Lab'is n\u00e4gite lihtsaid n\u00e4iteid.</p> <p>Teie \u00fclesanne: 1. Installige <code>mysql-server</code> ja <code>python3-pymysql</code> 2. K\u00e4ivitage MySQL teenus 3. Seadke MySQL root kasutajale parool (kasutage group_vars muutujat) 4. Looge rakenduse andmebaas 5. Looge rakenduse kasutaja \u00f5igustega ainult sellele andmebaasile</p> <p>Moodulid, mida vajate: - <code>package</code> v\u00f5i <code>apt</code> - <code>service</code>  - <code>mysql_user</code> - <code>mysql_db</code></p> <p>\ud83d\udca1 N\u00f5uanded: - MySQL root parooli seadistamine on keeruline - uurige <code>login_unix_socket</code> parameetrit - <code>mysql_user</code> moodul vajab <code>login_user</code> ja <code>login_password</code> parameetrit - Kasutage <code>priv: \"database_name.*:ALL\"</code> \u00f5igusteks</p> <p>\ud83d\udd0d Uurige dokumentatsiooni: <code>ansible-doc mysql_user</code></p> <p>Kontroll: <pre><code>mysql -u [teie_kasutaja] -p [teie_andmebaas] -e \"SELECT 'Success!' as test;\"\n</code></pre></p> <p>\u2753 Debugimise k\u00fcsimus: Kui MySQL \u00fchendus ei t\u00f6\u00f6ta, kuidas te viga otsite?</p>"},{"location":"ansible_basics/homework/#probleem-4-templateide-loomine","title":"\ud83d\udcdd Probleem 4: Template'ide loomine","text":""},{"location":"ansible_basics/homework/#ulesanne-41-puudulik-php-template","title":"\u00dclesanne 4.1: Puudulik PHP template","text":"<p>Antud on template algus. L\u00f5petage see:</p> <p>Fail: <code>templates/info.php.j2</code></p> <pre><code>&lt;?php\n// {{ app_name }} - Info leht\n// TODO: lisage kuup\u00e4ev kasutades ansible muutujat\n\necho \"&lt;h1&gt;{{ ??? }}&lt;/h1&gt;\";  // TODO: kasutage app_name muutujat\n\necho \"&lt;h2&gt;Serveri info&lt;/h2&gt;\";\n// TODO: lisage hostname, IP, OS info\n\necho \"&lt;h2&gt;MySQL test&lt;/h2&gt;\";\n$host = 'localhost';\n$database = '{{ ??? }}';  // TODO: kasutage \u00f5iget muutujat\n$username = '{{ ??? }}';  // TODO: kasutage \u00f5iget muutujat  \n$password = '{{ ??? }}';  // TODO: kasutage \u00f5iget muutujat\n\ntry {\n    // TODO: kirjutage PDO \u00fchenduse test\n    // Kui \u00f5nnestub, n\u00e4idake \"\u00dchendus t\u00f6\u00f6tab!\"\n    // Kui eba\u00f5nnestub, n\u00e4idake error'it\n} catch(PDOException $e) {\n    // TODO: error handling\n}\n\n// TODO: lisage phpinfo() kutse\n?&gt;\n</code></pre> <p>\u00dclesanne: 1. Asendage k\u00f5ik <code>{{ ??? }}</code> \u00f5igete muutujatega 2. Implementeerige MySQL PDO \u00fchenduse test 3. Lisage proper error handling 4. Lisage phpinfo() v\u00e4ljund</p> <p>\ud83d\udca1 N\u00f5uanded: - Vaadake lab'i template n\u00e4iteid - Ansible faktid: <code>{{ ansible_hostname }}</code>, <code>{{ ansible_default_ipv4.address }}</code> - PHP PDO: <code>new PDO(\"mysql:host=$host;dbname=$database\", $username, $password)</code></p> <p>Kontroll: PHP ei tohi sisaldada <code>{{ ??? }}</code> m\u00e4rke</p>"},{"location":"ansible_basics/homework/#ulesanne-42-html-pohileht-loomine","title":"\u00dclesanne 4.2: HTML p\u00f5hileht loomine","text":"<p>Probleem: Vajate ilusat HTML lehte, mis n\u00e4itab LAMP stack'i infot.</p> <p>N\u00f5uded: - Kasutage template'i <code>templates/index.html.j2</code> - N\u00e4idake serveri infot (hostname, OS, kuup\u00e4ev) - Lisage link <code>/info.php</code> lehele - Kasutage CSS'i, et see oleks ilus - K\u00f5ik info peab tulema Ansible muutujatest/faktidest</p> <p>\ud83d\udca1 Inspiratsioon: Vaadake lab'i HTML n\u00e4idet, aga \u00e4rge kopeerige!</p> <p>\u2753 V\u00e4ljakutse: Kas oskate lisada JavaScripti, mis n\u00e4itab praegust kellaaega?</p> <p>Kontroll: HTML peab valideeruma (saate kontrollida https://validator.w3.org/)</p>"},{"location":"ansible_basics/homework/#probleem-5-playbook-lopetamine","title":"\ud83d\udcdd Probleem 5: Playbook l\u00f5petamine","text":""},{"location":"ansible_basics/homework/#ulesanne-51-taskside-implementeerimine","title":"\u00dclesanne 5.1: Tasks'ide implementeerimine","text":"<p>N\u00fc\u00fcd implementeerige playbook tasks'id:</p> <p>Vajalikud sammud (kirjutage ise task'id): 1. S\u00fcsteemi ettevalmistus - pakettide cache uuendamine 2. Apache seadistamine - installimine, k\u00e4ivitamine, document root loomine 3. MySQL seadistamine - (juba tegite Probleem 3's) 4. PHP seadistamine - installimine koos moodulikega 5. Template'ide deployment - kopeerige template'id \u00f5igetesse kohtadesse 6. Firewall - lubage HTTP trafik 7. Valideerimised - kontrollige, et k\u00f5ik t\u00f6\u00f6tab</p> <p>\ud83d\udca1 N\u00f5uanne: Iga task vajab: - Selget <code>name</code> v\u00e4lja - \u00d5iget moodulit - Proper parameetreid - Vajadusel <code>notify</code> handler'eid</p> <p>T\u00fc\u00fcpilised moodulid: - <code>package</code>/<code>apt</code> - pakettide installimine - <code>service</code> - teenuste haldamine - <code>file</code> - kaustade loomine - <code>template</code> - template'ide kopeerimine - <code>uri</code> - HTTP testid - <code>ufw</code> - firewall reeglid</p> <p>\u2753 K\u00fcsimus: Millises j\u00e4rjekorras task'id k\u00e4ivitada? Miks?</p>"},{"location":"ansible_basics/homework/#ulesanne-52-handlers-ja-error-handling","title":"\u00dclesanne 5.2: Handlers ja error handling","text":"<p>Probleem: Playbook peab olema robust ja k\u00e4sitlema vigu.</p> <p>N\u00f5uded: 1. Handlers - Apache ja MySQL taask\u00e4ivitamise jaoks 2. Error handling - kasutage <code>failed_when</code>, <code>ignore_errors</code>, <code>retries</code> 3. Valideerimised - kontrollige teenuste olekut ja HTTP vastuseid 4. Conditional tasks - n\u00e4iteks ainult Debian/Ubuntu s\u00fcsteemides</p> <p>\ud83d\udca1 N\u00e4ited error handling'ust: <pre><code>- name: Test HTTP\n  uri:\n    url: http://localhost\n  retries: 3\n  delay: 10\n  register: http_test\n  failed_when: http_test.status != 200\n</code></pre></p> <p>\u2753 M\u00f5elge: Millal kasutada <code>ignore_errors: yes</code> ja millal mitte?</p>"},{"location":"ansible_basics/homework/#probleem-6-testimine-ja-debugimine","title":"\ud83d\udcdd Probleem 6: Testimine ja debugimine","text":""},{"location":"ansible_basics/homework/#ulesanne-61-systematic-testimine","title":"\u00dclesanne 6.1: Systematic testimine","text":"<p>Probleem: Kuidas te veendute, et teie playbook t\u00f6\u00f6tab?</p> <p>Teie testiplaan: 1. Syntax check - ? 2. Dry run - ? 3. Tegelik k\u00e4ivitamine - ? 4. Manuaalne testimine - ? 5. Idempotency test - ?</p> <p>T\u00e4itke k\u00fcsim\u00e4rgid ja tehke iga test!</p> <p>\ud83d\udca1 N\u00f5uanne: Iga testi j\u00e4rel dokumenteerige tulemused</p> <p>\u2753 Debugimise k\u00fcsimused: - Kui Apache ei k\u00e4ivitu, kuidas te viga otsite? - Kui MySQL \u00fchendus ei t\u00f6\u00f6ta, millised logid vaatate? - Kui template ei genereeru, kuidas te seda debugite?</p>"},{"location":"ansible_basics/homework/#ulesanne-62-vigade-parandamine","title":"\u00dclesanne 6.2: Vigade parandamine","text":"<p>Antud on levinud vead. Kas tunnete neid \u00e4ra?</p> <p>Viga 1: <pre><code>TASK [Install PHP] ****\nfatal: [localhost]: FAILED! =&gt; {\"msg\": \"No package matching 'php' found\"}\n</code></pre> K\u00fcsimus: Mis probleem? Kuidas parandada?</p> <p>Viga 2: <pre><code>TASK [Test MySQL connection] ****\nfatal: [localhost]: FAILED! =&gt; {\"msg\": \"unable to connect to database\"}\n</code></pre> K\u00fcsimus: V\u00f5imalikud p\u00f5hjused? Kuidas debugida?</p> <p>Viga 3: <pre><code>TASK [Generate index.html] ****\nfatal: [localhost]: FAILED! =&gt; {\"msg\": \"template not found\"}\n</code></pre> K\u00fcsimus: Mida kontrollida?</p> <p>\u00dclesanne: Kirjutage README.md'sse troubleshooting sektsioon nende vigade jaoks!</p>"},{"location":"ansible_basics/homework/#probleem-7-dokumenteerimine","title":"\ud83d\udcdd Probleem 7: Dokumenteerimine","text":""},{"location":"ansible_basics/homework/#ulesanne-71-readmemd-loomine","title":"\u00dclesanne 7.1: README.md loomine","text":"<p>Probleem: Keegi teine peab teie projekti kasutama. Mis infot ta vajab?</p> <p>N\u00f5utavad sektsioonid: 1. Projekt kirjeldus - mis see teeb? 2. Eeltingimused - mida vaja installimisel? 3. Kasutamise juhend - sammhaaval k\u00e4ivitamine 4. Konfiguratsioon - kuidas muutujaid muuta? 5. Testimine - kuidas kontrollida, et t\u00f6\u00f6tab? 6. Troubleshooting - levinud probleemid ja lahendused 7. Projekti struktuur - failide selgitus</p> <p>\u2753 Test: Andke README.md kolleegile - kas ta saab projekti k\u00e4ivitada?</p>"},{"location":"ansible_basics/homework/#ulesanne-72-koodikommentaarid","title":"\u00dclesanne 7.2: Koodikommentaarid","text":"<p>Probleem: Teie playbook peab olema loetav ja m\u00f5istetav.</p> <p>N\u00f5uded: - Iga task vajab selget <code>name</code> v\u00e4lja - Keerulised osad vajavad kommentaare - Muutujad vajavad selgitusi - Template'id vajavad dokumenteerimist</p> <p>N\u00e4ide heast kommentaarist: <pre><code># MySQL root parooli seadistamine on keeruline, sest:\n# 1. P\u00e4rast installimist pole parool seatud\n# 2. Kasutame unix_socket autentimist\n# 3. Seej\u00e4rel m\u00e4\u00e4rame parooli ja l\u00fclitume password auth'ile\n- name: \"Seadista MySQL root parool (esimene kord)\"\n  mysql_user:\n    # ... resto kood\n</code></pre></p>"},{"location":"ansible_basics/homework/#esitamine","title":"\ud83d\udce4 Esitamine","text":""},{"location":"ansible_basics/homework/#repository-link","title":"Repository link","text":"<p>Esitage GitHub repository link kursuse s\u00fcsteemi j\u00e4rgmiste n\u00f5uetega:</p> <p>Repository peab sisaldama: - T\u00e4ielikku funktsionaalset Ansible projekti - README.md t\u00e4ieliku dokumentatsiooniga - Screenshot'e v\u00f5i video t\u00f5endusmaterjali - Deployment logisid</p> <p>Repository peab olema: - Public (et \u00f5ppej\u00f5ud saaks \u00fcle vaadata) - Korrektselt nimetatud (<code>ansible-lamp-practice</code> v\u00f5i sarnane) - Professionaalselt organiseeritud</p> <p>Peab olema v\u00f5imalik: - Repository kloonida - Juhendite j\u00e4rgi setup teha - Playbook edukalt k\u00e4ivitada - Tulemust valideerida</p> <p>\u23f0 T\u00e4htaeg: N\u00e4dal 13 esimese loengu alguseks</p>"},{"location":"ansible_basics/homework/#onnestumise-nipid","title":"\ud83d\ude80 \u00d5nnestumise nipid","text":""},{"location":"ansible_basics/homework/#alustamise-strateegia","title":"Alustamise strateegia","text":"<ol> <li>Alustage v\u00e4ikselt - tehke esmalt Apache t\u00f6\u00f6tama</li> <li>Testige sageli - iga komponendi j\u00e4rel kontrollige</li> <li>Kasutage lab'i materjale - sealtsed n\u00e4ited aitavad</li> <li>Uurige dokumentatsiooni - <code>ansible-doc &lt;module_name&gt;</code></li> <li>Debugige s\u00fcstemaatiliselt - <code>-v</code> flag ja logide kontroll</li> </ol>"},{"location":"ansible_basics/homework/#kui-midagi-ei-toota","title":"Kui midagi ei t\u00f6\u00f6ta","text":"<ol> <li>Kontrollige s\u00fcntaksit - <code>--syntax-check</code></li> <li>Kasutage verbose mode'i - <code>-v</code>, <code>-vv</code>, <code>-vvv</code></li> <li>Vaadake teenuste logisid - <code>journalctl -u apache2</code></li> <li>Kontrollige failide \u00f5iguseid - <code>ls -la</code></li> <li>Testige k\u00e4sitsi - tehke samme k\u00e4sitsi l\u00e4bi</li> </ol>"},{"location":"ansible_basics/homework/#ajakasutus","title":"Ajakasutus","text":"<ul> <li>1. p\u00e4ev: Projekti setup ja Apache</li> <li>2. p\u00e4ev: MySQL ja PHP</li> <li>3. p\u00e4ev: Template'id ja testimine</li> <li>4. p\u00e4ev: Dokumenteerimine ja viimistlus</li> </ul> <p>Edu! \ud83c\udf89 See on teie esimene t\u00f5sisem Ansible projekt - nautige \u00f5ppimist!</p>"},{"location":"ansible_basics/lab/","title":"\ud83e\uddea Ansible Basics Lab: Setup ja Esimene Playbook","text":"<p>Kestus: 2 tundi Eesm\u00e4rk: \u00d5ppida Ansible'i alused ja luua esimesed automatiseerimise skriptid</p>"},{"location":"ansible_basics/lab/#samm-1-opivaljundid","title":"\ud83c\udfaf Samm 1: \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast laborit oskate: - Installida ja konfigureerida Ansible'i - Seadistada SSH v\u00f5tmeid turvaliseks \u00fchenduseks - Luua ja hallata inventory faile - Kasutada ad-hoc k\u00e4ske kiireks automatiseerimiseks - Kirjutada YAML s\u00fcntaksit - Luua ja k\u00e4ivitada playbook'e - Automatiseeritult seadistada veebiserveri</p>"},{"location":"ansible_basics/lab/#samm-1-ansiblei-installimine-ja-seadistamine-30-min","title":"\ud83d\udccb Samm 1: Ansible'i installimine ja seadistamine (30 min)","text":""},{"location":"ansible_basics/lab/#11-ansiblei-installimine","title":"1.1: Ansible'i installimine","text":"<p>Ubuntu/Debian: <pre><code># Uuenda pakettide nimekirja\nsudo apt update\n\n# Installi Ansible\nsudo apt install ansible -y\n\n# Kontrolli installatsiooni\nansible --version\n</code></pre></p> <p>macOS (Homebrew): <pre><code># Installi Homebrew (kui ei ole)\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Installi Ansible\nbrew install ansible\n\n# Kontrolli\nansible --version\n</code></pre></p> <p>Windows (WSL): <pre><code># Windows'is kasutage Windows Subsystem for Linux\n# Seej\u00e4rel j\u00e4rgige Ubuntu juhendeid\n</code></pre></p>"},{"location":"ansible_basics/lab/#12-ssh-votmete-seadistamine","title":"1.2: SSH v\u00f5tmete seadistamine","text":"<p>Miks SSH v\u00f5tmed on vajalikud: - Ansible kasutab SSH'd serveritega \u00fchendumiseks - V\u00f5tmed on turvalisemad kui paroolid - Automatiseerimine toimib ilma parooli k\u00fcsimata</p> <p>SSH v\u00f5tme loomine: <pre><code># Looge SSH v\u00f5ti (kui teil ei ole)\nssh-keygen -t rsa -b 4096 -C \"teie.email@example.com\"\n\n# Vajutage Enter k\u00f5ikidele k\u00fcsimustele (kasutab default asukohti)\n# V\u00f5ite lisada parooli v\u00f5i j\u00e4tta t\u00fchjaks\n</code></pre></p> <p>SSH v\u00f5tme kopeerimine test serverisse: <pre><code># Kopeerige avalik v\u00f5ti serverisse\nssh-copy-id kasutaja@test-server.local\n\n# V\u00f5i k\u00e4sitsi\ncat ~/.ssh/id_rsa.pub | ssh kasutaja@test-server.local \"mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\"\n</code></pre></p> <p>Testide \u00fchendust: <pre><code># Peaks \u00fchenduma ilma parooli k\u00fcsimata\nssh kasutaja@test-server.local\n</code></pre></p>"},{"location":"ansible_basics/lab/#13-esimene-inventory-fail-serverite-telefoniraamat","title":"1.3: Esimene inventory fail - Serverite \"telefoniraamat\"","text":"<p>Esmalt m\u00f5istame, mis on inventory: - Inventory on fail, kus kirjas k\u00f5ik serverid, mida Ansible haldab - See on nagu telefoniraamat - Ansible vaatab sealt, milliseid servereid kontakteeruda - Saame servereid grupeerida (nt webserverid, andmebaasiserveid)</p> <p>Looge t\u00f6\u00f6kaust: <pre><code>mkdir ~/ansible-praktikum\ncd ~/ansible-praktikum\n</code></pre></p> <p>N\u00fc\u00fcd loome inventory faili sammhaaval:</p> <ol> <li> <p>Looge t\u00fchi fail: <pre><code>touch inventory.ini\n</code></pre></p> </li> <li> <p>Avage fail tekstiredaktoris: <pre><code>nano inventory.ini\n# v\u00f5i\ncode inventory.ini\n</code></pre></p> </li> <li> <p>Lisage esimene server (localhost testimiseks): <pre><code>[test]\nlocalhost ansible_connection=local\n</code></pre></p> </li> </ol> <p>Selgitus:    - <code>[test]</code> = grupi nimi (sulgudes)    - <code>localhost</code> = serveri nimi    - <code>ansible_connection=local</code> = \u00fctleb Ansible'ile, et kasuta lokaalseid k\u00e4ske (SSH pole vaja)</p> <ol> <li> <p>Lisage teine grupp (tuleviku serveritele): <pre><code>[practice]\n# Kommentaar: Siia saate hiljem lisada tegelikke servereid\n# N\u00e4ide: server1.example.com ansible_user=ubuntu\n</code></pre></p> </li> <li> <p>Salvestage fail (Ctrl+X, siis Y, siis Enter nano's)</p> </li> </ol> <p>N\u00fc\u00fcd testima inventory: <pre><code># Vaatame, kas Ansible n\u00e4eb meie servereid\nansible -i inventory.ini --list-hosts all\n\n# Peaks n\u00e4itama: localhost\n</code></pre></p> <p>Testide \u00fchendust: <pre><code>ansible -i inventory.ini test -m ping\n</code></pre></p> <p>\u2753 M\u00f5telge: Miks kasutame <code>test</code> mitte <code>localhost</code>? (Vastus: test on grupi nimi!)</p>"},{"location":"ansible_basics/lab/#samm-2-esimesed-ad-hoc-kasud-20-min","title":"\ud83d\udccb Samm 2: Esimesed Ad-hoc k\u00e4sud (20 min)","text":""},{"location":"ansible_basics/lab/#ad-hoc-kaskude-harjutused","title":"Ad-hoc k\u00e4skude harjutused","text":"<p>1. Ping test: <pre><code># Kontrollige k\u00f5iki servereid\nansible -i inventory.ini all -m ping\n</code></pre></p> <p>2. S\u00fcsteemi info: <pre><code># Vaata operatsioonis\u00fcsteemi\nansible -i inventory.ini all -m setup -a \"filter=ansible_distribution*\"\n\n# Vaata m\u00e4lu ja CPU\nansible -i inventory.ini all -m setup -a \"filter=ansible_memtotal_mb,ansible_processor_count\"\n</code></pre></p> <p>3. Failide haldamine: <pre><code># Loo test kaust\nansible -i inventory.ini all -m file -a \"path=/tmp/ansible-test state=directory\"\n\n# Loo test fail\nansible -i inventory.ini all -m copy -a \"content='Ansible test' dest=/tmp/ansible-test/hello.txt\"\n\n# Kontrolli faili olemasolu\nansible -i inventory.ini all -m command -a \"ls -la /tmp/ansible-test/\"\n</code></pre></p> <p>4. Pakettide haldamine: <pre><code># Installi htop (vajalik sudo)\nansible -i inventory.ini all -m package -a \"name=htop state=present\" --become\n\n# Kontrolli installatsiooni\nansible -i inventory.ini all -m command -a \"which htop\"\n</code></pre></p>"},{"location":"ansible_basics/lab/#samm-3-yaml-ja-esimene-playbook-40-min","title":"\ud83d\udccb Samm 3: YAML ja esimene playbook (40 min)","text":""},{"location":"ansible_basics/lab/#yaml-suntaksi-harjutus-opime-inimese-keelt","title":"YAML s\u00fcntaksi harjutus - \u00d5pime \"inimese keelt\"","text":"<p>Miks YAML on oluline: - Ansible playbook'id on kirjutatud YAML keeles - YAML on disainitud inimesele loetavaks - Taandrimine (indentation) on V\u00c4GA oluline!</p> <p>Loome YAML faili sammhaaval:</p> <ol> <li> <p>Looge uus fail: <pre><code>touch test.yml\nnano test.yml  # v\u00f5i code test.yml\n</code></pre></p> </li> <li> <p>Alustage YAML dokumendiga: <pre><code>---\n# YAML alustab alati kolme kriipsuga\n# Hashtag (#) on kommentaar\n</code></pre></p> </li> <li> <p>Lisage lihtne v\u00e4\u00e4rtus: <pre><code>nimi: \"Minu Ansible Test\"\nversioon: 1.0\n</code></pre> M\u00e4rkus: Jutum\u00e4rgid on vabatahtlikud, aga hea praktika tekstile</p> </li> <li> <p>Lisage loend (list): <pre><code>serverid:\n  - nimi: \"test1\"\n    ip: \"192.168.1.10\"\n    roll: \"veebiserver\"\n  - nimi: \"test2\"\n    ip: \"192.168.1.11\"\n    roll: \"andmebaas\"\n</code></pre> T\u00e4helepanu: </p> </li> <li>Kriips (-) t\u00e4histab loendi elementi</li> <li>Taandrimine peab olema t\u00e4pne (kasutage 2 t\u00fchikut)</li> <li> <p>\u00c4RA kasutage Tab klahvi!</p> </li> <li> <p>Lisage seadistused: <pre><code>seadistused:\n  http_port: 80\n  https_port: 443\n  debug: true\n</code></pre></p> </li> <li> <p>Salvestage fail</p> </li> </ol> <p>Kontrollige s\u00fcntaksi: <pre><code># Python abil (kui on installitud)\npython3 -c \"import yaml; print(yaml.safe_load(open('test.yml')))\"\n\n# Ansible abil\nansible-playbook --syntax-check test.yml\n</code></pre></p> <p>\u2753 Harjutus: Muutke <code>debug: true</code> v\u00e4\u00e4rtuseks <code>false</code> ja kontrollige uuesti!</p>"},{"location":"ansible_basics/lab/#esimene-lihtne-playbook-sammhaaval-ehitamine","title":"Esimene lihtne playbook - Sammhaaval ehitamine","text":"<p>M\u00f5istame playbook struktuuri: - Play = \u00fcks stsenaarium \u00fche grupi serveritele - Tasks = konkreetsed sammud, mida teha - Modules = Ansible'i ehitatud funktsioonid (debug, file, copy jne)</p> <p>Loome playbook samm-sammult:</p> <ol> <li> <p>Looge uus fail: <pre><code>touch minu-esimene-playbook.yml\nnano minu-esimene-playbook.yml\n</code></pre></p> </li> <li> <p>Alustage YAML ja Play definitsiooniga: <pre><code>---\n- name: \"Minu esimene Ansible playbook\"\n  hosts: all\n  gather_facts: yes\n</code></pre> Selgitus:</p> </li> <li><code>name:</code> = playbook'i kirjeldus</li> <li><code>hosts: all</code> = k\u00e4ivita k\u00f5ikidele serveritele inventory's</li> <li> <p><code>gather_facts: yes</code> = kogu serveri infot (OS, IP, jne)</p> </li> <li> <p>Lisage tasks sektsioon: <pre><code>  tasks:\n</code></pre></p> </li> <li> <p>Esimene task - lihtne tervitus: <pre><code>    - name: \"Tervita maailma\"\n      debug:\n        msg: \"Tere! Ansible t\u00f6\u00f6tab {{ inventory_hostname }} serveris!\"\n</code></pre> M\u00e4rkuseid:</p> </li> <li><code>debug</code> = moodul s\u00f5numite v\u00e4ljastamiseks</li> <li> <p><code>{{ inventory_hostname }}</code> = muutuja (server nimi)</p> </li> <li> <p>Teine task - n\u00e4ita s\u00fcsteemi infot: <pre><code>    - name: \"N\u00e4ita s\u00fcsteemi infot\"\n      debug:\n        msg: \"Server t\u00f6\u00f6tab {{ ansible_distribution }} {{ ansible_distribution_version }}\"\n</code></pre></p> </li> <li> <p>Kolmas task - loo kaust: <pre><code>    - name: \"Loo test kataloog\"\n      file:\n        path: /tmp/ansible-praktikum\n        state: directory\n        mode: '0755'\n</code></pre> Selgitus:</p> </li> <li><code>file</code> = moodul failide/kaustade haldamiseks</li> <li><code>state: directory</code> = veendu, et see on kaust</li> <li> <p><code>mode: '0755'</code> = m\u00e4\u00e4ra \u00f5igused (rwx r-x r-x)</p> </li> <li> <p>Neljas task - kirjuta fail: <pre><code>    - name: \"Kirjuta info fail\"\n      copy:\n        dest: /tmp/ansible-praktikum/info.txt\n        mode: '0644'\n        content: |\n          Ansible playbook k\u00e4ivitatud: {{ ansible_date_time.iso8601 }}\n          Serveri nimi: {{ inventory_hostname }}\n          IP aadress: {{ ansible_default_ipv4.address | default('ei tuvastatud') }}\n</code></pre> M\u00e4rkuseid:</p> </li> <li><code>content: |</code> = mitme-realine tekst</li> <li> <p><code>{{ ansible_date_time.iso8601 }}</code> = praegune kuup\u00e4ev</p> </li> <li> <p>Viies task - loe fail: <pre><code>    - name: \"Kuva faili sisu\"\n      command: cat /tmp/ansible-praktikum/info.txt\n      register: faili_sisu\n</code></pre> Selgitus:</p> </li> <li><code>command</code> = k\u00e4ivita shell k\u00e4sk</li> <li> <p><code>register</code> = salvesta v\u00e4ljund muutujasse</p> </li> <li> <p>Kuues task - n\u00e4ita tulemust: <pre><code>    - name: \"N\u00e4ita, mis failis on\"\n      debug:\n        msg: \"{{ faili_sisu.stdout_lines }}\"\n</code></pre></p> </li> <li> <p>Salvestage fail</p> </li> </ol> <p>N\u00fc\u00fcd testima meie playbook'i:</p> <ol> <li> <p>Esmalt kuiv k\u00e4ivitus (dry run): <pre><code>ansible-playbook -i inventory.ini --check minu-esimene-playbook.yml\n</code></pre> Mis juhtub: Ansible n\u00e4itab, mida ta teeks, aga ei muuda midagi</p> </li> <li> <p>Kui kuiv k\u00e4ivitus \u00f5nnestus, siis tegelik k\u00e4ivitus: <pre><code>ansible-playbook -i inventory.ini minu-esimene-playbook.yml\n</code></pre></p> </li> <li> <p>Vaadake tulemust:</p> </li> <li>Kas k\u00f5ik taskid \u00f5nnestusid (roheline)?</li> <li>Kontrollige, kas fail tekkis: <code>ls -la /tmp/ansible-praktikum/</code></li> </ol> <p>\u2753 Debugimise k\u00fcsimused: - Mida t\u00e4hendab \"changed\" vs \"ok\"? - Miks m\u00f5ned taskid on \"changed\" ja teised \"ok\"? - K\u00e4ivitage playbook uuesti - mis muutub?</p>"},{"location":"ansible_basics/lab/#playbook-muutujatega-opime-dunaamilisust","title":"Playbook muutujatega - \u00d5pime d\u00fcnaamilisust","text":"<p>Miks muutujad on olulised: - Teevad playbook'i korduvkasutatavaks - V\u00f5imaldavad erinevaid konfiguratsioone - Lihtsustavad muudatuste tegemist</p> <p>Loome muutujatega playbook sammhaaval:</p> <ol> <li> <p>Uus fail: <pre><code>touch playbook-muutujatega.yml\nnano playbook-muutujatega.yml\n</code></pre></p> </li> <li> <p>Play definitsioon muutujatega: <pre><code>---\n- name: \"Playbook muutujatega\"\n  hosts: all\n  vars:\n    rakenduse_nimi: \"Minu Veebirakendus\"\n    versioon: \"1.2.3\"\n    portnumber: 8080\n\n  tasks:\n</code></pre></p> </li> <li> <p>Task 1 - D\u00fcnaamiline kausta nimi: <pre><code>    - name: \"Loo rakenduse kaust\"\n      file:\n        path: \"/opt/{{ rakenduse_nimi | lower | replace(' ', '-') }}\"\n        state: directory\n        mode: '0755'\n      become: yes\n</code></pre> Selgitused:</p> </li> <li><code>{{ rakenduse_nimi }}</code> = kasuta muutujat</li> <li><code>| lower</code> = muuda v\u00e4ikesteks t\u00e4htedeks</li> <li> <p><code>| replace(' ', '-')</code> = asenda t\u00fchikud kriipsudega</p> </li> <li> <p>Task 2 - D\u00fcnaamiline konfiguratsioon: <pre><code>    - name: \"Kirjuta konfiguratsioon\"\n      copy:\n        dest: \"/opt/{{ rakenduse_nimi | lower | replace(' ', '-') }}/config.env\"\n        mode: '0644'\n        content: |\n          # {{ rakenduse_nimi }} konfiguratsioon\n          APP_NAME={{ rakenduse_nimi }}\n          VERSION={{ versioon }}\n          PORT={{ portnumber }}\n          INSTALLED_ON={{ ansible_date_time.iso8601 }}\n      become: yes\n</code></pre></p> </li> <li> <p>Task 3 - Kuva tulemus: <pre><code>    - name: \"Kuva konfiguratsioon\"\n      command: \"cat /opt/{{ rakenduse_nimi | lower | replace(' ', '-') }}/config.env\"\n      register: config_sisu\n      become: yes\n\n    - name: \"N\u00e4ita konfiguratsiooni\"\n      debug:\n        msg: \"{{ config_sisu.stdout_lines }}\"\n</code></pre></p> </li> <li> <p>K\u00e4ivita ja eksperimenteerige: <pre><code>ansible-playbook playbook-muutujatega.yml\n</code></pre></p> </li> </ol> <p>\u2753 Harjutus: 1. Muutke <code>rakenduse_nimi</code> muutujat 2. K\u00e4ivitage playbook uuesti 3. Vaadake, kuidas tulemus muutub</p> <p>\ud83d\udca1 Lisaharjutus: Lisage uus muutuja <code>kirjeldus</code> ja kasutage seda config failis!</p>"},{"location":"ansible_basics/lab/#samm-4-veebiserveri-seadistamine-30-min","title":"\ud83d\udccb Samm 4: Veebiserveri seadistamine (30 min)","text":""},{"location":"ansible_basics/lab/#nginx-playbook-automatiseeritud-veebiserver","title":"Nginx playbook - Automatiseeritud veebiserver","text":"<p>N\u00fc\u00fcd loome keerulisema playbook'i sammhaaval:</p> <p>Miks Nginx: - Populaarne veebiserver - Lihtne seadistada - Hea n\u00e4ide produktsiooni-l\u00e4hedase automatiseerimise kohta</p> <p>Loome Nginx playbook etappide kaupa:</p> <ol> <li> <p>Alustage uue failiga: <pre><code>touch nginx-setup.yml\nnano nginx-setup.yml\n</code></pre></p> </li> <li> <p>Play definitsioon muutujatega: <pre><code>---\n- name: \"Nginx veebiserveri seadistamine\"\n  hosts: all\n  become: yes\n  vars:\n    web_root: \"/var/www/html\"\n    site_name: \"Minu Test Sait\"\n\n  tasks:\n</code></pre> M\u00e4rkuseid:</p> </li> <li><code>become: yes</code> = kasuta sudo \u00f5iguseid k\u00f5ikides tasks'ides</li> <li> <p><code>vars:</code> = playbook'i muutujad</p> </li> <li> <p>Task 1 - S\u00fcsteemi ettevalmistus: <pre><code>    - name: \"Uuenda pakettide nimekirja\"\n      package:\n        update_cache: yes\n      when: ansible_os_family == \"Debian\"\n</code></pre> Selgitus: <code>when:</code> = conditional - k\u00e4ivita ainult Debian/Ubuntu's</p> </li> <li> <p>Task 2 - Nginx installimine: <pre><code>    - name: \"Installi Nginx\"\n      package:\n        name: nginx\n        state: present\n</code></pre></p> </li> <li> <p>Task 3 - Veebi kausta loomine: <pre><code>    - name: \"Loo veebi kaust\"\n      file:\n        path: \"{{ web_root }}\"\n        state: directory\n        owner: www-data\n        group: www-data\n        mode: '0755'\n      when: ansible_os_family == \"Debian\"\n</code></pre> M\u00e4rkuseid:</p> </li> <li><code>{{ web_root }}</code> = kasutab muutujat</li> <li> <p><code>owner/group: www-data</code> = nginx kasutaja</p> </li> <li> <p>Task 4 - Lihtsa HTML lehe loomine: <pre><code>    - name: \"Kopeeri HTML lehek\u00fclg\"\n      copy:\n        dest: \"{{ web_root }}/index.html\"\n        owner: www-data\n        group: www-data\n        mode: '0644'\n        content: |\n          &lt;!DOCTYPE html&gt;\n          &lt;html lang=\"et\"&gt;\n          &lt;head&gt;\n              &lt;meta charset=\"UTF-8\"&gt;\n              &lt;title&gt;{{ site_name }}&lt;/title&gt;\n              &lt;style&gt;\n                  body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }\n                  .container { max-width: 600px; margin: 0 auto; }\n                  .success { color: green; }\n                  .info { background: #f0f0f0; padding: 20px; border-radius: 5px; }\n              &lt;/style&gt;\n          &lt;/head&gt;\n          &lt;body&gt;\n              &lt;div class=\"container\"&gt;\n                  &lt;h1 class=\"success\"&gt;\ud83c\udf89 {{ site_name }}&lt;/h1&gt;\n                  &lt;p&gt;Nginx on edukalt paigaldatud Ansible'iga!&lt;/p&gt;\n                  &lt;div class=\"info\"&gt;\n                      &lt;h3&gt;Serveri info:&lt;/h3&gt;\n                      &lt;p&gt;&lt;strong&gt;Hostname:&lt;/strong&gt; {{ inventory_hostname }}&lt;/p&gt;\n                      &lt;p&gt;&lt;strong&gt;S\u00fcsteem:&lt;/strong&gt; {{ ansible_distribution }} {{ ansible_distribution_version }}&lt;/p&gt;\n                      &lt;p&gt;&lt;strong&gt;Paigaldatud:&lt;/strong&gt; {{ ansible_date_time.iso8601 }}&lt;/p&gt;\n                  &lt;/div&gt;\n              &lt;/div&gt;\n          &lt;/body&gt;\n          &lt;/html&gt;\n      when: ansible_os_family == \"Debian\"\n</code></pre></p> </li> <li> <p>Task 5 - Nginx k\u00e4ivitamine: <pre><code>    - name: \"K\u00e4ivita ja luba Nginx\"\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre> Selgitus:</p> </li> <li><code>state: started</code> = veendu, et teenus t\u00f6\u00f6tab</li> <li> <p><code>enabled: yes</code> = k\u00e4ivita automaatselt boot'imisel</p> </li> <li> <p>Task 6 - Valideerimised: <pre><code>    - name: \"Kontrolli Nginx olekut\"\n      command: systemctl is-active nginx\n      register: nginx_status\n      failed_when: false\n\n    - name: \"N\u00e4ita Nginx olekut\"\n      debug:\n        msg: \"Nginx olek: {{ nginx_status.stdout }}\"\n\n    - name: \"Testi veebiserveri \u00fchendust\"\n      uri:\n        url: \"http://localhost\"\n        return_content: yes\n      register: web_test\n      failed_when: false\n\n    - name: \"N\u00e4ita veebiserveri vastust\"\n      debug:\n        msg: \"Veebiserver t\u00f6\u00f6tab! HTTP kood: {{ web_test.status | default('Ei saanud \u00fchendust') }}\"\n</code></pre> M\u00e4rkuseid:</p> </li> <li><code>uri</code> moodul = HTTP p\u00e4ringute tegemiseks</li> <li> <p><code>failed_when: false</code> = \u00e4ra l\u00f5peta vea korral</p> </li> <li> <p>Salvestage fail</p> </li> </ol> <p>N\u00fc\u00fcd testima Nginx playbook'i:</p> <ol> <li> <p>S\u00fcntaksi kontroll: <pre><code>ansible-playbook --syntax-check nginx-setup.yml\n</code></pre></p> </li> <li> <p>Kuiv k\u00e4ivitus: <pre><code>ansible-playbook --check nginx-setup.yml\n</code></pre> Vaadake: Millised taskid n\u00e4itavad \"changed\"?</p> </li> <li> <p>Tegelik k\u00e4ivitus: <pre><code>ansible-playbook nginx-setup.yml\n</code></pre></p> </li> <li> <p>Tulemuse testimine: <pre><code># Kontrolli Nginx protsessi\nsudo systemctl status nginx\n\n# Kontrolli, kas port 80 on avatud\nsudo netstat -tlnp | grep :80\n\n# Testi HTTP p\u00e4ringuga\ncurl http://localhost\n</code></pre></p> </li> <li> <p>Brauseris (kui GUI on):</p> </li> <li>Avage http://localhost</li> <li>Peaks n\u00e4itama ilusat HTML lehte</li> </ol> <p>\u2753 Anal\u00fc\u00fcsige: - Mitu \"changed\" oli esimesel k\u00e4ivitusel? - K\u00e4ivitage playbook uuesti - mitu \"changed\" n\u00fc\u00fcd? - Miks see nii on? (Hint: idempotency!)</p> <p>\ud83d\udd27 Troubleshooting: - Kui Nginx ei k\u00e4ivitu, kontrollige: <code>sudo journalctl -u nginx</code> - Kui port kinni, vaadake: <code>sudo ss -tlnp | grep :80</code></p>"},{"location":"ansible_basics/lab/#samm-5-ansible-konfiguratsiooni-optimeerimine-20-min","title":"\ud83d\udccb Samm 5: Ansible konfiguratsiooni optimeerimine (20 min)","text":""},{"location":"ansible_basics/lab/#ansiblecfg-seadistamine-mugavuse-suurendamine","title":"ansible.cfg seadistamine - Mugavuse suurendamine","text":"<p>Miks ansible.cfg on kasulik: - Ei pea iga kord <code>-i inventory.ini</code> kirjutama - Paremad vaikimisi seadistused - SSH optimeeringud</p> <p>Loome konfiguratsiooni sammhaaval:</p> <ol> <li> <p>Loo fail: <pre><code>touch ansible.cfg\nnano ansible.cfg\n</code></pre></p> </li> <li> <p>Lisage p\u00f5hiseadistused: <pre><code>[defaults]\n# Inventory faili asukoht (n\u00fc\u00fcd ei pea -i iga kord kirjutama)\ninventory = inventory.ini\n</code></pre></p> </li> <li> <p>SSH seadistused (et v\u00e4ltida vigu): <pre><code># SSH seadistused\nhost_key_checking = False\nremote_user = kasutaja\nprivate_key_file = ~/.ssh/id_rsa\n</code></pre> Selgitus:</p> </li> <li><code>host_key_checking = False</code> = ei k\u00fcsi SSH fingerprinte</li> <li> <p><code>remote_user</code> = default kasutajanimi serverites</p> </li> <li> <p>V\u00e4ljundi parandused: <pre><code># V\u00e4ljundi seadistused\nstdout_callback = yaml\npipelining = True\n</code></pre> Miks: YAML v\u00e4ljund on inimesele loetavam</p> </li> <li> <p>Performance seadistused: <pre><code># Paralleelsus (kui palju serveritega korraga t\u00f6\u00f6tab)\nforks = 10\n\n# Logimise seadistused  \nlog_path = ./ansible.log\n</code></pre></p> </li> <li> <p>SSH optimeeringud (t\u00e4iendav sektsioon): <pre><code>[ssh_connection]\n# SSH optimeeringud\nssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null\ntimeout = 30\nretries = 3\n</code></pre></p> </li> <li> <p>Salvestage ja testiga: <pre><code># N\u00fc\u00fcd saate k\u00e4ivitada ilma -i liputa!\nansible all -m ping\n</code></pre></p> </li> </ol> <p>Teste konfiguratsiooni: <pre><code># N\u00fc\u00fcd ei pea -i inventory.ini m\u00e4\u00e4rama\nansible all -m ping\n\n# Logi kontrollimise\ntail -f ansible.log\n</code></pre></p>"},{"location":"ansible_basics/lab/#samm-6-veatuvastus-ja-probleemide-lahendamine-20-min","title":"\ud83d\udccb Samm 6: Veatuvastus ja probleemide lahendamine (20 min)","text":""},{"location":"ansible_basics/lab/#levinud-probleemid-ja-lahendused","title":"Levinud probleemid ja lahendused","text":"<p>1. SSH \u00fchenduse probleemid: <pre><code># Kontrolli SSH \u00fchendust k\u00e4sitsi\nssh -v kasutaja@target-host\n\n# SSH v\u00f5tme probleemid\nssh-add ~/.ssh/id_rsa\nchmod 600 ~/.ssh/id_rsa\nchmod 644 ~/.ssh/id_rsa.pub\n</code></pre></p> <p>2. Sudo \u00f5iguste probleemid: <pre><code># Testide sudo \u00f5iguseid\nansible all -m command -a \"whoami\" --become\n\n# Sudo parooli k\u00fcsimine\nansible all -m command -a \"whoami\" --become --ask-become-pass\n</code></pre></p> <p>3. Python teegi probleemid: <pre><code># Kontrolli Python'i\nansible all -m setup -a \"filter=ansible_python*\"\n\n# M\u00e4\u00e4ra Python'i asukoht\nansible all -m ping -e ansible_python_interpreter=/usr/bin/python3\n</code></pre></p>"},{"location":"ansible_basics/lab/#debugimise-playbook-opime-torkeid-leidma","title":"Debugimise playbook - \u00d5pime t\u00f5rkeid leidma","text":"<p>Miks debug playbook on vajalik: - Aitab m\u00f5ista, millised muutujad on saadaval - Kontrollib SSH ja sudo seadistusi - N\u00e4itab Python'i konfiguratsiooni</p> <p>Loome debug playbook etappide kaupa:</p> <ol> <li> <p>Alustage uue failiga: <pre><code>touch debug-playbook.yml\nnano debug-playbook.yml\n</code></pre></p> </li> <li> <p>Play definitsioon: <pre><code>---\n- name: \"Debug ja veatuvastus\"\n  hosts: all\n  gather_facts: yes\n\n  tasks:\n</code></pre></p> </li> <li> <p>Task 1 - N\u00e4ita s\u00fcsteemi muutujaid: <pre><code>    - name: \"N\u00e4ita operatsioonis\u00fcsteemi\"\n      debug:\n        msg: \"OS: {{ ansible_distribution }} {{ ansible_distribution_version }}\"\n</code></pre></p> </li> <li> <p>Task 2 - Kontrolli kasutajat: <pre><code>    - name: \"Kontrolli SSH kasutaja\"\n      command: whoami\n      register: current_user\n\n    - name: \"N\u00e4ita kasutaja infot\"\n      debug:\n        msg: \"SSH kasutaja: {{ current_user.stdout }}, Ansible kasutaja: {{ ansible_user_id }}\"\n</code></pre> Selgitus: <code>register</code> salvestab k\u00e4su v\u00e4ljundi muutujasse</p> </li> <li> <p>Task 3 - Kontrolli sudo: <pre><code>    - name: \"Kontrolli sudo \u00f5iguseid\"\n      command: whoami\n      become: yes\n      register: sudo_user\n      failed_when: false\n</code></pre> M\u00e4rkus: <code>failed_when: false</code> = \u00e4ra l\u00f5peta vea korral</p> </li> <li> <p>Task 4 - N\u00e4ita sudo tulemust: <pre><code>    - name: \"N\u00e4ita sudo tulemust\"\n      debug:\n        msg: \"Sudo kasutaja: {{ sudo_user.stdout | default('Sudo ei toimi') }}\"\n</code></pre></p> </li> <li> <p>Task 5 - Kontrolli Python'i: <pre><code>    - name: \"Kontrolli Python'i\"\n      debug:\n        msg: \"Python: {{ ansible_python_interpreter | default(ansible_python.executable) }}\"\n</code></pre></p> </li> <li> <p>K\u00e4ivita ja anal\u00fc\u00fcsi: <pre><code>ansible-playbook debug-playbook.yml -v\n</code></pre> M\u00e4rkus: <code>-v</code> flag annab rohkem detaile</p> </li> </ol> <p>K\u00e4ivita debug playbook: <pre><code>ansible-playbook debug-playbook.yml -v\n</code></pre></p>"},{"location":"ansible_basics/lab/#samm-2-labi-hindamine-ja-reflektsioon","title":"\ud83c\udfaf Samm 2: Labi hindamine ja reflektsioon","text":""},{"location":"ansible_basics/lab/#tehnilised-saavutused","title":"Tehnilised saavutused","text":"<p>Kontrollige, et j\u00e4rgmised asjad toimivad:</p> <ul> <li> Ansible t\u00f6\u00f6tab - <code>ansible --version</code> n\u00e4itab versiooni</li> <li> SSH \u00fchendus toimib - saate serveritesse \u00fchenduda ilma paroolita</li> <li> Inventory on funktsionaalne - <code>ansible all -m ping</code> tagastab \"pong\"</li> <li> Ad-hoc k\u00e4sud t\u00f6\u00f6tavad - saate hallata faile ja pakette</li> <li> YAML s\u00fcntaks on selge - m\u00f5istate taandrimist ja struktuuri</li> <li> Esimene playbook toimib - k\u00f5ik taskid \u00f5nnestuvad (roheline v\u00e4ljund)</li> <li> Muutujad t\u00f6\u00f6tavad - saate muuta konfiguratsiooni muutujate kaudu</li> <li> Nginx on k\u00e4igus - <code>curl http://localhost</code> tagastab HTML</li> <li> Konfiguratsioon optimeeritud - <code>ansible.cfg</code> on seadistatud</li> </ul>"},{"location":"ansible_basics/lab/#kontseptuaalne-moistmine","title":"Kontseptuaalne m\u00f5istmine","text":"<p>\u2753 Kontrollige oma m\u00f5istmist:</p> <ol> <li>Ansible arhitektuur:</li> <li>Selgitage oma s\u00f5nadega, miks Ansible on \"agentless\"</li> <li> <p>Mis vahe on \"control node\" ja \"managed node\" vahel?</p> </li> <li> <p>Idempotency:</p> </li> <li>Miks saab playbook'e turvaliselt korduvalt k\u00e4ivitada?</li> <li> <p>Mis vahe on \"changed\" ja \"ok\" state'il?</p> </li> <li> <p>YAML ja muutujad:</p> </li> <li>Miks on taandrimine YAML's nii oluline?</li> <li> <p>Kuidas muutujad teevad playbook'i korduvkasutatavaks?</p> </li> <li> <p>SSH ja turvalisus:</p> </li> <li>Miks on SSH v\u00f5tmed paremad kui paroolid?</li> <li>Kuidas Ansible tagab turvalise kommunikatsiooni?</li> </ol>"},{"location":"ansible_basics/lab/#praktilised-oskused","title":"Praktilised oskused","text":"<p>\ud83d\udd27 Proovige ise:</p> <ol> <li>Muutke Nginx playbook'i:</li> <li>Lisage uus muutuja <code>server_admin_email</code></li> <li> <p>Muutke HTML template'i seda kasutama</p> </li> <li> <p>Looge uus playbook:</p> </li> <li>Installige htop ja tree paketid</li> <li>Looge <code>/opt/tools/</code> kaust</li> <li> <p>Kirjutage info fail installitud t\u00f6\u00f6riistade kohta</p> </li> <li> <p>Eksperimenteerige ad-hoc k\u00e4skudega:</p> </li> <li>Kontrollige k\u00f5igi serverite disk space'i</li> <li>Looge fail k\u00f5ikides serverites praeguse kuup\u00e4eva ja ajaga</li> </ol>"},{"location":"ansible_basics/lab/#valmidus-jargmiseks","title":"Valmidus j\u00e4rgmiseks","text":"<p>Te olete valmis kodut\u00f6\u00f6ks, kui: - M\u00f5istate Ansible'i p\u00f5hikontseptsioone - Saate kirjutada lihtsat YAML s\u00fcntaksit - Oskate kasutada muutujaid ja template'e - M\u00f5istate playbook'ide struktuuri - Saate t\u00f5rkeid diagnoosida ja lahendada</p>"},{"location":"ansible_basics/lab/#jargmised-sammud","title":"\ud83d\ude80 J\u00e4rgmised sammud","text":"<p>Valmis kodut\u00f6\u00f6ks: - Kasutage siin \u00f5pitud oskusi LAMP stack playbook'i loomiseks - Rakendage learned patterns oma serverite automatiseerimiseks - Praktiseerige YAML s\u00fcntaksit ja playbook struktuuri</p> <p>J\u00e4rgmine n\u00e4dal (Ansible Advanced): - Roles ja Galaxy - Templates ja Jinja2 - Conditional logic ja loops - Multi-environment deployments</p>"},{"location":"ansible_basics/lab/#boonusulesanded-juba-ansiblei-oskajatele","title":"\ud83d\ude80 BOONUS\u00dcLESANDED (juba Ansible'i oskajatele)","text":""},{"location":"ansible_basics/lab/#b1-advanced-playbook-patterns-30-min","title":"B1: Advanced Playbook Patterns (30 min)","text":"<pre><code># Advanced inventory and variables\n---\n- name: Advanced Ansible patterns\n  hosts: webservers\n  vars:\n    nginx_configs:\n      - { name: \"api\", port: 3000, upstream: \"app_servers\" }\n      - { name: \"admin\", port: 4000, upstream: \"admin_servers\" }\n\n  tasks:\n    # Dynamic configuration generation\n    - name: Generate nginx configs\n      template:\n        src: nginx-site.j2\n        dest: \"/etc/nginx/sites-available/{{ item.name }}\"\n      loop: \"{{ nginx_configs }}\"\n      notify: reload nginx\n\n    # Conditional deployments\n    - name: Deploy based on environment\n      git:\n        repo: \"{{ app_repo }}\"\n        dest: \"/var/www/{{ app_name }}\"\n        version: \"{{ 'main' if environment == 'production' else 'develop' }}\"\n      when: deployment_enabled | default(false)\n</code></pre>"},{"location":"ansible_basics/lab/#b2-error-handling-ja-performance-25-min","title":"B2: Error Handling ja Performance (25 min)","text":"<pre><code>---\n- name: Advanced error handling\n  hosts: all\n  tasks:\n    # Retry with exponential backoff\n    - name: Download with retries\n      get_url:\n        url: \"{{ app_url }}\"\n        dest: \"/tmp/app.tar.gz\"\n      register: download\n      retries: 5\n      delay: \"{{ 2 ** (ansible_loop.index0) }}\"\n      until: download is succeeded\n\n    # Block/rescue/always pattern\n    - name: Safe deployment\n      block:\n        - name: Deploy application\n          unarchive:\n            src: \"/tmp/app.tar.gz\"\n            dest: \"/var/www/\"\n      rescue:\n        - name: Rollback on failure\n          debug:\n            msg: \"Deployment failed, rolling back...\"\n      always:\n        - name: Cleanup\n          file:\n            path: \"/tmp/app.tar.gz\"\n            state: absent\n</code></pre>"},{"location":"ansible_basics/lab/#b3-custom-modules-ja-advanced-features-20-min","title":"B3: Custom Modules ja Advanced Features (20 min)","text":"<pre><code># Custom filter plugin\nmkdir -p filter_plugins\ncat &gt; filter_plugins/custom.py &lt;&lt; 'EOF'\nclass FilterModule(object):\n    def filters(self):\n        return {'custom_hash': self.custom_hash}\n\n    def custom_hash(self, data):\n        import hashlib\n        return hashlib.md5(str(data).encode()).hexdigest()[:8]\nEOF\n\n# Use in playbook\nansible-playbook -i inventory advanced.yml\n</code></pre>"},{"location":"ansible_basics/lab/#b4-ansible-vault-ja-security-15-min","title":"B4: Ansible Vault ja Security (15 min)","text":"<pre><code># Create encrypted variables\nansible-vault create secrets.yml\nansible-vault edit secrets.yml\n\n# Use in playbook\nansible-playbook site.yml --ask-vault-pass\n\n# Vault in CI/CD\necho \"vault_password\" &gt; .vault_pass\nansible-playbook site.yml --vault-password-file .vault_pass\n</code></pre> <p>H\u00e4sti tehtud! \ud83c\udf89 Te olete n\u00fc\u00fcd v\u00f5imelised automatiseerima nii p\u00f5hilisi kui ka keerukamaid serverihalduse \u00fclesandeid Ansible'iga!</p>"},{"location":"ansible_basics/lecture/","title":"\ud83d\udcda Ansible Basics: Alused","text":""},{"location":"ansible_basics/lecture/#21-ansible-arhitektuur-ja-pohimotted","title":"2.1 Ansible Arhitektuur ja P\u00f5him\u00f5tted","text":""},{"location":"ansible_basics/lecture/#sissejuhatus-automatiseerimisse","title":"Sissejuhatus automatiseerimisse","text":"<p>S\u00fcsteemiadministreerimine traditsioonilistel meetoditel tekitab skaleerumisel m\u00e4rkimisv\u00e4\u00e4rseid v\u00e4ljakutseid. Suurtes infrastruktuurides, kus hallatakse k\u00fcmneid v\u00f5i sadu servereid, muutub k\u00e4sitsi konfiguratsioonide haldamine aegan\u00f5udvaks ja vigadele vastuv\u00f5tlikuks.</p> <p>Ansible on open-source automatiseerimisplatvorm, mis lahendab s\u00fcsteemihalduse, rakenduste juurutamise ja konfiguratsioonide haldamise \u00fclesandeid. Ansible'i peamised eelised on agentless arhitektuur, deklaratiivne s\u00fcntaks ja idempotentsed operatsioonid.</p>"},{"location":"ansible_basics/lecture/#ansible-arhitektuur","title":"Ansible arhitektuur","text":""},{"location":"ansible_basics/lecture/#agentless-lahenemine","title":"Agentless l\u00e4henemine","text":"<p>Ansible kasutab agentless arhitektuuri, mis eristab seda paljudest konkureerivtest lahendustest. See t\u00e4hendab, et hallatavates s\u00fcsteemides ei ole vaja installida ja hooldada t\u00e4iendavat tarkvara.</p> <pre><code>graph TB\n    subgraph \"Control Node\"\n        Ansible[Ansible Engine]\n        Inventory[Inventory]\n        Playbooks[Playbooks]\n    end\n\n    subgraph \"Managed Nodes\"\n        Web1[Web Server 1]\n        Web2[Web Server 2]\n        DB1[Database 1]\n        DB2[Database 2]\n    end\n\n    Ansible --&gt;|SSH| Web1\n    Ansible --&gt;|SSH| Web2\n    Ansible --&gt;|SSH| DB1\n    Ansible --&gt;|SSH| DB2\n\n    Inventory --&gt; Ansible\n    Playbooks --&gt; Ansible\n\n    style Ansible fill:#ff9999\n    style Inventory fill:#99ccff\n    style Playbooks fill:#99ff99\n    style Web1 fill:#ffcc99\n    style Web2 fill:#ffcc99\n    style DB1 fill:#cc99ff\n    style DB2 fill:#cc99ff</code></pre> <p>N\u00f5uded hallatavates s\u00fcsteemides: - SSH server aktiivsena - Python interpreter (versioon 2.7 v\u00f5i 3.5+) - Vajalikud s\u00fcsteemi \u00f5igused operatsioonide sooritamiseks</p>"},{"location":"ansible_basics/lecture/#pohikomponendid","title":"P\u00f5hikomponendid","text":""},{"location":"ansible_basics/lecture/#control-node","title":"Control Node","text":"<p>Control node on s\u00fcsteem, kus Ansible on installitud ja kust k\u00e4ivitatakse automatiseerimise k\u00e4sud. Control node n\u00f5uded: - Unix-laadne operatsioonis\u00fcsteem (Linux, macOS) - Python 3.8 v\u00f5i uuem versioon - SSH klient</p>"},{"location":"ansible_basics/lecture/#managed-nodes","title":"Managed Nodes","text":"<p>Managed nodes on sihtm\u00e4rgid, mida Ansible haldab. Need v\u00f5ivad olla f\u00fc\u00fcsilised serverid, virtuaalmasinad v\u00f5i pilveressursid.</p>"},{"location":"ansible_basics/lecture/#inventory","title":"Inventory","text":"<p>Inventory on struktureeritud fail v\u00f5i andmebaas, mis m\u00e4\u00e4ratleb hallatavate s\u00fcsteemide nimekirja ja nende grupeerimise loogika.</p> <pre><code>[webservers]\nweb1.example.com\nweb2.example.com\n\n[databases] \ndb1.example.com\ndb2.example.com\n\n[production:children]\nwebservers\ndatabases\n</code></pre>"},{"location":"ansible_basics/lecture/#modules","title":"Modules","text":"<p>Moodulid on abstraktsed \u00fchikud, mis kapseldavad konkreetseid funktsionaalsusi. Ansible sisaldab \u00fcle 3000 mooduli, mis katavad s\u00fcsteemihalduse, v\u00f5rgukonfiguratsiooni, pilveplatformide ja rakenduste haldamise vajadused.</p>"},{"location":"ansible_basics/lecture/#toovoog","title":"T\u00f6\u00f6voog","text":"<p>Ansible'i t\u00e4itmists\u00fckkel koosneb j\u00e4rgmistest sammudest:</p> <pre><code>flowchart TD\n    A[Inventory lugemine] --&gt; B[SSH \u00fchendused]\n    B --&gt; C[Mooduli koodi edastamine]\n    C --&gt; D[Operatsioonide t\u00e4itmine]\n    D --&gt; E[Tulemuste kogumine]\n    E --&gt; F[Ajutiste failide eemaldamine]\n\n    style A fill:#99ccff\n    style B fill:#ffcc99\n    style C fill:#99ff99\n    style D fill:#ff9999\n    style E fill:#cc99ff\n    style F fill:#ffff99</code></pre> <ol> <li>Inventory lugemine - s\u00fcsteemide nimekirja laadimine</li> <li>SSH \u00fchenduste loomine - paralleelsed \u00fchendused sihtm\u00e4rkidega</li> <li>Mooduli koodi edastamine - vajalike Python skriptide ajutine kopeerimine</li> <li>Operatsioonide t\u00e4itmine - k\u00e4skude paralleelne k\u00e4ivitamine</li> <li>Tulemuste kogumine - v\u00e4ljundi ja staatuse tagastamine</li> <li>Ajutiste failide eemaldamine - puhastusoperatsioonid</li> </ol>"},{"location":"ansible_basics/lecture/#idempotency-printsiip","title":"Idempotency printsiip","text":"<p>Idempotency on Ansible'i p\u00f5hiprintsiip, mis tagab, et sama operatsiooni korduvk\u00e4ivitamine ei muuda s\u00fcsteemi olekut, kui soovitud olek on juba saavutatud.</p> <pre><code># Esimene k\u00e4ivitamine - nginx installitakse\nansible all -m package -a \"name=nginx state=present\"\n\n# Teine k\u00e4ivitamine - nginx on juba olemas, muudatusi ei tehta\nansible all -m package -a \"name=nginx state=present\"\n</code></pre> <p>Idempotency eelised: - Turvalisus - operatsioonide korduvk\u00e4ivitamine ei tekita kahjulikke k\u00f5rvalm\u00f5jusid - Etteennustatavus - s\u00fcsteemi l\u00f5ppolek on alati sama - Usaldusv\u00e4\u00e4rsus - automatiseerimise skriptid on stabiilsed</p>"},{"location":"ansible_basics/lecture/#vordlus-konkurentidega","title":"V\u00f5rdlus konkurentidega","text":""},{"location":"ansible_basics/lecture/#ansible-vs-puppet","title":"Ansible vs Puppet","text":"Aspekt Ansible Puppet Arhitektuur Agentless Agent-p\u00f5hine Konfiguratsioon YAML Ruby DSL Mudel Push Pull \u00d5ppimisk\u00f5ver Madal K\u00f5rge"},{"location":"ansible_basics/lecture/#ansible-vs-chef","title":"Ansible vs Chef","text":"Aspekt Ansible Chef Keel YAML Ruby Seadistamine Lihtne Keeruline Skaleeritavus Hea V\u00e4ga hea \u00d6kos\u00fcsteem Lai Lai"},{"location":"ansible_basics/lecture/#praktiline-naide","title":"Praktiline n\u00e4ide","text":"<p>Lihtne \u00fchenduvuse testimine:</p> <pre><code># SSH v\u00f5tmete seadistamine\nssh-keygen -t ed25519 -f ~/.ssh/ansible_key\nssh-copy-id -i ~/.ssh/ansible_key.pub user@target_host\n\n# Inventory loomine\necho \"target_host ansible_user=user\" &gt; inventory\n\n# \u00dchenduvuse testimine\nansible -i inventory target_host -m ping\n</code></pre> <p>Oodatav v\u00e4ljund: <pre><code>target_host | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python3\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n</code></pre></p>"},{"location":"ansible_basics/lecture/#kokkuvote","title":"Kokkuv\u00f5te","text":"<p>Ansible pakub t\u00f5husat lahendust infrastruktuuri automatiseerimiseks. Agentless arhitektuur, lihtne YAML s\u00fcntaks ja idempotentsed operatsioonid muudavad selle sobivaks nii v\u00e4ikestele kui suurtele keskkondadele. J\u00e4rgnevates peat\u00fckkides k\u00e4sitletakse SSH konfiguratsiooni, inventory haldamist ja playbook'ide arendamist.</p>"},{"location":"ansible_basics/lecture/#22-ssh-ja-inventory-konfigureerimine","title":"2.2 SSH ja Inventory konfigureerimine","text":""},{"location":"ansible_basics/lecture/#ssh-autentimise-alused","title":"SSH autentimise alused","text":"<p>Ansible tugineb SSH protokollile kommunikatsiooniks hallatavate s\u00fcsteemidega. T\u00f5husa automatiseerimise saavutamiseks on vajalik seadistada v\u00f5tme-p\u00f5hine autentimine, mis elimineerib interaktiivse parooli sisestamise vajaduse.</p>"},{"location":"ansible_basics/lecture/#ssh-votmete-genereerimine","title":"SSH v\u00f5tmete genereerimine","text":"<p>SSH v\u00f5tmepaaride loomine toimub <code>ssh-keygen</code> utiliidiga. Soovitatav on kasutada Ed25519 algoritmi turvalisuse ja j\u00f5udluse optimaalse tasakaalu saavutamiseks.</p> <pre><code># Ed25519 v\u00f5tme genereerimine\nssh-keygen -t ed25519 -C \"ansible-automation\" -f ~/.ssh/ansible_ed25519\n\n# RSA v\u00f5tme genereerimine (vajadusel)\nssh-keygen -t rsa -b 4096 -C \"ansible-automation\" -f ~/.ssh/ansible_rsa\n</code></pre> <p>Parameetrite selgitus: - <code>-t</code> - kr\u00fcptograafilise algoritmi m\u00e4\u00e4ramine - <code>-b</code> - v\u00f5tme pikkus bittides (RSA jaoks) - <code>-C</code> - kommentaar v\u00f5tme identifitseerimiseks - <code>-f</code> - v\u00e4ljundfaili asukoha m\u00e4\u00e4ramine</p>"},{"location":"ansible_basics/lecture/#ssh-agendi-konfigureerimine","title":"SSH agendi konfigureerimine","text":"<p>SSH agent h\u00f5lbustab privaatv\u00f5tmete haldamist, lubades autentimist ilma korduvate paroolide sisestamiseta.</p> <pre><code># SSH agendi k\u00e4ivitamine\neval \"$(ssh-agent -s)\"\n\n# Privaatv\u00f5tme lisamine agenti\nssh-add ~/.ssh/ansible_ed25519\n\n# Agendis olevate v\u00f5tmete kontroll\nssh-add -l\n</code></pre> <p>Automaatse agendi k\u00e4ivitamise seadistamine shell'i konfiguratsioonis:</p> <pre><code># ~/.bashrc v\u00f5i ~/.zshrc\nif [ -z \"$SSH_AUTH_SOCK\" ]; then\n    eval \"$(ssh-agent -s)\"\n    ssh-add ~/.ssh/ansible_ed25519 2&gt;/dev/null\nfi\n</code></pre>"},{"location":"ansible_basics/lecture/#avalike-votmete-levitamine","title":"Avalike v\u00f5tmete levitamine","text":"<p>Avalike v\u00f5tmete autoriseeritud v\u00f5tmete nimekirja lisamine:</p> <pre><code># ssh-copy-id kasutamine (lihtsaim)\nssh-copy-id -i ~/.ssh/ansible_ed25519.pub kasutaja@sihtserver\n\n# K\u00e4sitsi kopeerimine\ncat ~/.ssh/ansible_ed25519.pub | ssh kasutaja@sihtserver \\\n  \"mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\"\n\n# Batch levitamine\nfor server in server1 server2 server3; do\n    ssh-copy-id -i ~/.ssh/ansible_ed25519.pub kasutaja@$server\ndone\n</code></pre>"},{"location":"ansible_basics/lecture/#inventory-struktuur-ja-formaat","title":"Inventory struktuur ja formaat","text":""},{"location":"ansible_basics/lecture/#ini-formaat","title":"INI formaat","text":"<p>Traditsiooniline inventory formaat, sobiv lihtsamatele konfiguratsioonidele:</p> <pre><code># \u00dcksikud hostid\nmail.example.com\nweb1.example.com\nweb2.example.com\n\n# Hostide grupid\n[webservers]\nweb1.example.com\nweb2.example.com\nweb3.example.com\n\n[dbservers]\ndb1.example.com ansible_port=5432\ndb2.example.com ansible_port=5432\n\n# Grupihierarhia\n[production:children]\nwebservers\ndbservers\n\n# Grupi muutujad\n[webservers:vars]\nhttp_port=80\nhttps_port=443\nnginx_user=www-data\n\n[dbservers:vars]\ndb_port=3306\ndb_user=admin\n</code></pre>"},{"location":"ansible_basics/lecture/#yaml-formaat","title":"YAML formaat","text":"<p>Kaasaegne formaat, mis v\u00f5imaldab keerulisemat struktureerimist:</p> <pre><code>all:\n  children:\n    webservers:\n      hosts:\n        web1.example.com:\n          ansible_user: ubuntu\n        web2.example.com:\n          ansible_user: ubuntu\n          ansible_port: 2222\n        web3.example.com:\n          ansible_user: centos\n      vars:\n        http_port: 80\n        https_port: 443\n        nginx_user: www-data\n\n    dbservers:\n      hosts:\n        db1.example.com:\n          ansible_port: 5432\n        db2.example.com:\n          ansible_port: 5432\n      vars:\n        db_port: 3306\n        db_user: admin\n\n    production:\n      children:\n        webservers:\n        dbservers:\n</code></pre>"},{"location":"ansible_basics/lecture/#dunaamiline-inventory","title":"D\u00fcnaamiline inventory","text":"<p>Suurte v\u00f5i muutuvate infrastruktuuride jaoks v\u00f5ib implementeerida d\u00fcnaamilise inventory genereerimise:</p> <pre><code>#!/usr/bin/env python3\nimport json\nimport requests\n\ndef get_inventory():\n    \"\"\"Genereeri inventory v\u00e4listest allikatest\"\"\"\n    inventory = {\n        'webservers': {\n            'hosts': [],\n            'vars': {'http_port': 80}\n        },\n        'dbservers': {\n            'hosts': [],\n            'vars': {'db_port': 3306}\n        },\n        '_meta': {\n            'hostvars': {}\n        }\n    }\n\n    # N\u00e4ide: loe serverid API-st\n    # servers = requests.get('https://api.company.com/servers').json()\n    # for server in servers:\n    #     inventory[server['group']]['hosts'].append(server['hostname'])\n\n    return inventory\n\nif __name__ == '__main__':\n    print(json.dumps(get_inventory(), indent=2))\n</code></pre>"},{"location":"ansible_basics/lecture/#ansible-konfigureerimine","title":"Ansible konfigureerimine","text":""},{"location":"ansible_basics/lecture/#ansiblecfg-faili-struktuur","title":"ansible.cfg faili struktuur","text":"<p>Ansible'i k\u00e4itumist saab kohandada konfiguratsiooni faili abil. Soovitatav on hoida <code>ansible.cfg</code> faili projekti juurkaustas.</p> <pre><code>[defaults]\n# Inventory asukoht\ninventory = inventory/\n\n# SSH seadistused\nhost_key_checking = False\nremote_user = ansible\nprivate_key_file = ~/.ssh/ansible_ed25519\n\n# Paralleelsuse seadistused\nforks = 10\ntimeout = 30\n\n# Logimise seadistused\nlog_path = ./ansible.log\ndisplay_skipped_hosts = False\n\n# Callback pluginide konfigureerimine\nstdout_callback = yaml\nbin_ansible_callbacks = True\n\n[ssh_connection]\n# SSH \u00fchenduste optimeerimine\nssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null\ncontrol_path_dir = ~/.ansible/cp\npipelining = True\nretries = 3\n\n[privilege_escalation]\nbecome = True\nbecome_method = sudo\nbecome_user = root\nbecome_ask_pass = False\n</code></pre>"},{"location":"ansible_basics/lecture/#konfiguratsiooni-prioriteet","title":"Konfiguratsiooni prioriteet","text":"<p>Ansible otsib konfiguratsiooni j\u00e4rgmises j\u00e4rjekorras:</p> <ol> <li>ANSIBLE_CONFIG keskkonna muutuja</li> <li>ansible.cfg praeguses t\u00f6\u00f6kaustas</li> <li>~/.ansible.cfg kasutaja kodukaustas</li> <li>/etc/ansible/ansible.cfg s\u00fcsteemi tasemel</li> </ol> <p>Kehtiva konfiguratsiooni kontroll:</p> <pre><code># Konfiguratsiooni vaatamine\nansible-config view\n\n# K\u00f5ikide parameetrite dump\nansible-config dump\n</code></pre>"},{"location":"ansible_basics/lecture/#host-patterns-ja-sihtmarkide-valimine","title":"Host patterns ja sihtm\u00e4rkide valimine","text":"<p>Ansible v\u00f5imaldab paindlikku serverite valimist erinevate mustrite abil:</p> <pre><code># K\u00f5ik hostid\nansible all -m ping\n\n# Konkreetne grupp\nansible webservers -m ping\n\n# Mitu gruppi\nansible webservers:dbservers -m ping\n\n# V\u00e4listamine\nansible all:!dbservers -m ping\n\n# L\u00f5ikumine\nansible webservers:&amp;production -m ping\n\n# Regulaaravaldised\nansible ~web.* -m ping\n\n# Vahemiku m\u00e4\u00e4ramine\nansible web[1:3] -m ping\n</code></pre>"},{"location":"ansible_basics/lecture/#uhenduse-diagnostika","title":"\u00dchenduse diagnostika","text":""},{"location":"ansible_basics/lecture/#pohilised-testid","title":"P\u00f5hilised testid","text":"<pre><code># \u00dchenduvuse test\nansible all -m ping\n\n# SSH \u00fchenduse detailne test\nansible all -m command -a \"whoami\" -vvv\n\n# S\u00fcsteemi faktide kogumine\nansible all -m setup --tree /tmp/facts\n</code></pre>"},{"location":"ansible_basics/lecture/#tuupilised-probleemid-ja-lahendused","title":"T\u00fc\u00fcpilised probleemid ja lahendused","text":"<p>SSH v\u00f5tme probleemid: <pre><code># V\u00f5tme \u00f5iguste kontroll\nchmod 600 ~/.ssh/ansible_ed25519\nchmod 644 ~/.ssh/ansible_ed25519.pub\n\n# SSH agendi kontroll\nssh-add -l\n</code></pre></p> <p>Host key verification: <pre><code># Ajutine keelamine\nexport ANSIBLE_HOST_KEY_CHECKING=False\n\n# T\u00e4ielik keelamine\necho \"host_key_checking = False\" &gt;&gt; ansible.cfg\n</code></pre></p> <p>\u00d5iguste probleemid: <pre><code># Sudo konfiguratsiooni test\nansible all -m command -a \"sudo whoami\"\n\n# Sudoers faili kontroll\nansible all -m shell -a \"sudo -l\"\n</code></pre></p>"},{"location":"ansible_basics/lecture/#inventory-best-practices","title":"Inventory best practices","text":""},{"location":"ansible_basics/lecture/#suurte-projektide-struktuur","title":"Suurte projektide struktuur","text":"<pre><code>inventory/\n\u251c\u2500\u2500 production/\n\u2502   \u251c\u2500\u2500 hosts.yml\n\u2502   \u251c\u2500\u2500 group_vars/\n\u2502   \u2502   \u251c\u2500\u2500 all/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 common.yml\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 vault.yml\n\u2502   \u2502   \u251c\u2500\u2500 webservers.yml\n\u2502   \u2502   \u2514\u2500\u2500 dbservers.yml\n\u2502   \u2514\u2500\u2500 host_vars/\n\u2502       \u251c\u2500\u2500 web1.example.com.yml\n\u2502       \u2514\u2500\u2500 db1.example.com.yml\n\u251c\u2500\u2500 staging/\n\u2514\u2500\u2500 development/\n</code></pre>"},{"location":"ansible_basics/lecture/#muutujate-hierarhia","title":"Muutujate hierarhia","text":"<p>Ansible muutujate prioriteet (k\u00f5rgem alistab madalam):</p> <ol> <li>Extra vars (<code>ansible-playbook -e</code>)</li> <li>Task vars</li> <li>Block vars</li> <li>Role ja include vars</li> <li>Play vars</li> <li>Host facts</li> <li>Host vars (inventory)</li> <li>Group vars (inventory)</li> <li>Group vars (all)</li> <li>Role defaults</li> </ol>"},{"location":"ansible_basics/lecture/#turvalisuse-aspektid","title":"Turvalisuse aspektid","text":"<p>Tundliku informatsiooni kaitsmine Ansible Vault'iga:</p> <pre><code># Vault faili loomine\nansible-vault create group_vars/all/vault.yml\n\n# Vault faili redigeerimine\nansible-vault edit group_vars/all/vault.yml\n\n# Vault parooliga k\u00e4ivitamine\nansible-playbook --ask-vault-pass site.yml\n</code></pre>"},{"location":"ansible_basics/lecture/#kokkuvote_1","title":"Kokkuv\u00f5te","text":"<p>SSH v\u00f5tme-p\u00f5hine autentimine ja korrektselt struktureeritud inventory on Ansible automatiseerimise nurgakivid. Proper konfigureerimine tagab turvalisuse, skaleeritavuse ja hallatavuse. J\u00e4rgmises peat\u00fckis k\u00e4sitletakse ad-hoc k\u00e4skude kasutamist operatiivsete \u00fclesannete lahendamiseks.</p>"},{"location":"ansible_basics/lecture/#23-ad-hoc-kaskude-kasutamine","title":"2.3 Ad-hoc k\u00e4skude kasutamine","text":""},{"location":"ansible_basics/lecture/#ad-hoc-kaskude-olemus-ja-rakendusala","title":"Ad-hoc k\u00e4skude olemus ja rakendusala","text":"<p>Ad-hoc k\u00e4sud on Ansible'i funktsioon, mis v\u00f5imaldab k\u00e4ivitada \u00fchekordse operatsioone otse k\u00e4surealt, ilma playbook'ide loomise vajaduseta. Need sobivad kiireteks uuringulisteks v\u00f5i diagnostilisteks toiminguteks.</p>"},{"location":"ansible_basics/lecture/#kasutamise-stsenaariumid","title":"Kasutamise stsenaariumid","text":"<p>Sobivad rakendused: - S\u00fcsteemi oleku kiire kontroll - Diagnostiliste andmete kogumine - Incident response operatsioonid - Eksploratiivsed uuringud - Monitoring ja alerting</p> <p>Ebasobivad rakendused: - Keerulised mitme sammuga konfiguratsioonid - Regulaarsed hooldusoperatsioonid - Dokumenteerimist n\u00f5udvad protseduurid - Produktsiooni deployment'id</p>"},{"location":"ansible_basics/lecture/#suntaksi-struktuur","title":"S\u00fcntaksi struktuur","text":"<p>Ad-hoc k\u00e4skude p\u00f5hiline formaat:</p> <pre><code>ansible &lt;target&gt; -m &lt;module&gt; -a \"&lt;arguments&gt;\" [options]\n</code></pre> <p>Komponendid: - <code>&lt;target&gt;</code> - inventory pattern v\u00f5i grupi nimi - <code>&lt;module&gt;</code> - kasutatav Ansible moodul - <code>&lt;arguments&gt;</code> - mooduli parameetrid - <code>[options]</code> - t\u00e4iendavad k\u00e4sulipud</p>"},{"location":"ansible_basics/lecture/#pohilised-moodulid","title":"P\u00f5hilised moodulid","text":""},{"location":"ansible_basics/lecture/#ping-uhenduvuse-testimine","title":"ping - \u00dchenduvuse testimine","text":"<p>Ping moodul kontrollib SSH \u00fchenduvust ja Python interpreteri olemasolu:</p> <pre><code># K\u00f5ikide hostide test\nansible all -m ping\n\n# Konkreetse grupi test\nansible webservers -m ping\n\n# Pattern matching\nansible 'web*' -m ping\n\n# V\u00e4ljund t\u00fc\u00fcpilise eduka vastuse korral\nansible web1.example.com -m ping\n# web1.example.com | SUCCESS =&gt; {\n#     \"ansible_facts\": {\n#         \"discovered_interpreter_python\": \"/usr/bin/python3\"\n#     },\n#     \"changed\": false,\n#     \"ping\": \"pong\"\n# }\n</code></pre>"},{"location":"ansible_basics/lecture/#command-vs-shell-moodulid","title":"command vs shell moodulid","text":""},{"location":"ansible_basics/lecture/#command-moodul","title":"command moodul","text":"<p>Turvalisem variant, mis ei luba shell'i funktsionaalsust:</p> <pre><code># S\u00fcsteemi aja kuvamine\nansible all -m command -a \"date\"\n\n# Protsesside loetelu\nansible all -m command -a \"ps aux\"\n\n# Failis\u00fcsteemi statistika\nansible all -m command -a \"df -h\"\n\n# Shell operaatorid EI t\u00f6\u00f6ta\nansible all -m command -a \"ps aux | grep nginx\"  # EBA\u00d5NNESTUB\n</code></pre>"},{"location":"ansible_basics/lecture/#shell-moodul","title":"shell moodul","text":"<p>V\u00f5imaldab shell'i funktsionaalsust, kuid suurema turvariski hinnaga:</p> <pre><code># Torudega k\u00e4sud\nansible all -m shell -a \"ps aux | grep nginx\"\n\n# Keskkonna muutujad\nansible all -m shell -a \"echo $HOME\"\n\n# K\u00e4su asendamine\nansible all -m shell -a \"kill $(pgrep -f nginx)\"\n\n# Failide \u00fcmbersuunamine\nansible all -m shell -a \"dmesg | tail -20 &gt; /tmp/kernel.log\"\n</code></pre>"},{"location":"ansible_basics/lecture/#package-tarkvarahaldus","title":"package - Tarkvarahaldus","text":"<p>Universaalne pakettide haldamise moodul:</p> <pre><code># \u00dche paketi installimine\nansible all -m package -a \"name=htop state=present\" --become\n\n# Mitme paketi installimine\nansible all -m package -a \"name=curl,wget,git state=present\" --become\n\n# Paketi eemaldamine\nansible webservers -m package -a \"name=apache2 state=absent\" --become\n\n# Pakettide cache uuendamine (Debian/Ubuntu)\nansible ubuntu_hosts -m package -a \"update_cache=yes\" --become\n</code></pre> <p>Spetsiifilised pakettide haldurid:</p> <pre><code># APT (Debian/Ubuntu)\nansible ubuntu_hosts -m apt -a \"name=nginx state=present update_cache=yes\" --become\n\n# YUM (RHEL/CentOS 7)\nansible centos_hosts -m yum -a \"name=nginx state=present\" --become\n\n# DNF (Fedora, RHEL 8+)\nansible fedora_hosts -m dnf -a \"name=nginx state=present\" --become\n</code></pre>"},{"location":"ansible_basics/lecture/#service-teenuste-haldamine","title":"service - Teenuste haldamine","text":"<p>S\u00fcsteemi teenuste kontroll:</p> <pre><code># Teenuse k\u00e4ivitamine\nansible webservers -m service -a \"name=nginx state=started\" --become\n\n# Teenuse peatamine\nansible webservers -m service -a \"name=apache2 state=stopped\" --become\n\n# Teenuse taask\u00e4ivitamine\nansible webservers -m service -a \"name=nginx state=restarted\" --become\n\n# Autostart'i lubamine\nansible webservers -m service -a \"name=nginx enabled=yes\" --become\n\n# Kombineeritud operatsioon\nansible webservers -m service -a \"name=nginx state=started enabled=yes\" --become\n</code></pre>"},{"location":"ansible_basics/lecture/#file-failisusteemi-operatsioonid","title":"file - Failis\u00fcsteemi operatsioonid","text":"<p>Failide ja kataloogide haldamine:</p> <pre><code># Kataloogi loomine\nansible all -m file -a \"path=/opt/application state=directory mode=0755\" --become\n\n# Faili loomine (touch)\nansible all -m file -a \"path=/tmp/marker state=touch\"\n\n# \u00d5iguste muutmine\nansible all -m file -a \"path=/etc/app.conf owner=app group=app mode=0640\" --become\n\n# Simbolilise lingi loomine\nansible all -m file -a \"src=/usr/bin/python3 dest=/usr/bin/python state=link\" --become\n\n# Failide kustutamine\nansible all -m file -a \"path=/tmp/tempfile state=absent\"\n\n# Rekursiivne \u00f5iguste m\u00e4\u00e4ramine\nansible all -m file -a \"path=/var/www state=directory owner=www-data group=www-data recurse=yes\" --become\n</code></pre>"},{"location":"ansible_basics/lecture/#copy-failide-edastamine","title":"copy - Failide edastamine","text":"<p>Sisu kopeerimine control node'st managed node'idesse:</p> <pre><code># Faili kopeerimine\nansible webservers -m copy -a \"src=/local/config.conf dest=/etc/app/config.conf\" --become\n\n# Backup'iga kopeerimine\nansible webservers -m copy -a \"src=nginx.conf dest=/etc/nginx/nginx.conf backup=yes\" --become\n\n# Inline sisu loomine\nansible all -m copy -a \"content='server_tokens off;' dest=/etc/nginx/conf.d/security.conf\" --become\n\n# \u00d5igustega kopeerimine\nansible all -m copy -a \"src=script.sh dest=/usr/local/bin/script.sh mode=0755 owner=root\" --become\n</code></pre>"},{"location":"ansible_basics/lecture/#susteemi-diagnostika","title":"S\u00fcsteemi diagnostika","text":""},{"location":"ansible_basics/lecture/#riistvara-ja-susteemi-informatsioon","title":"Riistvara ja s\u00fcsteemi informatsioon","text":"<p>Setup moodul kogub p\u00f5hjalikku informatsiooni hallatavate s\u00fcsteemide kohta:</p> <pre><code># Operatsioonis\u00fcsteemi informatsioon\nansible all -m setup -a \"filter=ansible_distribution*\"\n\n# M\u00e4lu informatsioon\nansible all -m setup -a \"filter=ansible_memory_mb\"\n\n# V\u00f5rgu konfiguratsioon\nansible all -m setup -a \"filter=ansible_default_ipv4\"\n\n# CPU informatsioon\nansible all -m setup -a \"filter=ansible_processor*\"\n\n# Kettaruumi informatsioon\nansible all -m setup -a \"filter=ansible_mounts\"\n\n# K\u00f5ik faktid (mahukad andmed)\nansible all -m setup --tree /tmp/facts/\n</code></pre>"},{"location":"ansible_basics/lecture/#performance-monitoring","title":"Performance monitoring","text":"<p>S\u00fcsteemi j\u00f5udluse kontroll:</p> <pre><code># S\u00fcsteemi koormus\nansible all -m command -a \"uptime\"\n\n# M\u00e4lu kasutus\nansible all -m shell -a \"free -h\"\n\n# Kettakasutus\nansible all -m shell -a \"df -h\"\n\n# Top protsessid CPU j\u00e4rgi\nansible all -m shell -a \"ps aux --sort=-%cpu | head -10\"\n\n# Top protsessid m\u00e4lu j\u00e4rgi\nansible all -m shell -a \"ps aux --sort=-%mem | head -10\"\n\n# I/O statistika\nansible all -m shell -a \"iostat -x 1 1\" \n\n# Network statistika\nansible all -m shell -a \"ss -tuln\"\n</code></pre>"},{"location":"ansible_basics/lecture/#logide-analuus","title":"Logide anal\u00fc\u00fcs","text":"<p>S\u00fcsteemi logide kiire uurimine:</p> <pre><code># S\u00fcsteemi logide viimaseid ridu\nansible all -m shell -a \"journalctl -n 20 --no-pager\"\n\n# Specific teenuse logid\nansible webservers -m shell -a \"journalctl -u nginx -n 10 --no-pager\"\n\n# Error'ite otsimine\nansible all -m shell -a \"journalctl --since='1 hour ago' -p err --no-pager\"\n\n# Kerneli s\u00f5numid\nansible all -m shell -a \"dmesg | tail -20\"\n\n# Faili-p\u00f5hised logid\nansible webservers -m shell -a \"tail -20 /var/log/nginx/error.log\"\n</code></pre>"},{"location":"ansible_basics/lecture/#tapsemad-operatsioonid","title":"T\u00e4psemad operatsioonid","text":""},{"location":"ansible_basics/lecture/#kasutajate-haldamine","title":"Kasutajate haldamine","text":"<pre><code># Kasutaja loomine\nansible all -m user -a \"name=appuser shell=/bin/bash home=/home/appuser\" --become\n\n# Kasutaja grupi muutmine\nansible all -m user -a \"name=appuser groups=sudo,www-data append=yes\" --become\n\n# SSH v\u00f5tme lisamine\nansible all -m authorized_key -a \"user=appuser key='{{ lookup('file', '~/.ssh/id_rsa.pub') }}'\" --become\n</code></pre>"},{"location":"ansible_basics/lecture/#vorgu-diagnostika","title":"V\u00f5rgu diagnostika","text":"<pre><code># \u00dchenduvuse test\nansible all -m command -a \"ping -c 3 google.com\"\n\n# DNS lahendamine\nansible all -m command -a \"nslookup example.com\"\n\n# Pordid kuulamas\nansible all -m shell -a \"netstat -tlnp\"\n\n# Aktiivsed \u00fchendused\nansible all -m shell -a \"ss -tupln\"\n</code></pre>"},{"location":"ansible_basics/lecture/#kasurea-lipud-ja-optioonid","title":"K\u00e4surea lipud ja optioonid","text":""},{"location":"ansible_basics/lecture/#privilege-escalation","title":"Privilege escalation","text":"<pre><code># Sudo kasutamine\nansible all -m package -a \"name=htop state=present\" --become\n\n# Konkreetse kasutajana k\u00e4ivitamine\nansible all -m command -a \"whoami\" --become-user=postgres --become\n\n# Sudo meetodi m\u00e4\u00e4ramine\nansible all -m command -a \"id\" --become-method=su --become\n</code></pre>"},{"location":"ansible_basics/lecture/#paralleelsuse-kontroll","title":"Paralleelsuse kontroll","text":"<pre><code># J\u00e4rjestikune t\u00e4itmine\nansible all -m ping --forks=1\n\n# Suurem paralleelsus\nansible all -m setup --forks=20\n</code></pre>"},{"location":"ansible_basics/lecture/#sihtmarkide-piiramine","title":"Sihtm\u00e4rkide piiramine","text":"<pre><code># Pattern'iga piiramine\nansible 'web*' -m ping\n\n# Grupi v\u00e4listamine\nansible all:!databases -m command -a \"uptime\"\n\n# Kombineeritud tingimused\nansible webservers:&amp;production -m service -a \"name=nginx state=restarted\" --become\n\n# Hosti limiteerimine\nansible all --limit web1.example.com,web2.example.com -m ping\n</code></pre>"},{"location":"ansible_basics/lecture/#kuiva-kaivitamise-reziim","title":"Kuiva k\u00e4ivitamise re\u017eiim","text":"<pre><code># Kontroll ilma muudatusteta\nansible all -m package -a \"name=nginx state=present\" --check\n\n# Muudatuste kuvamine\nansible all -m copy -a \"src=test.conf dest=/etc/test.conf\" --check --diff\n</code></pre>"},{"location":"ansible_basics/lecture/#batch-operatsioonid","title":"Batch operatsioonid","text":""},{"location":"ansible_basics/lecture/#mitme-kasu-jarjestus","title":"Mitme k\u00e4su j\u00e4rjestus","text":"<p>Keerulisemate \u00fclesannete jaoks v\u00f5ib kombineerida mitu ad-hoc k\u00e4sku:</p> <pre><code>#!/bin/bash\n# Veebiserveri kiire restart\nansible webservers -m service -a \"name=nginx state=stopped\" --become\nansible webservers -m command -a \"sleep 5\"\nansible webservers -m service -a \"name=nginx state=started\" --become\nansible webservers -m shell -a \"curl -I http://localhost\" \n</code></pre>"},{"location":"ansible_basics/lecture/#informatsioon-kogumise-skript","title":"Informatsioon kogumise skript","text":"<pre><code>#!/bin/bash\n# S\u00fcsteemi auditi skript\necho \"=== System Information ===\" &gt; audit.log\nansible all -m setup -a \"filter=ansible_distribution*\" &gt;&gt; audit.log\necho \"=== Disk Usage ===\" &gt;&gt; audit.log  \nansible all -m shell -a \"df -h\" &gt;&gt; audit.log\necho \"=== Memory Usage ===\" &gt;&gt; audit.log\nansible all -m shell -a \"free -h\" &gt;&gt; audit.log\necho \"=== Running Services ===\" &gt;&gt; audit.log\nansible all -m shell -a \"systemctl list-units --type=service --state=running --no-pager\" &gt;&gt; audit.log\n</code></pre>"},{"location":"ansible_basics/lecture/#kokkuvote_2","title":"Kokkuv\u00f5te","text":"<p>Ad-hoc k\u00e4sud pakuvad v\u00f5imsat t\u00f6\u00f6riista operatiivsete \u00fclesannete lahendamiseks Ansible infrastruktuuris. Kuigi need sobivad h\u00e4sti diagnostikaks ja lihtsateks operatsioonideks, keerulisema automatiseerimise jaoks tuleks kasutada playbook'e. J\u00e4rgmises peat\u00fckis k\u00e4sitletakse YAML s\u00fcntaksit ja playbook'ide struktuuri.</p>"},{"location":"ansible_basics/lecture/#24-yaml-suntaks-ja-playbookide-alused","title":"2.4 YAML s\u00fcntaks ja Playbook'ide alused","text":""},{"location":"ansible_basics/lecture/#yaml-konfiguratsioonikeel","title":"YAML konfiguratsioonikeel","text":"<p>YAML (YAML Ain't Markup Language) on inimloetav andmete serialiseerimise standard, mida Ansible kasutab konfiguratsioonifailide ja playbook'ide kirjutamiseks. YAML-i eesm\u00e4rk on pakkuda lihtsat ja intuitiivset s\u00fcntaksit keeruliste andmestruktuuride kirjeldamiseks.</p>"},{"location":"ansible_basics/lecture/#yaml-vs-alternatiivsed-formaadid","title":"YAML vs alternatiivsed formaadid","text":"<p>YAML: <pre><code>application:\n  name: \"web-service\"\n  version: \"1.2.3\"\n  ports:\n    - 80\n    - 443\n  configuration:\n    debug: false\n    max_connections: 1000\n</code></pre></p> <p>JSON ekvivalent: <pre><code>{\n  \"application\": {\n    \"name\": \"web-service\",\n    \"version\": \"1.2.3\",\n    \"ports\": [80, 443],\n    \"configuration\": {\n      \"debug\": false,\n      \"max_connections\": 1000\n    }\n  }\n}\n</code></pre></p> <p>XML ekvivalent: <pre><code>&lt;application&gt;\n  &lt;name&gt;web-service&lt;/name&gt;\n  &lt;version&gt;1.2.3&lt;/version&gt;\n  &lt;ports&gt;\n    &lt;port&gt;80&lt;/port&gt;\n    &lt;port&gt;443&lt;/port&gt;\n  &lt;/ports&gt;\n  &lt;configuration&gt;\n    &lt;debug&gt;false&lt;/debug&gt;\n    &lt;max_connections&gt;1000&lt;/max_connections&gt;\n  &lt;/configuration&gt;\n&lt;/application&gt;\n</code></pre></p>"},{"location":"ansible_basics/lecture/#yaml-suntaksi-reeglid","title":"YAML s\u00fcntaksi reeglid","text":""},{"location":"ansible_basics/lecture/#taandrimise-nouded","title":"Taandrimise n\u00f5uded","text":"<p>YAML kasutab taandrimist hierarhia m\u00e4\u00e4ramiseks. Taandrimine peab olema j\u00e4rjekindel ja kasutama t\u00fchikuid:</p> <pre><code># \u00d5ige struktuur\nparent:\n  child1: value1\n  child2: value2\n  nested_parent:\n    nested_child: nested_value\n\n# Vale struktuur\nparent:\nchild1: value1          # Vale tase\n  child2: value2\n    nested_parent:      # Inconsistent indentation\n  nested_child: value   # Vale tase\n</code></pre>"},{"location":"ansible_basics/lecture/#andmetuubid","title":"Andmet\u00fc\u00fcbid","text":"<p>Skalaarid: <pre><code>string_value: \"Hello World\"\ninteger_value: 42\nfloat_value: 3.14159\nboolean_true: true\nboolean_false: false\nnull_value: null\n</code></pre></p> <p>Loendid (Arrays): <pre><code># Kompaktne formaat\nfruits: [apple, banana, orange]\n\n# Laiendatud formaat\nfruits:\n  - apple\n  - banana\n  - orange\n\n# Objektide loend\nservers:\n  - name: web1\n    ip: 192.168.1.10\n  - name: web2\n    ip: 192.168.1.11\n</code></pre></p> <p>V\u00f5tme-v\u00e4\u00e4rtuse paarid (Dictionaries): <pre><code>server_config:\n  hostname: web1.example.com\n  port: 80\n  ssl_enabled: true\n  allowed_ips:\n    - 192.168.1.0/24\n    - 10.0.0.0/8\n</code></pre></p>"},{"location":"ansible_basics/lecture/#mitme-rea-stringid","title":"Mitme rea stringid","text":"<p>Literal style (|) - s\u00e4ilitab reavahetused: <pre><code>description: |\n  See on pikk kirjeldus,\n  mis sisaldab mitut rida\n  ja s\u00e4ilitab k\u00f5ik reavahetused.\n</code></pre></p> <p>Folded style (&gt;) - \u00fchendab ridadeks: <pre><code>summary: &gt;\n  See tekst kirjutatakse\n  mitmel real, aga tulemuseks\n  on \u00fcks pikk rida.\n</code></pre></p>"},{"location":"ansible_basics/lecture/#playbookide-struktuur","title":"Playbook'ide struktuur","text":""},{"location":"ansible_basics/lecture/#playbooki-anatoomia","title":"Playbook'i anatoomia","text":"<p>Playbook koosneb \u00fchest v\u00f5i mitmest \"play'st\", mis on suunatud konkreetsetele hostidele:</p> <pre><code>---\n- name: \"Esimene play - veebiserveri seadistamine\"\n  hosts: webservers\n  become: yes\n  vars:\n    http_port: 80\n    server_name: example.com\n\n  tasks:\n    - name: \"Nginx'i installimine\"\n      package:\n        name: nginx\n        state: present\n\n- name: \"Teine play - andmebaasi seadistamine\"  \n  hosts: dbservers\n  become: yes\n\n  tasks:\n    - name: \"MySQL installimine\"\n      package:\n        name: mysql-server\n        state: present\n</code></pre>"},{"location":"ansible_basics/lecture/#play-komponendid","title":"Play komponendid","text":""},{"location":"ansible_basics/lecture/#hosts-directive","title":"Hosts directive","text":"<p>M\u00e4\u00e4rab sihtm\u00e4rgid, kus play k\u00e4ivitatakse:</p> <pre><code>hosts: all                    # K\u00f5ik inventory hostid\nhosts: webservers            # Konkreetne grupp\nhosts: web*.example.com      # Pattern matching\nhosts: webservers:dbservers  # Mitme grupi kombinatsioon\nhosts: all:!production       # V\u00e4listamisega\n</code></pre>"},{"location":"ansible_basics/lecture/#variables","title":"Variables","text":"<p>Muutujate defineerimine play tasemel:</p> <pre><code>vars:\n  app_name: \"myapp\"\n  app_version: \"2.1.0\"\n  app_port: 8080\n  app_users:\n    - admin\n    - operator\n  app_config:\n    debug: false\n    timeout: 30\n</code></pre>"},{"location":"ansible_basics/lecture/#tasks","title":"Tasks","text":"<p>\u00dclesannete loend, mis t\u00e4idetakse j\u00e4rjekorras:</p> <pre><code>tasks:\n  - name: \"L\u00fchike, kirjeldav \u00fclesande nimi\"\n    module_name:\n      parameter1: value1\n      parameter2: value2\n    when: condition\n    tags: [tag1, tag2]\n</code></pre>"},{"location":"ansible_basics/lecture/#muutujate-kasutamine","title":"Muutujate kasutamine","text":""},{"location":"ansible_basics/lecture/#muutujate-interpoleerimine","title":"Muutujate interpoleerimine","text":"<p>YAML-is kasutatakse Jinja2 template s\u00fcntaksit muutujate asendamiseks:</p> <pre><code>- name: \"Rakenduse seadistamine\"\n  hosts: webservers\n  vars:\n    app_name: \"webstore\"\n    app_port: 8080\n    config_path: \"/etc/{{ app_name }}\"\n\n  tasks:\n    - name: \"Loo konfiguratsioonikaust {{ config_path }}\"\n      file:\n        path: \"{{ config_path }}\"\n        state: directory\n        mode: '0755'\n\n    - name: \"Genereeri konfiguratsioonifail\"\n      copy:\n        content: |\n          [application]\n          name={{ app_name }}\n          port={{ app_port }}\n          debug=false\n        dest: \"{{ config_path }}/app.conf\"\n</code></pre>"},{"location":"ansible_basics/lecture/#muutujate-allikad","title":"Muutujate allikad","text":"<p>Ansible v\u00f5tab muutujaid mitmest allikast hierarhilises j\u00e4rjekorras:</p> <ol> <li>Extra vars (<code>-e</code> k\u00e4sureal)</li> <li>Task variables</li> <li>Block variables  </li> <li>Role variables</li> <li>Play variables</li> <li>Host facts</li> <li>Host variables</li> <li>Group variables</li> <li>Default variables</li> </ol> <pre><code># group_vars/webservers.yml\nnginx_port: 80\nnginx_user: www-data\nssl_certificate: \"/etc/ssl/certs/{{ ansible_fqdn }}.crt\"\n\n# host_vars/web1.example.com.yml  \nnginx_port: 8080\ncustom_config: true\n</code></pre>"},{"location":"ansible_basics/lecture/#handlers-susteem","title":"Handlers s\u00fcsteem","text":"<p>Handlers on erik\u00fclesanded, mis k\u00e4ivitatakse ainult notification'i peale ja alles play l\u00f5pus:</p> <pre><code>- name: \"Nginx'i konfigureerimine\"\n  hosts: webservers\n  become: yes\n\n  tasks:\n    - name: \"Nginx p\u00f5hikonfiguratsiooni uuendamine\"\n      template:\n        src: nginx.conf.j2\n        dest: /etc/nginx/nginx.conf\n      notify:\n        - restart nginx\n        - reload systemd\n\n    - name: \"SSL sertifikaadi paigaldamine\"\n      copy:\n        src: \"{{ ssl_cert_file }}\"\n        dest: /etc/ssl/certs/nginx.crt\n      notify: restart nginx\n\n  handlers:\n    - name: restart nginx\n      service:\n        name: nginx\n        state: restarted\n\n    - name: reload systemd\n      systemd:\n        daemon_reload: yes\n</code></pre> <p>Handler'i k\u00e4itumise reeglid: - K\u00e4ivitatakse ainult notification'i korral - K\u00e4ivitatakse play l\u00f5pus isegi siis, kui mitu task'i sama handler'it notify'ib - Ei k\u00e4ivitata, kui task eba\u00f5nnestub (v.a force_handlers: yes)</p>"},{"location":"ansible_basics/lecture/#praktiline-naide-lamp-stack","title":"Praktiline n\u00e4ide: LAMP stack","text":"<p>Kompleksne playbook veebiserveri infrastruktuuri seadistamiseks:</p> <pre><code>---\n- name: \"LAMP stack'i paigaldamine ja konfigureerimine\"\n  hosts: webservers\n  become: yes\n  vars:\n    mysql_root_password: \"{{ vault_mysql_root_password }}\"\n    app_database: \"webapp_db\"\n    app_user: \"webapp_user\"\n    app_password: \"{{ vault_app_password }}\"\n    web_root: \"/var/www/html\"\n    php_packages:\n      - php\n      - php-mysql\n      - php-curl\n      - php-gd\n      - libapache2-mod-php\n\n  pre_tasks:\n    - name: \"S\u00fcsteemi uuendamine\"\n      package:\n        update_cache: yes\n        upgrade: dist\n\n  tasks:\n    - name: \"Apache veebiserveri installimine\"\n      package:\n        name: apache2\n        state: present\n      notify: enable apache\n\n    - name: \"MySQL serveri installimine\"\n      package:\n        name:\n          - mysql-server\n          - python3-pymysql\n        state: present\n      notify: \n        - start mysql\n        - secure mysql\n\n    - name: \"PHP ja moodulite installimine\"\n      package:\n        name: \"{{ php_packages }}\"\n        state: present\n      notify: restart apache\n\n    - name: \"Apache moodulite lubamine\"\n      apache2_module:\n        name: \"{{ item }}\"\n        state: present\n      loop:\n        - rewrite\n        - ssl\n      notify: restart apache\n\n    - name: \"Rakenduse kataloogi loomine\"\n      file:\n        path: \"{{ web_root }}/{{ app_database }}\"\n        state: directory\n        owner: www-data\n        group: www-data\n        mode: '0755'\n\n    - name: \"PHP test lehe loomine\"\n      template:\n        src: index.php.j2\n        dest: \"{{ web_root }}/index.php\"\n        owner: www-data\n        group: www-data\n        mode: '0644'\n\n    - name: \"MySQL root parooli seadistamine\"\n      mysql_user:\n        name: root\n        password: \"{{ mysql_root_password }}\"\n        login_unix_socket: /var/run/mysqld/mysqld.sock\n        state: present\n\n    - name: \"Rakenduse andmebaasi loomine\"\n      mysql_db:\n        name: \"{{ app_database }}\"\n        login_user: root\n        login_password: \"{{ mysql_root_password }}\"\n        state: present\n\n    - name: \"Rakenduse kasutaja loomine\"\n      mysql_user:\n        name: \"{{ app_user }}\"\n        password: \"{{ app_password }}\"\n        priv: \"{{ app_database }}.*:ALL\"\n        login_user: root\n        login_password: \"{{ mysql_root_password }}\"\n        state: present\n\n  handlers:\n    - name: enable apache\n      service:\n        name: apache2\n        enabled: yes\n        state: started\n\n    - name: restart apache\n      service:\n        name: apache2\n        state: restarted\n\n    - name: start mysql\n      service:\n        name: mysql\n        state: started\n        enabled: yes\n\n    - name: secure mysql\n      mysql_user:\n        name: \"\"\n        host_all: yes\n        state: absent\n        login_user: root\n        login_password: \"{{ mysql_root_password }}\"\n\n  post_tasks:\n    - name: \"Teenuste oleku kontroll\"\n      service_facts:\n\n    - name: \"Kinnitada Apache'i t\u00f6\u00f6tamine\"\n      uri:\n        url: \"http://{{ ansible_default_ipv4.address }}\"\n        method: GET\n        status_code: 200\n</code></pre>"},{"location":"ansible_basics/lecture/#playbooki-kaivitamine-ja-debugimine","title":"Playbook'i k\u00e4ivitamine ja debugimine","text":""},{"location":"ansible_basics/lecture/#pohilised-kaivitamise-voimalused","title":"P\u00f5hilised k\u00e4ivitamise v\u00f5imalused","text":"<pre><code># Tavap\u00e4rane k\u00e4ivitamine\nansible-playbook site.yml\n\n# Inventory m\u00e4\u00e4ramine\nansible-playbook -i inventory/production site.yml\n\n# Muutujate edastamine\nansible-playbook -e \"app_version=2.1.0\" site.yml\n\n# Kuiv k\u00e4ivitamine\nansible-playbook --check site.yml\n\n# Muudatuste kuvamine\nansible-playbook --check --diff site.yml\n</code></pre>"},{"location":"ansible_basics/lecture/#selektiivne-kaivitamine","title":"Selektiivne k\u00e4ivitamine","text":"<pre><code># Ainult konkreetsed hostid\nansible-playbook --limit webservers site.yml\n\n# Konkreetse task'iga alustamine\nansible-playbook --start-at-task \"MySQL installimine\" site.yml\n\n# Tagide kasutamine\nansible-playbook --tags \"database\" site.yml\n\n# Tagide v\u00e4listamine\nansible-playbook --skip-tags \"testing\" site.yml\n</code></pre>"},{"location":"ansible_basics/lecture/#debugimine-ja-verbose-valjund","title":"Debugimine ja verbose v\u00e4ljund","text":"<pre><code># P\u00f5hiline verbose\nansible-playbook -v site.yml\n\n# Detailsem v\u00e4ljund\nansible-playbook -vv site.yml\n\n# Connection debugging\nansible-playbook -vvv site.yml\n\n# SSH debugging\nansible-playbook -vvvv site.yml\n</code></pre>"},{"location":"ansible_basics/lecture/#best-practices","title":"Best practices","text":""},{"location":"ansible_basics/lecture/#playbooki-struktuur","title":"Playbook'i struktuur","text":"<pre><code>---\n# Dokumentatsioon playbook'i alguses\n# Autor: IT meeskond\n# Eesm\u00e4rk: Veebiserveri t\u00e4ielik seadistamine\n# Versioon: 1.2.0\n\n- name: \"Selge ja kirjeldav play nimi\"\n  hosts: webservers\n  become: yes\n  gather_facts: yes\n\n  vars:\n    # Muutujate gruppeerimine ja kommentaarid\n    # Rakenduse konfiguratsioon\n    app_name: \"webstore\"\n    app_version: \"2.1.0\"\n\n    # Andmebaasi seadistused  \n    db_name: \"{{ app_name }}_production\"\n    db_user: \"{{ app_name }}_user\"\n\n  pre_tasks:\n    - name: \"Eeltingimuste kontroll\"\n      assert:\n        that:\n          - app_name is defined\n          - app_version is defined\n        fail_msg: \"N\u00f5utavad muutujad ei ole m\u00e4\u00e4ratud\"\n\n  tasks:\n    - name: \"Konkreetne ja arusaadav task'i nimi\"\n      module_name:\n        parameter: value\n      tags: [installation, webserver]\n      when: ansible_os_family == \"Debian\"\n\n  post_tasks:\n    - name: \"L\u00f5pukontrollid ja validateerimised\"\n      uri:\n        url: \"http://localhost\"\n        status_code: 200\n</code></pre>"},{"location":"ansible_basics/lecture/#vigade-kasitlemise-strateegiad","title":"Vigade k\u00e4sitlemise strateegiad","text":"<pre><code>tasks:\n  - name: \"Kriitilise teenuse k\u00e4ivitamine\"\n    service:\n      name: critical-service\n      state: started\n    register: service_result\n    failed_when: service_result.rc != 0\n\n  - name: \"Mittekriitilise operatsiooni katse\"\n    command: /opt/scripts/optional-task.sh\n    ignore_errors: yes\n\n  - name: \"Retry loogikaga operatsioon\"\n    uri:\n      url: \"http://api.external.com/status\"\n      method: GET\n    retries: 3\n    delay: 10\n    until: result.status == 200\n</code></pre>"},{"location":"ansible_basics/lecture/#kokkuvote_3","title":"Kokkuv\u00f5te","text":"<p>YAML s\u00fcntaks ja playbook'ide struktuur moodustavad Ansible automatiseerimise aluse. Korrektselt struktureeritud playbook'id on loetavad, hallatavad ja usaldusv\u00e4\u00e4rsed. J\u00e4rgmises peat\u00fckis k\u00e4sitletakse advanced Ansible funktsionaalsusi nagu roles, templates ja error handling.</p>"},{"location":"ansible_basics/reading_materials/","title":"\ud83d\udcda Week 11: Ansible Reading Materials (Homework Task 2)","text":"<p>Estimated Reading Time: 2-3 hours Due: Before next class session</p>"},{"location":"ansible_basics/reading_materials/#required-reading-15-hours","title":"\ud83d\udcd6 Required Reading (1.5 hours)","text":""},{"location":"ansible_basics/reading_materials/#1-ansible-architecture-deep-dive-45-min","title":"1. Ansible Architecture Deep Dive (45 min)","text":"<p>Source: Ansible Documentation &amp; Architecture Guide</p> <p>Key Topics: - Agentless architecture and its advantages - Control node vs managed nodes - SSH-based communication - Ansible's execution model - Inventory management concepts</p> <p>Reading Questions: - Why does Ansible use an agentless architecture? - What are the advantages and disadvantages of agentless vs agent-based systems? - How does Ansible handle authentication and authorization? - What happens during an Ansible playbook execution?</p>"},{"location":"ansible_basics/reading_materials/#2-yaml-syntax-and-best-practices-30-min","title":"2. YAML Syntax and Best Practices (30 min)","text":"<p>Source: YAML Documentation &amp; Ansible Style Guide</p> <p>Key Topics: - YAML data types and structures - Indentation and formatting rules - Ansible-specific YAML conventions - Common YAML pitfalls and how to avoid them - YAML validation tools</p> <p>Reading Questions: - What are the key differences between YAML and JSON? - Why is indentation so important in YAML? - What are some common YAML syntax errors? - How can you validate YAML syntax?</p>"},{"location":"ansible_basics/reading_materials/#3-ansible-module-ecosystem-30-min","title":"3. Ansible Module Ecosystem (30 min)","text":"<p>Source: Ansible Module Documentation</p> <p>Key Topics: - Core modules vs community modules - Module categories (system, network, cloud, etc.) - Module parameters and return values - Idempotency in Ansible modules - Custom module development basics</p> <p>Reading Questions: - What makes a module \"idempotent\"? - How do you find the right module for a task? - What's the difference between core and community modules? - When might you need to create a custom module?</p>"},{"location":"ansible_basics/reading_materials/#optional-reading-1-hour","title":"\ud83d\udcda Optional Reading (1 hour)","text":""},{"location":"ansible_basics/reading_materials/#4-ansible-best-practices-30-min","title":"4. Ansible Best Practices (30 min)","text":"<p>Source: Ansible Best Practices Guide</p> <p>Key Topics: - Playbook organization and structure - Variable naming conventions - Error handling strategies - Performance optimization techniques - Security considerations</p>"},{"location":"ansible_basics/reading_materials/#5-ansible-vs-other-configuration-management-tools-30-min","title":"5. Ansible vs Other Configuration Management Tools (30 min)","text":"<p>Source: Industry Comparisons &amp; Documentation</p> <p>Key Topics: - Ansible vs Puppet vs Chef vs Salt - Use cases for each tool - Learning curve comparisons - Community and ecosystem differences - When to choose Ansible over alternatives</p>"},{"location":"ansible_basics/reading_materials/#reference-materials-keep-handy","title":"\ud83d\udccb Reference Materials (Keep Handy)","text":""},{"location":"ansible_basics/reading_materials/#ansible-command-quick-reference","title":"Ansible Command Quick Reference","text":"<pre><code># Basic commands\nansible --version              # Check Ansible version\nansible all -m ping            # Test connectivity to all hosts\nansible all -m setup           # Gather facts from all hosts\nansible-playbook playbook.yml  # Run a playbook\n\n# Inventory management\nansible-inventory --list       # Show inventory structure\nansible-inventory --graph      # Show inventory as graph\n\n# Ad-hoc commands\nansible webservers -m copy -a \"src=/local/file dest=/remote/file\"\nansible dbservers -m service -a \"name=mysql state=started\"\nansible all -m shell -a \"uptime\"\n</code></pre>"},{"location":"ansible_basics/reading_materials/#common-yaml-patterns-in-ansible","title":"Common YAML Patterns in Ansible","text":"<pre><code># Basic playbook structure\n---\n- name: Example playbook\n  hosts: webservers\n  become: yes\n  vars:\n    app_name: myapp\n    app_port: 8080\n\n  tasks:\n    - name: Install packages\n      apt:\n        name: \"{{ item }}\"\n        state: present\n      loop:\n        - nginx\n        - python3\n        - git\n\n    - name: Start service\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre>"},{"location":"ansible_basics/reading_materials/#ansible-facts-and-variables","title":"Ansible Facts and Variables","text":"<pre><code># Using facts\n- name: Display system info\n  debug:\n    msg: \"{{ ansible_distribution }} {{ ansible_distribution_version }}\"\n\n# Custom variables\n- name: Set custom variable\n  set_fact:\n    app_path: \"/opt/{{ app_name }}\"\n\n# Variable precedence\n# 1. extra vars (command line)\n# 2. task vars\n# 3. block vars\n# 4. role and include vars\n# 5. play vars\n# 6. host facts\n# 7. host vars\n# 8. group vars\n# 9. inventory vars\n# 10. role defaults\n</code></pre>"},{"location":"ansible_basics/reading_materials/#reading-reflection-assignment","title":"\ud83c\udfaf Reading Reflection Assignment","text":"<p>After completing the reading, please submit a brief reflection (200-300 words) covering:</p> <ol> <li>Key Insights: What was the most surprising or important thing you learned about Ansible?</li> <li>Questions: What Ansible concepts are still unclear or need more explanation?</li> <li>Application: How do you think Ansible's agentless architecture will benefit your automation work?</li> <li>Further Learning: What Ansible topics would you like to explore more?</li> </ol> <p>Submission Format: Add to your GitHub repository as <code>ansible_basics_reading_reflection.md</code></p>"},{"location":"ansible_basics/reading_materials/#additional-resources","title":"\ud83d\udd17 Additional Resources","text":"<ul> <li>Ansible Documentation</li> <li>Ansible Best Practices</li> <li>Ansible Module Index</li> <li>YAML Documentation</li> <li>Ansible Galaxy</li> </ul>"},{"location":"ansible_basics/reading_materials/#notes-for-next-class","title":"\ud83d\udcdd Notes for Next Class","text":"<p>Come prepared with: - Questions from your reading - Any Ansible scenarios you'd like to practice - Ideas for your Ansible automation project - Understanding of YAML syntax and structure</p>"},{"location":"ansible_roles/homework/","title":"\ud83d\udcdd Ansible Roles Homework: Ehita sama infrastruktuur nii Ansible kui Puppet'iga","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Deploy sama infrastruktuuri m\u00f5lema t\u00f6\u00f6riistaga ja v\u00f5rdle praktikas Aeg: 2-3 tundi praktilist ehitamist</p> <p>Te saate valmis starter kood - fookus on deployment'il ja praktilisel v\u00f5rdlusel!</p>"},{"location":"ansible_roles/homework/#projekt-veebserveri-andmebaasi-seadistamine","title":"\ud83c\udfaf Projekt: Veebserveri + Andmebaasi seadistamine","text":"<p>Mida te ehitate: - \ud83c\udf10 Nginx veebiserver kohandatud konfiguratsiooniga - \ud83d\uddc4\ufe0f PostgreSQL andmebaas algse skeemiga - \ud83d\udd10 SSL sertifikaadid (ise-allkirjastatud testimiseks) - \ud83d\udcca S\u00fcsteemi monitooring p\u00f5hiliste tervise kontrollidega - \ud83d\udd27 Logide p\u00f6\u00f6ramise konfiguratsioon</p> <p>Mida te \u00f5pite: - Ansible vs Puppet praktilised erinevused - Konfiguratsioonihalduse t\u00f6\u00f6vood - Infrastruktuuri deployment strateegiad - T\u00f6\u00f6riistaspetsiifilised debug ja probleemilahendus</p>"},{"location":"ansible_roles/homework/#ansible-vs-puppet-miks-vordleme","title":"\ud83d\udd0d Ansible vs Puppet - Miks v\u00f5rdleme?","text":"<p>Miks on oluline m\u00f5ista erinevaid t\u00f6\u00f6riistu?</p>"},{"location":"ansible_roles/homework/#ansible-push-based-lahenemine","title":"Ansible - Push-based l\u00e4henemine","text":"<ul> <li>Kuidas t\u00f6\u00f6tab: Kontrollserver saadab k\u00e4sud sihtmasinatele</li> <li>Eelised: Lihtne alustada, YAML s\u00fcntaks, agentless</li> <li>Puudused: Vajab SSH \u00fchendust, v\u00e4hem keerukaid funktsioone</li> <li>Kus kasutada: V\u00e4iksemad meeskonnad, lihtsad automatiseerimised</li> </ul>"},{"location":"ansible_roles/homework/#puppet-pull-based-lahenemine","title":"Puppet - Pull-based l\u00e4henemine","text":"<ul> <li>Kuidas t\u00f6\u00f6tab: Sihtmasinad ise k\u00fcsivad konfiguratsiooni serverilt</li> <li>Eelised: V\u00f5imas, keerukad funktsioonid, agent-based</li> <li>Puudused: Keerulisem seadistada, Ruby s\u00fcntaks</li> <li>Kus kasutada: Suured ettev\u00f5tted, keerukad infrastruktuurid</li> </ul> <p>Miks praktiline v\u00f5rdlus on oluline? - N\u00e4ete erinevusi k\u00e4itumises - M\u00f5istate, millal mida kasutada - \u00d5pite debug'ima m\u00f5lemat t\u00f6\u00f6riista - Saate praktilise kogemuse</p>"},{"location":"ansible_roles/homework/#samm-1-repository-seadistamine-15-min","title":"\ud83d\udcc1 Samm 1: Repository seadistamine (15 min)","text":""},{"location":"ansible_roles/homework/#11-klooni-starter-repository","title":"1.1 Klooni starter repository","text":"<pre><code># Klooni kodut\u00f6\u00f6 starter valmis failidega\ngit clone https://github.com/[teacher-repo]/ansible-puppet-comparison.git\ncd ansible-puppet-comparison\n\n# Loo oma t\u00f6\u00f6 branch\ngit checkout -b homework-[your-name]\n\n# Kontrolli starter struktuuri\nls -la\n# Peaksite n\u00e4gema: ansible/, puppet/, docs/, README.md\n</code></pre>"},{"location":"ansible_roles/homework/#12-kontrolli-starter-faile","title":"1.2 Kontrolli starter faile","text":"<p>Repository sisaldab: - <code>ansible/</code> - Ansible playbook'i baas (vajab SSL ja virtual hosts lisamist) - <code>puppet/</code> - Puppet manifest'i baas (vajab SSL ja monitoring lisamist) - <code>vagrant/</code> - Test VM'ide konfiguratsioon (valmis kasutamiseks) - <code>requirements.md</code> - Mis te peate lisama</p>"},{"location":"ansible_roles/homework/#13-tutvu-starter-koodiga","title":"1.3 Tutvu starter koodiga","text":"<p>Ansible struktuur: <pre><code>cd ansible/\nls -la\n# Peaksite n\u00e4gema:\n# - inventory/ (sihtmashinad)\n# - roles/ (nginx, postgresql)\n# - site.yml (peamine playbook)\n# - requirements.md (mis vaja lisada)\n</code></pre></p> <p>Puppet struktuur: <pre><code>cd ../puppet/\nls -la\n# Peaksite n\u00e4gema:\n# - manifests/ (Puppet kood)\n# - modules/ (nginx, postgresql)\n# - hiera/ (andmed)\n# - requirements.md (mis vaja lisada)\n</code></pre></p> <p>Miks see struktuur on oluline? - Ansible: Playbook \u2192 Roles \u2192 Tasks - Puppet: Manifests \u2192 Classes \u2192 Resources - M\u00f5lemad j\u00e4rgivad modulaarset l\u00e4henemist - Kood on organiseeritud ja taaskasutatav</p>"},{"location":"ansible_roles/homework/#samm-2-ehita-ansible-deployment-60-min","title":"\ud83d\udd27 Samm 2: Ehita Ansible deployment (60 min)","text":""},{"location":"ansible_roles/homework/#21-kaivita-test-keskkond","title":"2.1 K\u00e4ivita test keskkond","text":"<pre><code># K\u00e4ivita VM testimiseks\ncd ../vagrant/\nvagrant up ansible-vm\n\n# \u00dchenda VM'iga\nvagrant ssh ansible-vm\n</code></pre> <p>Miks kasutame Vagrant'i? - Isolatsioon: Ei m\u00f5juta teie p\u00f5his\u00fcsteemi - Korratavus: Iga\u00fcks saab sama keskkonna - Kiire: V\u00f5imaldab kiiresti testida ja kustutada - Turvaline: V\u00f5ite eksperimenteerida vabalt</p>"},{"location":"ansible_roles/homework/#22-lisa-ssl-konfiguratsioon","title":"2.2 Lisa SSL konfiguratsioon","text":"<p>Starters on ainult basic nginx + postgresql. Peate lisama:</p> <pre><code>cd ../ansible/\n\n# 1. Lisa SSL task'id (roles/nginx/tasks/ssl.yml)\n# 2. Kohandada nginx template'i SSL jaoks  \n# 3. Lisada virtual hosts konfiguratsioon\n\n# Vaata requirements.md faili, mis t\u00e4pselt vaja\ncat requirements.md\n</code></pre> <p>Mida peate lisama SSL jaoks:</p> <p>1. SSL sertifikaatide genereerimine: <pre><code># roles/nginx/tasks/ssl.yml\n- name: \"Create SSL directory\"\n  file:\n    path: /etc/nginx/ssl\n    state: directory\n    mode: '0755'\n\n- name: \"Generate self-signed SSL certificate\"\n  command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt -subj \"/C=EE/ST=Tallinn/L=Tallinn/O=Test/CN=localhost\"\n  args:\n    creates: /etc/nginx/ssl/nginx.crt\n</code></pre></p> <p>2. Nginx SSL konfiguratsioon: <pre><code># roles/nginx/templates/nginx.conf.j2\nserver {\n    listen 80;\n    server_name localhost;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name localhost;\n\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n    location / {\n        root /var/www/html;\n        index index.html;\n    }\n}\n</code></pre></p> <p>Miks SSL on oluline? - Turvalisus: Kr\u00fcptitud \u00fchendused - Praktika: Enamik p\u00e4ris rakendusi kasutab HTTPS - \u00d5ppimine: SSL konfiguratsioon on oluline oskus - Testimine: N\u00e4ete, kuidas t\u00f6\u00f6tab turvaline \u00fchendus</p>"},{"location":"ansible_roles/homework/#23-lisa-virtual-hosts","title":"2.3 Lisa virtual hosts","text":"<p>Virtual hosts v\u00f5imaldavad \u00fchel serveril mitut veebisaiti:</p> <pre><code># roles/nginx/tasks/vhosts.yml\n- name: \"Create virtual host directories\"\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    mode: '0755'\n  loop:\n    - /var/www/site1\n    - /var/www/site2\n\n- name: \"Create virtual host content\"\n  copy:\n    content: |\n      &lt;h1&gt;Site 1&lt;/h1&gt;\n      &lt;p&gt;This is site 1 content&lt;/p&gt;\n    dest: /var/www/site1/index.html\n    mode: '0644'\n</code></pre> <p>Miks virtual hosts on olulised? - Ressursi s\u00e4\u00e4stmine: \u00dcks server, mitut rakendust - Organiseerimine: Eraldi kontekstid erinevatele projektidele - Praktika: Paljud ettev\u00f5tted kasutavad virtual hoste - Skaleerimine: V\u00f5imaldab kasvada ilma uute serverite lisamata</p>"},{"location":"ansible_roles/homework/#24-kaivita-ja-testi","title":"2.4 K\u00e4ivita ja testi","text":"<pre><code># Proovi oma laiendatud versiooni\nansible-playbook -i inventory/local site.yml --ask-become-pass\n\n# Kontrolli teenuseid\nsudo systemctl status nginx postgresql\ncurl -k https://localhost  # SSL peaks t\u00f6\u00f6tama!\n\n# Testi virtual hoste\ncurl -k https://localhost/site1\ncurl -k https://localhost/site2\n</code></pre> <p>Miks testimine on oluline? - Veakontroll: Veenduge, et k\u00f5ik t\u00f6\u00f6tab - Dokumentatsioon: N\u00e4ete, mis t\u00f6\u00f6tab ja mis mitte - \u00d5ppimine: Testimine on oluline oskus - Usaldus: Saate usaldada oma automatiseerimist</p>"},{"location":"ansible_roles/homework/#25-commit-oma-too","title":"2.5 Commit oma t\u00f6\u00f6","text":"<pre><code># Kui k\u00f5ik t\u00f6\u00f6tab\ngit add .\ngit commit -m \"Lisasin SSL ja virtual hosts Ansible'ile - t\u00f6\u00f6tab\"\n</code></pre>"},{"location":"ansible_roles/homework/#samm-3-ehita-puppet-deployment-60-min","title":"\ud83d\udc15 Samm 3: Ehita Puppet deployment (60 min)","text":""},{"location":"ansible_roles/homework/#31-lulitu-puppet-vmile","title":"3.1 L\u00fclitu Puppet VM'ile","text":"<pre><code># H\u00e4vita eelmine VM ja k\u00e4ivita puppet VM\nvagrant destroy ansible-vm\nvagrant up puppet-vm\nvagrant ssh puppet-vm\n</code></pre> <p>Miks eraldi VM? - Puhas keskkond: Ei m\u00f5juta eelmist t\u00f6\u00f6d - V\u00f5rdlus: Saate v\u00f5rrelda m\u00f5lemat l\u00e4henemist - Praktika: Reaalses elus kasutate erinevaid masinaid - Debug: Lihtsam lahendada probleeme</p>"},{"location":"ansible_roles/homework/#32-lisa-samad-asjad-puppetiga","title":"3.2 Lisa samad asjad Puppet'iga","text":"<p>Puppet kood on veel poolik - pead lisama:</p> <pre><code>cd ../puppet/\n\n# 1. SSL sertifikaatide genereerimine\n# 2. Nginx SSL konfiguratsioon\n# 3. Virtual hosts setup\n# 4. PostgreSQL initial schema\n\n# Vaata requirements.md - mis pead t\u00e4pselt tegema\ncat ../requirements.md\n</code></pre> <p>Puppet SSL konfiguratsioon:</p> <p>1. SSL sertifikaatide genereerimine: <pre><code># modules/nginx/manifests/ssl.pp\nclass nginx::ssl {\n  file { '/etc/nginx/ssl':\n    ensure =&gt; 'directory',\n    mode   =&gt; '0755',\n  }\n\n  exec { 'generate-ssl-cert':\n    command =&gt; 'openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt -subj \"/C=EE/ST=Tallinn/L=Tallinn/O=Test/CN=localhost\"',\n    creates =&gt; '/etc/nginx/ssl/nginx.crt',\n    path    =&gt; '/usr/bin',\n    require =&gt; File['/etc/nginx/ssl'],\n  }\n}\n</code></pre></p> <p>2. Nginx SSL konfiguratsioon: <pre><code># modules/nginx/templates/nginx.conf.erb\nserver {\n    listen 80;\n    server_name localhost;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name localhost;\n\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n    location / {\n        root /var/www/html;\n        index index.html;\n    }\n}\n</code></pre></p> <p>Miks Puppet s\u00fcntaks on erinev? - Ruby p\u00f5hine: Puppet kasutab Ruby s\u00fcntaksit - Deklaratiivne: Kirjeldate, mis peab olema, mitte kuidas - Idempotent: Puppet kontrollib olekut ja teeb ainult vajalikud muudatused - V\u00f5imas: Rohkem keerukaid funktsioone kui Ansible</p>"},{"location":"ansible_roles/homework/#33-lisa-monitoring","title":"3.3 Lisa monitoring","text":"<p>Monitoring v\u00f5imaldab kontrollida teenuste t\u00f6\u00f6d:</p> <pre><code># modules/monitoring/manifests/health.pp\nclass monitoring::health {\n  file { '/usr/local/bin/health-check.sh':\n    content =&gt; '#!/bin/bash\n      if systemctl is-active --quiet nginx; then\n        echo \"Nginx is running\"\n        exit 0\n      else\n        echo \"Nginx is not running\"\n        exit 1\n      fi',\n    mode    =&gt; '0755',\n  }\n\n  cron { 'health-check':\n    command =&gt; '/usr/local/bin/health-check.sh &gt;&gt; /var/log/health.log 2&gt;&amp;1',\n    minute  =&gt; '*/5',\n  }\n}\n</code></pre> <p>Miks monitoring on oluline? - Probleemide avastamine: Varane hoiatamine - T\u00f6\u00f6kindlus: Veenduge, et teenused t\u00f6\u00f6tavad - Praktika: K\u00f5ik p\u00e4ris s\u00fcsteemid vajavad monitooringut - Debug: Aitab leida probleeme</p>"},{"location":"ansible_roles/homework/#34-rakenda-oma-puppet-kood","title":"3.4 Rakenda oma Puppet kood","text":"<pre><code># Proovi oma versiooni\nsudo puppet apply --modulepath=modules manifests/site.pp\n\n# Kontrolli, et sama tulemus mis Ansible'iga\nsudo systemctl status nginx postgresql\ncurl -k https://localhost  # SSL peaks t\u00f6\u00f6tama!\n\n# Testi monitoring\nsudo /usr/local/bin/health-check.sh\n</code></pre>"},{"location":"ansible_roles/homework/#35-commit-puppet-too","title":"3.5 Commit Puppet t\u00f6\u00f6","text":"<pre><code># Kui sama tulemus mis Ansible'iga\ngit add .\ngit commit -m \"Lisasin samad asjad Puppet'iga - sama tulemus\"\n</code></pre>"},{"location":"ansible_roles/homework/#samm-4-vordle-ja-analuusi-30-min","title":"\ud83d\udd0d Samm 4: V\u00f5rdle ja anal\u00fc\u00fcsi (30 min)","text":""},{"location":"ansible_roles/homework/#41-motle-labi-mis-oli-erinev","title":"4.1 M\u00f5tle l\u00e4bi, mis oli erinev","text":"<p>P\u00e4rast m\u00f5lema t\u00f6\u00f6riista kasutamist:</p> <pre><code># Lihtsalt testi m\u00f5lemad veel kord\ncurl -k https://localhost  # Kas m\u00f5lemad t\u00f6\u00f6tavad?\n\n# Commit kogu oma t\u00f6\u00f6\ngit add .\ngit commit -m \"M\u00f5lemad deploymentid t\u00f6\u00f6tavad - Ansible ja Puppet\"\ngit push origin homework-[your-name]\n</code></pre>"},{"location":"ansible_roles/homework/#42-luhike-vordlus","title":"4.2 L\u00fchike v\u00f5rdlus","text":"<p>Kirjuta 2-3 lauset oma kogemusest:</p> <ul> <li>Mida m\u00e4rkasid Ansible ja Puppet vahel?</li> <li>Mis oli lihtsam/keerulisem?</li> <li>Mida eelistaksid ja miks?</li> </ul>"},{"location":"ansible_roles/homework/#samm-5-lopeta-ja-esita-15-min","title":"\ud83d\udccb Samm 5: L\u00f5peta ja esita (15 min)","text":""},{"location":"ansible_roles/homework/#51-kirjuta-pohjalik-readmemd","title":"5.1 Kirjuta p\u00f5hjalik README.md","text":"<pre><code># N\u00e4dal 15 Kodut\u00f6\u00f6 - Ehitasin sama asja Ansible ja Puppet'iga\n\n## Mida ehitasin\n- Laiensid basic nginx + postgresql starter koodi\n- Lisasin SSL sertifikaadid ja HTTPS konfiguratsioon\n- Lisasin virtual hosts funktsionaalsuse\n- Lisasin p\u00f5hilise monitooringu\n- Tegin seda nii Ansible kui Puppet'iga\n\n## Praktiline v\u00f5rdlus\n\n### Ansible kogemus\n- **Seadistamine:** Lihtne ja kiire\n- **S\u00fcntaks:** YAML oli selge ja loetav\n- **Debug:** Hea veateadete kvaliteet\n- **Dokumentatsioon:** Palju n\u00e4iteid ja \u00f5petusi\n\n### Puppet kogemus\n- **Seadistamine:** Keerulisem, aga v\u00f5imas\n- **S\u00fcntaks:** Ruby vajab harjumist\n- **Debug:** Rohkem keeruline, aga detailne\n- **Dokumentatsioon:** Hea, aga v\u00e4hem algajas\u00f5bralik\n\n## Eelistus ja p\u00f5hjendus\nMa eelistaks **[Ansible/Puppet]** sest [2-3 lauset p\u00f5hjendust].\n\n## \u00d5pitud oskused\n- SSL sertifikaatide konfigureerimine\n- Virtual hosts seadistamine\n- Monitooringu lisamine\n- T\u00f6\u00f6riistade v\u00f5rdlemine praktikas\n- Debug ja probleemilahendus\n\n---\nTehtud [kuup\u00e4ev] - m\u00f5lemad deploymentid t\u00f6\u00f6tavad!\n</code></pre>"},{"location":"ansible_roles/homework/#52-loplik-push-ja-esitamine","title":"5.2 L\u00f5plik push ja esitamine","text":"<pre><code># L\u00f5plik commit\ngit add .\ngit commit -m \"L\u00f5petasin kodut\u00f6\u00f6 - m\u00f5lemad deploymentid t\u00f6\u00f6tavad\"\n\n# Push GitHub'i\ngit push origin homework-[your-name]\n\n# Kontrolli, et k\u00f5ik on GitHub'is\necho \"Kontrolli: https://github.com/[your-username]/ansible-puppet-comparison\"\n</code></pre>"},{"location":"ansible_roles/homework/#napunaited","title":"\ud83d\udca1 N\u00e4pun\u00e4ited","text":""},{"location":"ansible_roles/homework/#ansible-napunaited","title":"Ansible n\u00e4pun\u00e4ited","text":"<ul> <li>Alusta lihtsalt: \u00c4ra proovi k\u00f5ike korraga</li> <li>Kasuta YAML validatorit: V\u00e4lti s\u00fcntaksi vigu</li> <li>Testi playbook'i: Kasuta <code>--check</code> re\u017eiimi</li> <li>Dokumenteeri muudatused: Selge commit s\u00f5numid</li> </ul>"},{"location":"ansible_roles/homework/#puppet-napunaited","title":"Puppet n\u00e4pun\u00e4ited","text":"<ul> <li>\u00d5pi Ruby p\u00f5hit\u00f5desid: Aitab s\u00fcntaksit m\u00f5ista</li> <li>Kasuta puppet-lint: Kontrolli koodi kvaliteeti</li> <li>Testi modulit: Kasuta <code>puppet apply --noop</code></li> <li>Dokumenteeri klassi: Selge kommentaarid</li> </ul>"},{"location":"ansible_roles/homework/#uldised-napunaited","title":"\u00dcldised n\u00e4pun\u00e4ited","text":"<ul> <li>V\u00f5rdle objektiivselt: \u00c4ra eelista \u00fcht v\u00f5i teist</li> <li>M\u00f5tle praktiliselt: Millal mida kasutada</li> <li>Dokumenteeri kogemused: Aitab hiljem meeles pidada</li> <li>K\u00fcsi abi: Kui midagi ei t\u00f6\u00f6ta, k\u00fcsi \u00f5petajalt</li> </ul>"},{"location":"ansible_roles/homework/#kkk","title":"\u2753 KKK","text":"<p>Q: Kas pean m\u00f5lemad deploymentid tegema? A: Jah, see on kodut\u00f6\u00f6 eesm\u00e4rk - v\u00f5rrelda m\u00f5lemat l\u00e4henemist.</p> <p>Q: Mis teha, kui \u00fcks ei t\u00f6\u00f6ta? A: Proovi debug'ida ja k\u00fcsi abi. Kui \u00fcks t\u00f6\u00f6tab, saad selle esitada.</p> <p>Q: Kas pean kirjutama pika v\u00f5rdluse? A: Ei, piisab l\u00fchikest, aga p\u00f5hjalikust anal\u00fc\u00fcsist.</p> <p>Q: Millal on t\u00e4htaeg? A: J\u00e4rgmise n\u00e4dala alguseks. Hilinemine = punktide kaotus.</p>"},{"location":"ansible_roles/homework/#onnitlused","title":"\ud83c\udf89 \u00d5nnitlused!","text":"<p>Kui j\u00f5uate siia, olete: - Ehitanud sama infrastruktuuri kahe erineva t\u00f6\u00f6riistaga - M\u00f5istnud praktilisi erinevusi - \u00d5ppinud debug'ima m\u00f5lemat t\u00f6\u00f6riista - Teinud informeeritud valiku</p> <p>Head konfiguratsioonihaldust! \ud83d\ude80</p> <p>Kodut\u00f6\u00f6 koostatud ITS-24 DevOps automatiseerimise kursuse jaoks K\u00fcsimuste korral: [\u00f5petaja kontakt]</p>"},{"location":"ansible_roles/lab/","title":"Ansible Roles Lab: Custom Nginx Role Creation","text":""},{"location":"ansible_roles/lab/#eesmark-professionaalse-ansible-rolei-loomine-2h","title":"Eesm\u00e4rk: Professionaalse Ansible role'i loomine (2h)","text":"<p>T\u00e4na loome oma esimese professionaalse Ansible role'i!</p>"},{"location":"ansible_roles/lab/#samm-1-labi-eesmargid","title":"\ud83c\udfaf Samm 1: Lab'i eesm\u00e4rgid","text":"<ul> <li>Nginx role Galaxy standardites</li> <li>Multi-OS tugi (Ubuntu/Debian)</li> <li>SSL sertifikaadid automaatselt</li> <li>Virtual hosts konfiguratsioon</li> </ul>"},{"location":"ansible_roles/lab/#lab-1-role-struktuuri-loomine-30-min","title":"\ud83d\ude80 Lab 1: Role struktuuri loomine (30 min)","text":""},{"location":"ansible_roles/lab/#tookeskkonna-ettevalmistamine","title":"T\u00f6\u00f6keskkonna ettevalmistamine","text":"<pre><code># Kontrollige Ansible\nansible --version\n\n# Looge t\u00f6\u00f6kausta  \nmkdir ~/ansible-roles-lab\ncd ~/ansible-roles-lab\nmkdir roles\ncd roles\n</code></pre>"},{"location":"ansible_roles/lab/#rolei-genereerimine","title":"Role'i genereerimine","text":"<pre><code># Galaxy tool genereerib struktuuri\nansible-galaxy init nginx-webserver\n\n# Kontrollige\ntree nginx-webserver/\n</code></pre> <p>Peaks n\u00e4itama: <pre><code>nginx-webserver/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 defaults/main.yml\n\u251c\u2500\u2500 handlers/main.yml  \n\u251c\u2500\u2500 meta/main.yml\n\u251c\u2500\u2500 tasks/main.yml\n\u251c\u2500\u2500 templates/\n\u251c\u2500\u2500 vars/main.yml\n\u2514\u2500\u2500 tests/\n</code></pre></p>"},{"location":"ansible_roles/lab/#metadata-seadistamine","title":"Metadata seadistamine","text":"<p>Muutke <code>meta/main.yml</code>: <pre><code>---\ngalaxy_info:\n  author: \"ITS-24 Student\"\n  description: \"Professional Nginx with SSL and virtual hosts\"\n  company: \"ITS-24 DevOps Course\"\n  license: \"MIT\"\n  min_ansible_version: \"2.9\"\n\n  platforms:\n    - name: Ubuntu\n      versions: [focal, jammy]\n    - name: Debian  \n      versions: [buster, bullseye]\n\n  galaxy_tags:\n    - web\n    - nginx\n    - ssl\n    - webserver\n\ndependencies: []\n</code></pre></p>"},{"location":"ansible_roles/lab/#samm-1-variables-ja-defaults-25-min","title":"\ud83d\udd27 Samm 1: Variables ja defaults (25 min)","text":""},{"location":"ansible_roles/lab/#vaikimisi-seaded-algajasobralik","title":"Vaikimisi seaded - algajas\u00f5bralik","text":"<p>Muutke <code>defaults/main.yml</code>: <pre><code>---\n# Basic settings (t\u00f6\u00f6tab kohe!)\nnginx_user: \"www-data\"\nnginx_worker_processes: \"{{ ansible_processor_vcpus | default(2) }}\"\nnginx_worker_connections: 1024\n\n# Ports\nnginx_http_port: 80\nnginx_https_port: 443\n\n# SSL (vaikimisi v\u00e4lja l\u00fclitatud)\nnginx_ssl_enabled: false\nnginx_ssl_cert_path: \"/etc/ssl/certs/nginx.crt\"\nnginx_ssl_key_path: \"/etc/ssl/private/nginx.key\"\n\n# Virtual hosts (t\u00fchi list = default site)\nnginx_vhosts: []\n\n# Security\nnginx_remove_default_vhost: true\nnginx_server_tokens: \"off\"\nnginx_gzip_enabled: true\n</code></pre></p>"},{"location":"ansible_roles/lab/#role-sisemised-muutujad","title":"Role sisemised muutujad","text":"<p>Muutke <code>vars/main.yml</code>: <pre><code>---\n# OS-specific packages\n_nginx_packages:\n  Debian: [nginx, ssl-cert, curl]\n  Ubuntu: [nginx, ssl-cert, curl]\n\nnginx_packages: \"{{ _nginx_packages[ansible_os_family] | default(_nginx_packages['Debian']) }}\"\n\n# System paths\nnginx_config_path: \"/etc/nginx\"\nnginx_sites_available: \"{{ nginx_config_path }}/sites-available\"\nnginx_sites_enabled: \"{{ nginx_config_path }}/sites-enabled\"\nnginx_log_path: \"/var/log/nginx\"\n\n# Service\nnginx_service_name: \"nginx\"\n</code></pre></p>"},{"location":"ansible_roles/lab/#lab-3-tasks-loomine-20-min","title":"\ud83d\udcdd Lab 3: Tasks loomine (20 min)","text":""},{"location":"ansible_roles/lab/#peamine-tasks-fail-sisukord","title":"Peamine tasks fail - sisukord","text":"<p>Muutke <code>tasks/main.yml</code>: <pre><code>---\n- name: \"Include OS variables\"\n  include_vars: \"{{ ansible_os_family }}.yml\"\n  when: ansible_os_family in ['Debian', 'Ubuntu']\n\n- name: \"Validate configuration\"\n  include_tasks: validate.yml\n\n- name: \"Install Nginx\"\n  include_tasks: install.yml\n\n- name: \"Configure Nginx\"\n  include_tasks: configure.yml\n\n- name: \"Setup SSL\"\n  include_tasks: ssl.yml\n  when: nginx_ssl_enabled\n\n- name: \"Setup virtual hosts\"\n  include_tasks: vhosts.yml\n\n- name: \"Start service\"\n  include_tasks: service.yml\n\n- name: \"Run tests\"\n  include_tasks: test.yml\n</code></pre></p>"},{"location":"ansible_roles/lab/#validation-alati-kontrollige-sisendeid","title":"Validation - alati kontrollige sisendeid!","text":"<p>Looge <code>tasks/validate.yml</code>: <pre><code>---\n- name: \"Validate HTTP port\"\n  assert:\n    that:\n      - nginx_http_port is defined\n      - nginx_http_port is number\n      - nginx_http_port &gt; 0\n      - nginx_http_port &lt; 65536\n    fail_msg: \"nginx_http_port must be valid port (1-65535)\"\n\n- name: \"Validate HTTPS port\"\n  assert:\n    that:\n      - nginx_https_port is defined\n      - nginx_https_port is number\n      - nginx_https_port &gt; 0\n      - nginx_https_port &lt; 65536\n    fail_msg: \"nginx_https_port must be valid port (1-65535)\"\n\n- name: \"Validate SSL settings when enabled\"\n  assert:\n    that:\n      - nginx_ssl_cert_path is defined\n      - nginx_ssl_key_path is defined\n      - nginx_ssl_cert_path | length &gt; 0\n      - nginx_ssl_key_path | length &gt; 0\n    fail_msg: \"SSL certificate paths required when SSL enabled\"\n  when: nginx_ssl_enabled\n\n- name: \"Check minimum RAM\"\n  assert:\n    that:\n      - ansible_memtotal_mb &gt;= 256\n    fail_msg: \"Need at least 256MB RAM for nginx\"\n</code></pre></p>"},{"location":"ansible_roles/lab/#installation-tasks","title":"Installation tasks","text":"<p>Looge <code>tasks/install.yml</code>: <pre><code>---\n- name: \"Update package cache (Debian/Ubuntu)\"\n  apt:\n    update_cache: yes\n    cache_valid_time: 3600\n  when: ansible_os_family == \"Debian\"\n\n- name: \"Install Nginx packages\"\n  package:\n    name: \"{{ nginx_packages }}\"\n    state: present\n\n- name: \"Ensure nginx user exists\"\n  user:\n    name: \"{{ nginx_user }}\"\n    system: yes\n    shell: /bin/false\n    home: /var/www\n    createhome: no\n    state: present\n\n- name: \"Create required directories\"\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    owner: root\n    group: root\n    mode: '0755'\n  loop:\n    - \"{{ nginx_config_path }}\"\n    - \"{{ nginx_sites_available }}\"\n    - \"{{ nginx_sites_enabled }}\"\n    - \"{{ nginx_log_path }}\"\n    - \"/var/www\"\n</code></pre></p>"},{"location":"ansible_roles/lab/#configuration-tasks","title":"Configuration tasks","text":"<p>Looge <code>tasks/configure.yml</code>: <pre><code>---\n- name: \"Backup original nginx.conf\"\n  copy:\n    src: \"{{ nginx_config_path }}/nginx.conf\"\n    dest: \"{{ nginx_config_path }}/nginx.conf.original\"\n    remote_src: yes\n    force: no\n  ignore_errors: yes\n\n- name: \"Configure main nginx.conf\"\n  template:\n    src: nginx.conf.j2\n    dest: \"{{ nginx_config_path }}/nginx.conf\"\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n  notify: reload nginx\n\n- name: \"Remove default nginx site\"\n  file:\n    path: \"{{ nginx_sites_enabled }}/default\"\n    state: absent\n  when: nginx_remove_default_vhost\n  notify: reload nginx\n\n- name: \"Remove default site config\"\n  file:\n    path: \"{{ nginx_sites_available }}/default\"\n    state: absent\n  when: nginx_remove_default_vhost\n</code></pre></p>"},{"location":"ansible_roles/lab/#lab-4-ssl-ja-virtual-hosts-25-min","title":"\ud83d\udcdd Lab 4: SSL ja Virtual Hosts (25 min)","text":""},{"location":"ansible_roles/lab/#ssl-tasks","title":"SSL tasks","text":"<p>Looge <code>tasks/ssl.yml</code>: <pre><code>---\n- name: \"Install OpenSSL for certificate generation\"\n  package:\n    name: openssl\n    state: present\n\n- name: \"Create SSL directories\"\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    owner: root\n    group: root\n    mode: '0755'\n  loop:\n    - \"/etc/ssl/certs\"\n    - \"/etc/ssl/private\"\n\n- name: \"Generate self-signed SSL certificate\"\n  command: &gt;\n    openssl req -new -x509 -days 365 -nodes\n    -out {{ nginx_ssl_cert_path }}\n    -keyout {{ nginx_ssl_key_path }}\n    -subj \"/C=EE/ST=Harju/L=Tallinn/O=ITS-24 Course/CN={{ ansible_fqdn }}\"\n  args:\n    creates: \"{{ nginx_ssl_cert_path }}\"\n  when: nginx_ssl_enabled\n\n- name: \"Set SSL certificate permissions\"\n  file:\n    path: \"{{ nginx_ssl_cert_path }}\"\n    owner: root\n    group: root\n    mode: '0644'\n  when: nginx_ssl_enabled\n\n- name: \"Set SSL private key permissions (very important!)\"\n  file:\n    path: \"{{ nginx_ssl_key_path }}\"\n    owner: root\n    group: root\n    mode: '0600'\n  when: nginx_ssl_enabled\n</code></pre></p>"},{"location":"ansible_roles/lab/#virtual-hosts-tasks","title":"Virtual hosts tasks","text":"<p>Looge <code>tasks/vhosts.yml</code>: <pre><code>---\n- name: \"Configure virtual hosts\"\n  template:\n    src: vhost.conf.j2\n    dest: \"{{ nginx_sites_available }}/{{ item.name }}.conf\"\n    owner: root\n    group: root\n    mode: '0644'\n  loop: \"{{ nginx_vhosts }}\"\n  notify: reload nginx\n  when: nginx_vhosts | length &gt; 0\n\n- name: \"Enable virtual hosts\"\n  file:\n    src: \"{{ nginx_sites_available }}/{{ item.name }}.conf\"\n    dest: \"{{ nginx_sites_enabled }}/{{ item.name }}.conf\"\n    state: link\n  loop: \"{{ nginx_vhosts }}\"\n  notify: reload nginx\n  when: nginx_vhosts | length &gt; 0\n\n- name: \"Create document root directories\"\n  file:\n    path: \"{{ item.root | default('/var/www/' + item.name) }}\"\n    state: directory\n    owner: \"{{ nginx_user }}\"\n    group: \"{{ nginx_user }}\"\n    mode: '0755'\n  loop: \"{{ nginx_vhosts }}\"\n  when: nginx_vhosts | length &gt; 0\n\n- name: \"Create index.html for sites\"\n  template:\n    src: index.html.j2\n    dest: \"{{ item.root | default('/var/www/' + item.name) }}/index.html\"\n    owner: \"{{ nginx_user }}\"\n    group: \"{{ nginx_user }}\"\n    mode: '0644'\n  loop: \"{{ nginx_vhosts }}\"\n  when: nginx_vhosts | length &gt; 0\n</code></pre></p>"},{"location":"ansible_roles/lab/#service-ja-test-tasks","title":"Service ja test tasks","text":"<p>Looge <code>tasks/service.yml</code>: <pre><code>---\n- name: \"Start and enable Nginx service\"\n  service:\n    name: \"{{ nginx_service_name }}\"\n    state: started\n    enabled: yes\n\n- name: \"Check Nginx service status\"\n  service:\n    name: \"{{ nginx_service_name }}\"\n    state: started\n  register: nginx_status\n\n- name: \"Display service status\"\n  debug:\n    msg: \"Nginx teenus on {{ nginx_status.state }}!\"\n</code></pre></p> <p>Looge <code>tasks/test.yml</code>: <pre><code>---\n- name: \"Test nginx configuration syntax\"\n  command: nginx -t\n  register: nginx_config_test\n  changed_when: false\n  failed_when: nginx_config_test.rc != 0\n\n- name: \"Test HTTP response\"\n  uri:\n    url: \"http://{{ ansible_default_ipv4.address }}:{{ nginx_http_port }}\"\n    method: GET\n    status_code: [200, 301, 302, 404]\n  register: http_test\n  ignore_errors: yes\n\n- name: \"Test HTTPS response (if SSL enabled)\"\n  uri:\n    url: \"https://{{ ansible_default_ipv4.address }}:{{ nginx_https_port }}\"\n    method: GET\n    status_code: [200, 301, 302, 404]\n    validate_certs: no\n  register: https_test\n  ignore_errors: yes\n  when: nginx_ssl_enabled\n\n- name: \"Display test results\"\n  debug:\n    msg: |\n      Test tulemused:\n      - Config syntax: {{ 'OK' if nginx_config_test.rc == 0 else 'FAILED' }}\n      - HTTP response: {{ 'OK' if http_test.failed is not defined else 'FAILED' }}\n      - HTTPS response: {{ 'OK' if https_test.skipped is not defined and https_test.failed is not defined else 'SKIPPED/FAILED' }}\n</code></pre></p>"},{"location":"ansible_roles/lab/#lab-5-templates-25-min","title":"\ud83d\udcc4 Lab 5: Templates (25 min)","text":""},{"location":"ansible_roles/lab/#main-nginx-configuration","title":"Main nginx configuration","text":"<p>Looge <code>templates/nginx.conf.j2</code>: <pre><code># {{ ansible_managed }}\n# Nginx configuration for {{ inventory_hostname }}\n# Generated: {{ ansible_date_time.iso8601 }}\n\nuser {{ nginx_user }};\nworker_processes {{ nginx_worker_processes }};\npid /run/nginx.pid;\n\nevents {\n    worker_connections {{ nginx_worker_connections }};\n    use epoll;\n    multi_accept on;\n}\n\nhttp {\n    # Basic Settings\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 2048;\n    server_tokens {{ nginx_server_tokens }};\n\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n\n    # Logging\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log {{ nginx_log_path }}/access.log main;\n    error_log {{ nginx_log_path }}/error.log;\n\n{% if nginx_gzip_enabled %}\n    # Gzip Settings\n    gzip on;\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_comp_level 6;\n    gzip_types\n        text/plain\n        text/css\n        text/xml\n        text/javascript\n        application/json\n        application/javascript\n        application/xml+rss\n        application/atom+xml;\n{% endif %}\n\n{% if nginx_ssl_enabled %}\n    # SSL Settings\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;\n    ssl_prefer_server_ciphers on;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n{% endif %}\n\n    # Virtual Host Configs\n    include {{ nginx_sites_enabled }}/*;\n}\n</code></pre></p>"},{"location":"ansible_roles/lab/#virtual-host-template","title":"Virtual host template","text":"<p>Looge <code>templates/vhost.conf.j2</code>: <pre><code># {{ ansible_managed }}\n# Virtual host: {{ item.name }}\n\n{% if item.ssl | default(nginx_ssl_enabled) %}\n# HTTPS server\nserver {\n    listen {{ nginx_https_port }} ssl http2;\n    server_name {{ item.name }};\n\n    # SSL Configuration\n    ssl_certificate {{ nginx_ssl_cert_path }};\n    ssl_certificate_key {{ nginx_ssl_key_path }};\n\n    # Security headers\n    add_header Strict-Transport-Security \"max-age=31536000\" always;\n    add_header X-Frame-Options DENY always;\n    add_header X-Content-Type-Options nosniff always;\n\n    # Document root\n    root {{ item.root | default('/var/www/' + item.name) }};\n    index index.html index.htm;\n\n    # Logs\n    access_log {{ nginx_log_path }}/{{ item.name }}_ssl_access.log main;\n    error_log {{ nginx_log_path }}/{{ item.name }}_ssl_error.log;\n}\n\n# Redirect HTTP to HTTPS\nserver {\n    listen {{ nginx_http_port }};\n    server_name {{ item.name }};\n    return 301 https://$server_name$request_uri;\n}\n\n{% else %}\n# HTTP server\nserver {\n    listen {{ nginx_http_port }};\n    server_name {{ item.name }};\n\n    # Document root\n    root {{ item.root | default('/var/www/' + item.name) }};\n    index index.html index.htm;\n\n    # Logs\n    access_log {{ nginx_log_path }}/{{ item.name }}_access.log main;\n    error_log {{ nginx_log_path }}/{{ item.name }}_error.log;\n}\n{% endif %}\n</code></pre></p>"},{"location":"ansible_roles/lab/#indexhtml-template","title":"Index.html template","text":"<p>Looge <code>templates/index.html.j2</code>: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"et\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;{{ item.name }} - ITS-24 Nginx Role&lt;/title&gt;\n    &lt;style&gt;\n        body { \n            font-family: Arial, sans-serif; \n            max-width: 800px; \n            margin: 50px auto; \n            padding: 20px;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n        }\n        .container {\n            background: rgba(255,255,255,0.1);\n            padding: 30px;\n            border-radius: 10px;\n            backdrop-filter: blur(10px);\n        }\n        h1 { text-align: center; }\n        .info { background: rgba(255,255,255,0.2); padding: 15px; border-radius: 5px; margin: 10px 0; }\n        .success { color: #4CAF50; font-weight: bold; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;\ud83d\ude80 ITS-24 Nginx Role&lt;/h1&gt;\n        &lt;p class=\"success\"&gt;\u2705 {{ item.name }} on edukalt konfigureeritud!&lt;/p&gt;\n\n        &lt;div class=\"info\"&gt;\n            &lt;strong&gt;Virtual Host:&lt;/strong&gt; {{ item.name }}&lt;br&gt;\n            &lt;strong&gt;Server:&lt;/strong&gt; {{ inventory_hostname }}&lt;br&gt;\n            &lt;strong&gt;Document Root:&lt;/strong&gt; {{ item.root | default('/var/www/' + item.name) }}&lt;br&gt;\n            &lt;strong&gt;SSL Enabled:&lt;/strong&gt; {{ item.ssl | default(nginx_ssl_enabled) | ternary('Yes', 'No') }}&lt;br&gt;\n            &lt;strong&gt;Generated:&lt;/strong&gt; {{ ansible_date_time.iso8601 }}\n        &lt;/div&gt;\n\n        &lt;h3&gt;\ud83d\udcca Server Info&lt;/h3&gt;\n        &lt;div class=\"info\"&gt;\n            &lt;strong&gt;OS:&lt;/strong&gt; {{ ansible_distribution }} {{ ansible_distribution_version }}&lt;br&gt;\n            &lt;strong&gt;Architecture:&lt;/strong&gt; {{ ansible_architecture }}&lt;br&gt;\n            &lt;strong&gt;CPU Cores:&lt;/strong&gt; {{ ansible_processor_vcpus }}&lt;br&gt;\n            &lt;strong&gt;Memory:&lt;/strong&gt; {{ (ansible_memtotal_mb/1024)|round(1) }} GB\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"ansible_roles/lab/#handlers","title":"Handlers","text":"<p>Muutke <code>handlers/main.yml</code>: <pre><code>---\n- name: reload nginx\n  service:\n    name: \"{{ nginx_service_name }}\"\n    state: reloaded\n\n- name: restart nginx\n  service:\n    name: \"{{ nginx_service_name }}\"\n    state: restarted\n</code></pre></p>"},{"location":"ansible_roles/lab/#lab-6-rolei-testimine-10-min","title":"\ud83e\uddea Lab 6: Role'i testimine (10 min)","text":""},{"location":"ansible_roles/lab/#test-playbook-loomine","title":"Test playbook loomine","text":"<p>Looge <code>test-nginx.yml</code> (roles/ kataloogis): <pre><code>---\n- name: \"Test nginx role\"\n  hosts: localhost\n  connection: local\n  become: yes\n\n  vars:\n    # Test konfiguratsioon\n    nginx_ssl_enabled: true\n    nginx_vhosts:\n      - name: \"test.local\"\n        root: \"/var/www/test\"\n        ssl: true\n      - name: \"demo.local\"\n        root: \"/var/www/demo\"\n        ssl: false\n\n    # Custom seaded\n    nginx_worker_processes: 4\n    nginx_gzip_enabled: true\n\n  roles:\n    - nginx-webserver\n\n  post_tasks:\n    - name: \"Final verification\"\n      debug:\n        msg: |\n          \ud83c\udf93 ITS-24 Nginx Role Test Complete!\n\n          \u2705 Nginx installed and configured\n          \u2705 SSL certificates generated\n          \u2705 Virtual hosts: {{ nginx_vhosts | length }}\n          \u2705 Test URLs:\n             - http://localhost (should redirect to HTTPS)\n             - https://localhost (SSL test site)\n\n          Role is ready for production! \ud83d\ude80\n</code></pre></p>"},{"location":"ansible_roles/lab/#rolei-kaivitamine","title":"Role'i k\u00e4ivitamine","text":"<pre><code># Navigeerige tagasi roles/ kausta\ncd ~/ansible-roles-lab\n\n# K\u00e4ivitage test\nansible-playbook -i localhost, test-nginx.yml\n\n# Kontrollige tulemust\ncurl http://localhost\ncurl -k https://localhost  # -k sest self-signed cert\n\n# Vaadake nginx status\nsudo systemctl status nginx\n</code></pre>"},{"location":"ansible_roles/lab/#samm-7-readme-dokumentatsioon","title":"\ud83d\udcda Samm 7: README dokumentatsioon","text":"<p>Looge/muutke <code>README.md</code>: <pre><code># Nginx Webserver Role\n\nProfessional Nginx role with SSL support and virtual hosts management.\n\n## Features\n\n- **Nginx installation and configuration**\n- **SSL/TLS support with self-signed certificates**\n- **Virtual hosts management**\n- **Security headers and optimization**\n- **Multi-OS support (Ubuntu/Debian)**\n\n## Quick Start\n\n```yaml\n- hosts: webservers\n  become: yes\n  roles:\n    - nginx-webserver\n</code></pre></p>"},{"location":"ansible_roles/lab/#variables","title":"Variables","text":"Variable Default Description <code>nginx_ssl_enabled</code> <code>false</code> Enable SSL/HTTPS <code>nginx_http_port</code> <code>80</code> HTTP port <code>nginx_https_port</code> <code>443</code> HTTPS port <code>nginx_vhosts</code> <code>[]</code> Virtual hosts list"},{"location":"ansible_roles/lab/#example-with-ssl","title":"Example with SSL","text":"<pre><code>- hosts: webservers\n  become: yes\n  vars:\n    nginx_ssl_enabled: true\n    nginx_vhosts:\n      - name: \"example.com\"\n        root: \"/var/www/example\"\n        ssl: true\n  roles:\n    - nginx-webserver\n</code></pre>"},{"location":"ansible_roles/lab/#author","title":"Author","text":"<p>ITS-24 DevOps Automation Course ```</p>"},{"location":"ansible_roles/lab/#samm-2-kokkuvote","title":"\ud83c\udfaf Samm 2: Kokkuv\u00f5te","text":"<p>Palju \u00f5nne! Teil on n\u00fc\u00fcd:</p> <p>Nginx role Multi-OS tugi SSL sertifikaadid Virtual hosts T\u00e4ielik dokumentatsioon Testitud ja t\u00f6\u00f6tav </p> <p>See role on valmis kasutamiseks p\u00e4ris projektides!</p> <p>Kodut\u00f6\u00f6: Puppet vs Ansible anal\u00fc\u00fcs p\u00f5hineb sellel, mida t\u00e4na \u00f5ppisime.</p>"},{"location":"ansible_roles/lecture/","title":"\ud83d\udcda Ansible Roles: Roles ja Puppet","text":""},{"location":"ansible_roles/lecture/#teemad-vagrant-basics-ansible-roles-structure-role-variables-ja-dependencies-ansible-galaxy-puppet-fundamentals-puppet-vs-ansible-vordlus","title":"Teemad: Vagrant basics, Ansible roles structure, Role variables ja dependencies, Ansible Galaxy, Puppet fundamentals, Puppet vs Ansible v\u00f5rdlus","text":"<p>Tere tulemast tagasi! Eelmisel n\u00e4dalal \u00f5ppisime Ansible'i variables, templates ja vault'i kasutamist. T\u00e4na astume j\u00e4rgmise suure sammu - \u00f5pime kirjutama professionaalset infrastruktuuri koodi ja v\u00f5rdleme erinevaid t\u00f6\u00f6riistu.</p>"},{"location":"ansible_roles/lecture/#osa-1-vagrant-testing-environment","title":"Osa 1: Vagrant Testing Environment","text":""},{"location":"ansible_roles/lecture/#loeng-1-vagrant-basics-for-testing-15-min","title":"Loeng 1: Vagrant Basics for Testing (15 min)","text":""},{"location":"ansible_roles/lecture/#miks-me-vajame-testikeskkonda","title":"Miks me vajame testikeskkonda?","text":"<p>Kui t\u00f6\u00f6tate Ansible playbook'ide v\u00f5i Puppet manifest'idega, ei saa neid testida toodangu serveritest! Vajate turvalist keskkonda, kus:</p> <ul> <li>\u2705 V\u00f5ib \u00fcles l\u00fc\u00fca - kui midagi l\u00e4heb valesti</li> <li>\u2705 Kiire reset - uus puhas server sekundites  </li> <li>\u2705 Erinevad OS'id - Ubuntu, CentOS, Debian testimiseks</li> <li>\u2705 Ei maksa raha - cloud VM'ide asemel</li> </ul> <p>Vagrant lahendab t\u00e4pselt selle probleemi!</p>"},{"location":"ansible_roles/lecture/#mis-on-vagrant","title":"Mis on Vagrant?","text":"<p>Vagrant = Virtual Machine management tool:</p> <pre><code># Looge VM sekunditega\nvagrant init ubuntu/jammy64\nvagrant up\n\n# \u00dchendage VM'iga\nvagrant ssh\n\n# H\u00e4vitage ja alustage uuest\nvagrant destroy -f\nvagrant up\n</code></pre>"},{"location":"ansible_roles/lecture/#vagrant-project-setup","title":"Vagrant Project Setup","text":""},{"location":"ansible_roles/lecture/#basic-vagrantfile","title":"Basic Vagrantfile:","text":"<pre><code># Vagrantfile\nVagrant.configure(\"2\") do |config|\n  # Base box (OS image)\n  config.vm.box = \"ubuntu/jammy64\"\n\n  # VM resources\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.memory = \"2048\"\n    vb.cpus = 2\n  end\n\n  # Network settings\n  config.vm.network \"private_network\", ip: \"192.168.56.10\"\n\n  # Shared folders\n  config.vm.synced_folder \".\", \"/vagrant\"\n\n  # Ansible provisioning\n  config.vm.provision \"ansible\" do |ansible|\n    ansible.playbook = \"site.yml\"\n    ansible.inventory_path = \"inventory/vagrant\"\n  end\nend\n</code></pre>"},{"location":"ansible_roles/lecture/#multi-vm-setup","title":"Multi-VM Setup:","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  # Ansible test VM\n  config.vm.define \"ansible-vm\" do |ansible|\n    ansible.vm.box = \"ubuntu/jammy64\"\n    ansible.vm.network \"private_network\", ip: \"192.168.56.11\"\n    ansible.vm.hostname = \"ansible-test\"\n  end\n\n  # Puppet test VM  \n  config.vm.define \"puppet-vm\" do |puppet|\n    puppet.vm.box = \"ubuntu/jammy64\"\n    puppet.vm.network \"private_network\", ip: \"192.168.56.12\"\n    puppet.vm.hostname = \"puppet-test\"\n  end\nend\n</code></pre>"},{"location":"ansible_roles/lecture/#vagrant-lifecycle","title":"Vagrant Lifecycle","text":"<pre><code>flowchart TD\n    A[\ud83d\udcdd vagrant init&lt;br/&gt;Loo Vagrantfile] --&gt; B[\u2705 vagrant validate&lt;br/&gt;Kontrolli konfiguratsiooni]\n    B --&gt; C[\ud83d\ude80 vagrant up&lt;br/&gt;K\u00e4ivita VM]\n    C --&gt; D[\ud83d\udd17 vagrant ssh&lt;br/&gt;\u00dchenda VM'iga]\n    D --&gt; E[\u23f8\ufe0f vagrant halt&lt;br/&gt;Peata VM]\n    E --&gt; F[\ud83d\udd04 vagrant reload&lt;br/&gt;Restart VM]\n    F --&gt; G[\ud83d\uddd1\ufe0f vagrant destroy&lt;br/&gt;Kustuta VM]\n\n    style A fill:#99ccff\n    style B fill:#99ff99\n    style C fill:#ffcc99\n    style D fill:#ff9999\n    style E fill:#cc99ff\n    style F fill:#ffff99\n    style G fill:#ff99cc</code></pre> <pre><code># Projekt setup\nvagrant init                # Loo Vagrantfile\nvagrant validate           # Kontrolli konfiguratsiooni\n\n# VM management\nvagrant up                 # K\u00e4ivita VM\nvagrant ssh                # \u00dchenda VM'iga\nvagrant halt               # Peata VM\nvagrant reload             # Restart VM\nvagrant destroy            # Kustuta VM\n\n# Snapshots ja info\nvagrant snapshot save clean    # Salvesta snapshot\nvagrant snapshot restore clean # Taasta snapshot\nvagrant status                 # Vaata VM olekut\n</code></pre>"},{"location":"ansible_roles/lecture/#vagrant-ansible-integration","title":"Vagrant + Ansible Integration","text":"<p>Automaatne provisioning: <pre><code>config.vm.provision \"ansible\" do |ansible|\n  ansible.playbook = \"site.yml\"\n  ansible.inventory_path = \"inventory\"\n  ansible.limit = \"all\"\n  ansible.verbose = \"v\"\nend\n</code></pre></p> <p>Manual provisioning: <pre><code># VM k\u00e4imas, provisioning k\u00e4sitsi\nvagrant up --no-provision\nvagrant ssh\n# VM sees: install Ansible, run playbooks\n</code></pre></p>"},{"location":"ansible_roles/lecture/#demo-quick-vagrant-test","title":"Demo: Quick Vagrant Test","text":"<pre><code># 1. Loo test projekt\nmkdir vagrant-demo &amp;&amp; cd vagrant-demo\n\n# 2. Initialize Vagrant\nvagrant init ubuntu/jammy64\n\n# 3. Start VM\nvagrant up\n\n# 4. Connect and test\nvagrant ssh\nsudo apt update\nexit\n\n# 5. Cleanup\nvagrant destroy -f\n</code></pre> <p>\ud83d\udca1 Protip: Vagrant'iga saate testida sama playbook'i erinevatel OS'idel!</p>"},{"location":"ansible_roles/lecture/#osa-2-ansible-roles-tutvustus","title":"Osa 2: Ansible Roles tutvustus","text":""},{"location":"ansible_roles/lecture/#loeng-2-ansible-roles-architecture-18-min","title":"Loeng 2: Ansible Roles Architecture (18 min)","text":""},{"location":"ansible_roles/lecture/#miks-vajame-rolee-spagettikood-probleem","title":"Miks vajame role'e? Spagettikood probleem","text":"<p>Kujutage ette olukorda: teie boss tuleb teie juurde ja \u00fctleb:</p> <p>\"Palun seadista mulle 50 veebiserveri, 20 andmebaasiserveri ja 30 monitoring serveri. K\u00f5ik peavad olema identse konfiguratsiooniga ja ma vajan seda homme valmis.\"</p> <p>Kuidas te seda tegema hakkaksite?</p> <p>Enamik algajaid hakkab kirjutama \u00fcht suurt playbook'i:</p> <pre><code># monster-playbook.yml - 800+ rida \u00f5udust!\n- name: \"K\u00f5ik \u00fches failis - \u00e4ra tehke kunagi nii!\"\n  hosts: all\n  tasks:\n    # 100 task'i nginx jaoks\n    - name: \"Install nginx\"\n    - name: \"Configure nginx main config\"  \n    - name: \"Setup nginx virtual hosts\"\n    - name: \"Generate SSL certificates for nginx\"\n    - name: \"Configure nginx security headers\"\n    # ... veel 95 task'i nginx jaoks\n\n    # 80 task'i mysql jaoks\n    - name: \"Install mysql server\"\n    - name: \"Configure mysql users\"\n    - name: \"Setup mysql databases\"\n    # ... veel 77 task'i mysql jaoks\n\n    # 60 task'i monitoring jaoks\n    - name: \"Install prometheus\"\n    - name: \"Configure grafana\"\n    # ... veel 58 task'i monitoring jaoks\n\n    # 40 task'i backup jaoks\n    # 30 task'i SSL jaoks\n    # 50 task'i security jaoks\n    # ja nii edasi...\n</code></pre> <p>See on kohutav lahendus! Miks?</p> <ol> <li>V\u00f5imatu lugeda - 800+ rida \u00fches failis</li> <li>V\u00f5imatu testida - peate testima kogu faili korraga</li> <li>Ei saa korduvkasutada - kui vajate nginx'i teises projektis?</li> <li>Meeskonnat\u00f6\u00f6 v\u00f5imatu - kuidas jagada kolleegidega?</li> <li>Muudatused riskantne - \u00fche asja muutmine v\u00f5ib midagi muud l\u00f5hkuda</li> </ol> <p>Ma olen n\u00e4inud selliseid 2000+ realisi playbook'e p\u00e4ris firmades. Need on nagu spagettikood - keegi ei tea, mis kuhu kuulub!</p>"},{"location":"ansible_roles/lecture/#mis-on-ansible-role-lego-klotsid-meetod","title":"Mis on Ansible Role? LEGO klotsid meetod","text":"<p>Ansible Role on nagu LEGO klots.</p> <p>M\u00f5elge LEGO peale: - Iga klots teeb \u00fchte asja h\u00e4sti (auto ratas, sein, katus) - Klotsid on standardsed - sobivad alati kokku - Klotsid on korduvkasutatavad - sama ratas sobib auto ja lennuki k\u00fclge - Klotsid on kombineeritavad - saate ehitada maju, autosid, linnu</p> <p>Role'id t\u00f6\u00f6tavad t\u00e4pselt samamoodi:</p> <pre><code># site.yml - selge ja lihtne!\n- name: \"Web servers setup\"\n  hosts: webservers\n  roles:\n    - common      # P\u00f5hiseadistused (SSH, users, firewall)\n    - nginx       # Ainult veebiserver  \n    - php         # Ainult PHP runtime\n    - ssl         # Ainult SSL sertifikaadid\n\n- name: \"Database servers setup\"\n  hosts: dbservers\n  roles:\n    - common      # SAMA common role!\n    - mysql       # Ainult andmebaas\n    - backup      # Ainult varundamine\n\n- name: \"Monitoring servers setup\"\n  hosts: monitoring\n  roles:\n    - common      # SAMA common role taas!\n    - prometheus  # Ainult monitoring\n    - grafana     # Ainult dashboardid\n</code></pre> <p>Vaadake, mis toimus: - <code>common</code> role kasutatakse kolmes erinevas kohas - Iga role teeb ainult \u00fchte asja - Kood on selge ja loetav - Saame osasid eraldi testida</p>"},{"location":"ansible_roles/lecture/#rolei-anatoomia-maja-ehitamise-meetod","title":"Role'i anatoomia: Maja ehitamise meetod","text":"<p>M\u00f5elge role'ile nagu maja ehitamisele. Igal osalisel on oma koht ja eesm\u00e4rk:</p> <pre><code>nginx-role/\n\u251c\u2500\u2500 README.md              # \"Kasutusjuhend\" - kuidas role't kasutada\n\u251c\u2500\u2500 meta/main.yml          # \"Ehitusluba\" - dependencies, n\u00f5uded\n\u251c\u2500\u2500 defaults/main.yml      # \"Standardmaterjalid\" - vaikimisi seaded\n\u251c\u2500\u2500 vars/main.yml          # \"Kindlad materjalid\" - muutumatud seaded\n\u251c\u2500\u2500 tasks/main.yml         # \"Ehitusplaan\" - sammud j\u00e4rjest\n\u251c\u2500\u2500 handlers/main.yml      # \"H\u00e4ires\u00fcsteemid\" - reaktsioonid muudatustele\n\u251c\u2500\u2500 templates/             # \"Kohandatavad osad\" - konfiguratsioonifailid\n\u2502   \u2514\u2500\u2500 nginx.conf.j2\n\u251c\u2500\u2500 files/                 # \"Valmis detailid\" - skriptid, sertifikaadid\n\u2502   \u2514\u2500\u2500 startup.sh\n\u2514\u2500\u2500 tests/                 # \"Kontrollid\" - kas maja p\u00fcsib p\u00fcsti\n    \u2514\u2500\u2500 test.yml\n</code></pre>"},{"location":"ansible_roles/lecture/#iga-kausta-eesmark","title":"Iga kausta eesm\u00e4rk:","text":"<p><code>tasks/</code> = Ehitusplaan - Sisaldab k\u00f5iki samme, mis role teeb - Alati alustage siit role'i lugemisel</p> <p><code>defaults/</code> = Standardmaterjalid - Vaikimisi seaded, mida saab muuta - Madalaim prioriteet - k\u00f5ik muu kirjutab \u00fcle</p> <p><code>vars/</code> = Kindlad materjalid - Seaded, mida role ise m\u00e4\u00e4rab - K\u00f5rge prioriteet - raske \u00fcle kirjutada</p> <p><code>templates/</code> = Kohandatavad osad - Konfiguratsioonifailid, mida saab muutujatega kohandada - Kasutab Jinja2 template engine'i</p> <p><code>files/</code> = Valmis detailid - Staatilised failid, mis kopeeritakse otse - Skriptid, sertifikaadid, etc.</p> <p><code>handlers/</code> = H\u00e4ires\u00fcsteemid - K\u00e4ivitatakse ainult siis, kui midagi muutus - Tavaliselt teenuste restart'imine</p> <p><code>meta/</code> = Ehitusluba - Kirjeldab, mida role vajab t\u00f6\u00f6ks - Dependencies teiste role'idega</p>"},{"location":"ansible_roles/lecture/#lihtne-nginx-role-naide","title":"Lihtne nginx role n\u00e4ide","text":"<p>Vaatame, kuidas lihtsaim nginx role v\u00e4lja n\u00e4eks:</p> <p><code>tasks/main.yml</code> - mis me teeme: <pre><code>---\n- name: \"Install Nginx (alati kirjutage selged nimed!)\"\n  package:\n    name: nginx\n    state: present\n\n- name: \"Configure Nginx (kasutame template'i)\"\n  template:\n    src: nginx.conf.j2\n    dest: /etc/nginx/nginx.conf\n  notify: restart nginx    # See k\u00e4ivitab handler'i!\n\n- name: \"Start Nginx (enable = autostart boot'imisel)\"\n  service:\n    name: nginx\n    state: started\n    enabled: yes\n</code></pre></p> <p><code>defaults/main.yml</code> - vaikimisi seaded: <pre><code>---\nnginx_port: 80              # Enamik tahab port 80\nnginx_user: www-data        # Ubuntu standard user\nnginx_worker_processes: 2   # M\u00f5istlik algus\nnginx_max_connections: 1024 # Piisav v\u00e4ikesele saidile\n</code></pre></p> <p><code>templates/nginx.conf.j2</code> - konfiguratsioon: <pre><code>user {{ nginx_user }};\nworker_processes {{ nginx_worker_processes }};\n\nevents {\n    worker_connections {{ nginx_max_connections }};\n}\n\nhttp {\n    server {\n        listen {{ nginx_port }};\n        server_name _;\n        root /var/www/html;\n        index index.html;\n    }\n}\n</code></pre></p> <p><code>handlers/main.yml</code> - reaktsioonid: <pre><code>---\n- name: restart nginx\n  service:\n    name: nginx\n    state: restarted\n</code></pre></p> <p>N\u00e4ete, kui lihtne see on? Iga fail teeb \u00fchte asja ja need t\u00f6\u00f6tavad koos!</p>"},{"location":"ansible_roles/lecture/#variable-precedence-muutujate-hierarhia","title":"Variable Precedence: Muutujate hierarhia","text":"<p>Ansible'is on muutujatel t\u00e4htsusj\u00e4rjekord. See on \u00fcks keerulisemaid teemasid, aga v\u00e4ga oluline m\u00f5ista!</p> <p>K\u00f5rgemad kirjutavad \u00fcle madalamad:</p> <pre><code>1. Command line (-e var=value)    \u2190 K\u00d5IGE TUGEVAM (k\u00e4sk)\n2. Task vars                      \n3. Block vars\n4. Role vars                      \u2190 vars/main.yml\n5. Include vars\n6. Set_facts\n7. Registered vars\n8. Host facts\n9. Play vars\n10. Host vars\n11. Group vars  \n12. Role defaults                 \u2190 K\u00d5IGE N\u00d5RGEM (soovitus)\n</code></pre>"},{"location":"ansible_roles/lecture/#praktiline-naide-hierarhiast","title":"Praktiline n\u00e4ide hierarhiast:","text":"<pre><code># defaults/main.yml (k\u00f5ige n\u00f5rgem)\nnginx_port: 80\n\n# vars/main.yml (tugev)\nnginx_port: 8080\n\n# playbook.yml (tugevam)\n- role: nginx\n  vars:\n    nginx_port: 9000\n\n# K\u00e4sureal (k\u00f5ige tugevam)\nansible-playbook site.yml -e nginx_port=3000\n</code></pre> <p>Tulemus: nginx kuulab port 3000!</p>"},{"location":"ansible_roles/lecture/#kuidas-seda-meeles-pidada","title":"Kuidas seda meeles pidada:","text":"<ul> <li>Role defaults = \"Soovitused\" (n\u00f5rgad)</li> <li>Role vars = \"Reeglid\" (tugevad)  </li> <li>Play vars = \"K\u00e4sud\" (tugevamad)</li> <li>Extra vars = \"K\u00e4sklused\" (k\u00f5ige tugevamad)</li> </ul>"},{"location":"ansible_roles/lecture/#roleide-kasutamine-playbookis","title":"Role'ide kasutamine playbook'is","text":""},{"location":"ansible_roles/lecture/#1-lihtne-kasutamine","title":"1. Lihtne kasutamine:","text":"<pre><code>- name: \"Deploy web application\"\n  hosts: webservers\n  become: yes\n  roles:\n    - nginx\n    - php\n    - mysql-client\n</code></pre>"},{"location":"ansible_roles/lecture/#2-muutujatega-kasutamine","title":"2. Muutujatega kasutamine:","text":"<pre><code>- name: \"Custom web server setup\"\n  hosts: webservers\n  become: yes\n  roles:\n    - role: nginx\n      vars:\n        nginx_port: 8080\n        nginx_ssl_enabled: true\n        nginx_worker_processes: 4\n</code></pre>"},{"location":"ansible_roles/lecture/#3-conditional-roleid","title":"3. Conditional role'id:","text":"<pre><code>- name: \"Environment-specific deployment\"\n  hosts: all\n  become: yes\n  roles:\n    - common\n    - role: nginx\n      when: \"'webservers' in group_names\"\n    - role: mysql\n      when: \"'dbservers' in group_names\"\n    - role: monitoring\n      when: app_env == \"production\"\n</code></pre>"},{"location":"ansible_roles/lecture/#osa-2-role-creation-best-practices","title":"Osa 2: Role Creation Best Practices","text":""},{"location":"ansible_roles/lecture/#loeng-2-professionaalsed-standardid-15-min","title":"Loeng 2: Professionaalsed standardid (15 min)","text":"<p>N\u00fc\u00fcd kui teate, mis on role, \u00f5pime, kuidas teha neid \u00f5igesti. Ma olen n\u00e4inud tuhandeid halbu role'e - aga hea uudis on see, et on lihtsad reeglid, mis muudavad teie role'id professionaalseteks!</p>"},{"location":"ansible_roles/lecture/#reegel-1-single-responsibility-principle","title":"Reegel 1: Single Responsibility Principle","text":"<p>\"\u00dcks role = \u00fcks vastutus\"</p> <p>See on k\u00f5ige olulisem reegel. Iga role peaks tegema t\u00e4pselt \u00fchte asja ja tegema seda h\u00e4sti.</p>"},{"location":"ansible_roles/lecture/#hea-lahenemine","title":"Hea l\u00e4henemine \u2705","text":"<pre><code>roles/\n\u251c\u2500\u2500 nginx/         # AINULT veebiserver\n\u251c\u2500\u2500 mysql/         # AINULT andmebaas\n\u251c\u2500\u2500 php/           # AINULT PHP runtime\n\u251c\u2500\u2500 ssl/           # AINULT SSL sertifikaadid\n\u251c\u2500\u2500 backup/        # AINULT varundamine\n\u2514\u2500\u2500 monitoring/    # AINULT j\u00e4lgimine\n</code></pre>"},{"location":"ansible_roles/lecture/#halb-lahenemine","title":"Halb l\u00e4henemine \u274c","text":"<pre><code>roles/\n\u2514\u2500\u2500 web-stack/     # Teeb K\u00d5IKE korraga:\n                   # nginx + mysql + php + ssl + backup + monitoring\n</code></pre> <p>Miks see halb? - Kui MySQL vajab parandust, peate puutuma nginx'iga - Ei saa nginx'i kasutada ilma MySQL'ita - Raske testida - peate testima k\u00f5ike korraga - Suur ja keeruline - keegi ei saa aru</p> <p>Praktiline n\u00e4ide:</p> <p>Kujutage ette, et teil on <code>web-stack</code> role, mis teeb k\u00f5ike. Siis tuleb uus projekt, kus vaja ainult nginx'i (ilma MySQL'ita). Mida te teete?</p> <ol> <li>Halvad valikud:</li> <li>Kopeerite koodi ja eemaldatae MySQL osad (DRY printsiibi rikkumine)</li> <li>Lisate tuhandeeid <code>when</code> tingimusi (keeruline)</li> <li> <p>Kasutate kogu role'i ja ignoreerite MySQL'i (raisatud ressursid)</p> </li> <li> <p>Hea valik:</p> </li> <li>Kasutate eraldi <code>nginx</code> role'i - t\u00f6\u00f6tab kohe!</li> </ol>"},{"location":"ansible_roles/lecture/#reegel-2-8020-konfigureeritavus","title":"Reegel 2: 80/20 Konfigureeritavus","text":"<p>80% juhtudest peaks role t\u00f6\u00f6tama vaikimisi seadetega!</p> <p>See t\u00e4hendab, et algajad saavad kohe alustada, aga eksperdid saavad k\u00f5ike muuta.</p>"},{"location":"ansible_roles/lecture/#algajasobralik-defaults","title":"Algajas\u00f5bralik defaults","text":"<pre><code># defaults/main.yml - lihtne ja toimib kohe\nwebserver_port: 80                    # K\u00f5ik teavad port 80\nwebserver_ssl_enabled: false          # SSL on optional\nwebserver_user: www-data              # Ubuntu standard\nwebserver_worker_processes: 2         # M\u00f5istlik algus\n\n# Lihtsad moodulid\nwebserver_modules:\n  - rewrite    # URL rewriting\n  - ssl        # HTTPS support\n</code></pre>"},{"location":"ansible_roles/lecture/#eksperdi-voimalused","title":"Eksperdi v\u00f5imalused","text":"<pre><code># playbook.yml - ekspert saab k\u00f5ike muuta\n- role: webserver\n  vars:\n    webserver_port: 443\n    webserver_ssl_enabled: true\n    webserver_ssl_cert: \"/path/to/custom.pem\"\n    webserver_worker_processes: 8\n\n    # Eksperdi moodulid\n    webserver_modules:\n      - rewrite\n      - ssl\n      - headers\n      - deflate\n      - geoip\n      - rate_limit\n\n    # T\u00e4iesti custom konfiguratsioon\n    webserver_custom_config: |\n      # Minu spetsiaalne konfiguratsioon\n      gzip on;\n      gzip_types text/css application/javascript;\n\n      location /api/ {\n          proxy_pass http://backend;\n          proxy_set_header Host $host;\n      }\n</code></pre> <p>V\u00f5tmepunktid: - Defaults peavad olema turvalised ja m\u00f5istlikud - K\u00f5ik peab olema \u00fcle kirjutatav advanced kasutajatele - Dokumendiga peab olema n\u00e4idete m\u00f5lemale tasemele</p>"},{"location":"ansible_roles/lecture/#reegel-3-multi-os-tugi","title":"Reegel 3: Multi-OS tugi","text":"<p>Professionaalne role toetab mitut operatsioonis\u00fcsteemi. See t\u00e4hendab, et sama role t\u00f6\u00f6tab Ubuntu's, Debian'is, CentOS'is, jne.</p>"},{"location":"ansible_roles/lecture/#kuidas-seda-organiseerida","title":"Kuidas seda organiseerida:","text":"<pre><code>webserver-role/\n\u251c\u2500\u2500 vars/\n\u2502   \u251c\u2500\u2500 main.yml           # \u00dchised muutujad\n\u2502   \u251c\u2500\u2500 Debian.yml         # Ubuntu/Debian spetsiifilised\n\u2502   \u251c\u2500\u2500 RedHat.yml         # CentOS/RHEL spetsiifilised\n\u2502   \u2514\u2500\u2500 Ubuntu.yml         # Ubuntu erip\u00e4rad\n\u2514\u2500\u2500 tasks/\n    \u251c\u2500\u2500 main.yml           # Peamine loogika\n    \u251c\u2500\u2500 install-Debian.yml # Debian installeerimise viis\n    \u2514\u2500\u2500 install-RedHat.yml # RedHat installeerimise viis\n</code></pre>"},{"location":"ansible_roles/lecture/#smart-approach-os-detection","title":"Smart approach - OS detection:","text":"<p><code>tasks/main.yml</code>: <pre><code>---\n- name: \"Load OS-specific variables (smart trick!)\"\n  include_vars: \"{{ item }}\"\n  with_first_found:\n    - \"{{ ansible_distribution }}.yml\"        # Ubuntu.yml\n    - \"{{ ansible_os_family }}.yml\"           # Debian.yml\n    - \"main.yml\"                              # fallback\n\n- name: \"Install packages (OS-specific way)\"\n  include_tasks: \"install-{{ ansible_os_family }}.yml\"\n\n- name: \"Configure webserver (universal)\"\n  include_tasks: configure.yml\n</code></pre></p> <p><code>vars/Debian.yml</code> (Ubuntu/Debian): <pre><code>---\nwebserver_package: \"nginx\"\nwebserver_service: \"nginx\"  \nwebserver_config_path: \"/etc/nginx\"\nwebserver_user: \"www-data\"        # Debian kasutab www-data\nwebserver_group: \"www-data\"\nwebserver_log_path: \"/var/log/nginx\"\n</code></pre></p> <p><code>vars/RedHat.yml</code> (CentOS/RHEL): <pre><code>---\nwebserver_package: \"nginx\"\nwebserver_service: \"nginx\"\nwebserver_config_path: \"/etc/nginx\"\nwebserver_user: \"nginx\"           # RedHat kasutab nginx\nwebserver_group: \"nginx\"\nwebserver_log_path: \"/var/log/nginx\"\n</code></pre></p> <p>Miks see on kasulik? - Role t\u00f6\u00f6tab automaatselt erinevates OS'ides - Ei pea meeles pidama OS erinevusi - Saate testida mitmes keskkonnas</p>"},{"location":"ansible_roles/lecture/#reegel-4-alati-valideerige-sisendeid","title":"Reegel 4: Alati valideerige sisendeid!","text":"<p>Ma olen n\u00e4inud tudengeid, kes unustavad valideerimise. Tulemus on segadus ja cryptic error message'id.</p> <p>Iga role peaks kontrollima: 1. Kas kohustuslikud muutujad on m\u00e4\u00e4ratud? 2. Kas muutujate v\u00e4\u00e4rtused on m\u00f5istlikud? 3. Kas s\u00fcsteem vastab n\u00f5uetele?</p>"},{"location":"ansible_roles/lecture/#parameetrite-valideerimine","title":"Parameetrite valideerimine","text":"<p><code>tasks/validate.yml</code>: <pre><code>---\n- name: \"Validate port number (critical check!)\"\n  assert:\n    that:\n      - webserver_port is defined\n      - webserver_port is number\n      - webserver_port &gt; 0\n      - webserver_port &lt; 65536\n    fail_msg: |\n      ERROR: webserver_port must be a valid port number (1-65535)\n      Current value: {{ webserver_port | default('undefined') }}\n\n- name: \"Validate SSL settings when enabled\"\n  assert:\n    that:\n      - webserver_ssl_cert_path is defined\n      - webserver_ssl_key_path is defined\n      - webserver_ssl_cert_path | length &gt; 0\n      - webserver_ssl_key_path | length &gt; 0\n    fail_msg: |\n      ERROR: SSL sertifikaadi teed peavad olema m\u00e4\u00e4ratud kui SSL on lubatud!\n      webserver_ssl_cert_path: {{ webserver_ssl_cert_path | default('undefined') }}\n      webserver_ssl_key_path: {{ webserver_ssl_key_path | default('undefined') }}\n  when: webserver_ssl_enabled | default(false)\n\n- name: \"Check available disk space\"\n  assert:\n    that:\n      - ansible_mounts | selectattr('mount', 'equalto', '/') | list | first | map(attribute='size_available') | first &gt; 1000000000\n    fail_msg: \"ERROR: Vaja v\u00e4hemalt 1GB vaba ruumi root partitsioonil\"\n\n- name: \"Validate worker processes count\"\n  assert:\n    that:\n      - webserver_worker_processes is number\n      - webserver_worker_processes &gt; 0\n      - webserver_worker_processes &lt;= (ansible_processor_vcpus * 2)\n    fail_msg: |\n      ERROR: Worker processes arv peab olema 1 kuni {{ ansible_processor_vcpus * 2 }}\n      (max 2x CPU core'ide arv)\n      Current value: {{ webserver_worker_processes }}\n</code></pre></p>"},{"location":"ansible_roles/lecture/#susteemi-nouete-kontroll","title":"S\u00fcsteemi n\u00f5uete kontroll","text":"<pre><code>- name: \"Check minimum RAM requirement\"\n  assert:\n    that:\n      - ansible_memtotal_mb &gt;= 512\n    fail_msg: \"ERROR: Vaja v\u00e4hemalt 512MB RAM'i. Hetkel: {{ ansible_memtotal_mb }}MB\"\n\n- name: \"Check if required user exists or can be created\"\n  user:\n    name: \"{{ webserver_user }}\"\n    state: present\n  check_mode: yes\n  register: user_check\n  failed_when: false\n\n- name: \"Create webserver user if doesn't exist\"\n  user:\n    name: \"{{ webserver_user }}\"\n    system: yes\n    shell: /bin/false\n    home: \"/var/lib/{{ webserver_user }}\"\n    createhome: no\n  when: user_check is failed\n</code></pre>"},{"location":"ansible_roles/lecture/#reegel-5-taskide-organiseerimine","title":"Reegel 5: Task'ide organiseerimine","text":"<p><code>tasks/main.yml</code> peaks olema nagu sisukord - selge \u00fclevaade, mis toimub.</p>"},{"location":"ansible_roles/lecture/#hea-struktuur","title":"Hea struktuur:","text":"<pre><code>---\n# tasks/main.yml - sisukord\n- name: \"Validate input parameters (safety first!)\"\n  include_tasks: validate.yml\n\n- name: \"Load OS-specific variables\"  \n  include_vars: \"{{ ansible_os_family }}.yml\"\n\n- name: \"Install packages and dependencies\"\n  include_tasks: install.yml\n\n- name: \"Configure webserver\"\n  include_tasks: configure.yml\n\n- name: \"Setup SSL certificates\"\n  include_tasks: ssl.yml\n  when: webserver_ssl_enabled | default(false)\n\n- name: \"Configure virtual hosts\"\n  include_tasks: vhosts.yml\n  when: webserver_vhosts | length &gt; 0\n\n- name: \"Start and enable services\"\n  include_tasks: service.yml\n\n- name: \"Run post-installation tests\"\n  include_tasks: test.yml\n  when: webserver_run_tests | default(true)\n</code></pre>"},{"location":"ansible_roles/lecture/#miks-see-on-hea","title":"Miks see on hea?","text":"<ol> <li>Selge \u00fclevaade - n\u00e4ete kohe, mis toimub</li> <li>Modulaarne - iga osa eraldi failis</li> <li>Conditional - mittevajaliud osad j\u00e4etakse vahele</li> <li>Testitav - saate osi eraldi k\u00e4ivitada</li> </ol>"},{"location":"ansible_roles/lecture/#taskide-nimetamine","title":"Task'ide nimetamine","text":"<p>Head nimed: <pre><code>- name: \"Install Nginx and required dependencies\"\n- name: \"Generate SSL certificate for {{ webserver_domain }}\"\n- name: \"Configure Nginx virtual host for {{ item.domain }}\"\n- name: \"Restart Nginx service if configuration changed\"\n</code></pre></p> <p>Halvad nimed: <pre><code>- name: \"install\"\n- name: \"config\"\n- name: \"setup stuff\"\n- name: \"do things\"\n</code></pre></p>"},{"location":"ansible_roles/lecture/#dependency-management","title":"Dependency Management","text":"<p>M\u00f5nikord teie role vajab teisi role'e. N\u00e4iteks <code>wordpress</code> role vajab <code>nginx</code>, <code>php</code> ja <code>mysql</code> role'e.</p>"},{"location":"ansible_roles/lecture/#meta-dependencies","title":"Meta dependencies:","text":"<pre><code># meta/main.yml\ndependencies:\n  - role: common\n    vars:\n      common_packages:\n        - curl\n        - wget\n        - unzip\n\n  - role: nginx\n    vars:\n      nginx_modules:\n        - rewrite\n        - ssl\n\n  - role: php\n    vars:\n      php_version: \"8.1\"\n      php_extensions:\n        - mysql\n        - gd\n        - curl\n    when: wordpress_install_php | default(true)\n\n  - role: mysql\n    vars:\n      mysql_databases:\n        - name: \"{{ wordpress_db_name }}\"\n      mysql_users:\n        - name: \"{{ wordpress_db_user }}\"\n          password: \"{{ wordpress_db_password }}\"\n          priv: \"{{ wordpress_db_name }}.*:ALL\"\n    when: wordpress_manage_database | default(true)\n</code></pre> <p>Mis toimub: 1. Kui kutsute <code>wordpress</code> role'i, k\u00e4ivitatakse automaatselt k\u00f5ik dependencies 2. Igale dependency'le saate anda eraldi muutujad 3. Saate dependency'sid v\u00e4lja l\u00fclitada <code>when</code> tingimustega</p>"},{"location":"ansible_roles/lecture/#osa-3-ansible-galaxy","title":"Osa 3: Ansible Galaxy","text":""},{"location":"ansible_roles/lecture/#loeng-3-galaxy-ecosystem-12-min","title":"Loeng 3: Galaxy ecosystem (12 min)","text":"<p>N\u00fc\u00fcd kui oskate role'e luua, \u00f5pime, kuidas kasutada maailma suurimat Ansible role'ide repositooriumi. Miks teha k\u00f5ike ise, kui saate kasutada teiste head t\u00f6\u00f6d?</p>"},{"location":"ansible_roles/lecture/#mis-on-ansible-galaxy","title":"Mis on Ansible Galaxy?","text":"<p>Ansible Galaxy on nagu App Store programmeerijatele:</p> <p>\ud83d\udce6 20,000+ valmis role'i \ud83d\udd0d Kiire otsing ja filtreerimine \u2b50 Reitingud ja arvustused \ud83d\udce4 Jagamine kogukonnaga </p>"},{"location":"ansible_roles/lecture/#praktiline-naide","title":"Praktiline n\u00e4ide","text":"<p>Probleem: Boss tahab Jenkins + MySQL + SSL serveri homme valmis.</p> <p>Ilma Galaxy'ta: 6 p\u00e4eva role'ide kirjutamist Galaxy'ga: 45 minutit role'ide allalaadimist ja konfigureerimist</p>"},{"location":"ansible_roles/lecture/#roleide-allalaadimine","title":"Role'ide allalaadimine","text":""},{"location":"ansible_roles/lecture/#otsimine","title":"Otsimine","text":"<pre><code># Veebi kaudu (algajatele)\nfirefox https://galaxy.ansible.com/\n\n# K\u00e4surealt (kiire)\nansible-galaxy search nginx\nansible-galaxy search --author geerlingguy\n</code></pre>"},{"location":"ansible_roles/lecture/#installimine","title":"Installimine","text":"<pre><code># \u00dcks role\nansible-galaxy install geerlingguy.nginx\n\n# Konkreetne versioon (production!)\nansible-galaxy install geerlingguy.nginx,2.8.0\n\n# GitHubist otse\nansible-galaxy install git+https://github.com/geerlingguy/ansible-role-nginx.git\n</code></pre>"},{"location":"ansible_roles/lecture/#requirements-fail-professional-way","title":"Requirements fail (professional way)","text":"<pre><code># requirements.yml\n---\n- name: geerlingguy.nginx\n  version: \"2.8.0\"        # Lukusta versioon!\n\n- name: geerlingguy.mysql\n  version: \"4.3.0\"\n\n- name: geerlingguy.php\n  version: \"4.9.0\"\n\n# Custom GitHubi role\n- src: https://github.com/mycompany/custom-role.git\n  scm: git\n  version: main\n  name: mycompany.custom\n</code></pre> <pre><code># Installige k\u00f5ik korraga\nansible-galaxy install -r requirements.yml\n</code></pre>"},{"location":"ansible_roles/lecture/#parimad-galaxy-roleid","title":"Parimad Galaxy role'id","text":"<p>Jeff Geerling on Ansible kogukonna kuningas - tema role'id on alati head:</p> <pre><code># Top soovitused\n- name: geerlingguy.apache     # Apache veebiserver\n- name: geerlingguy.nginx      # Nginx veebiserver\n- name: geerlingguy.mysql      # MySQL database\n- name: geerlingguy.php        # PHP runtime  \n- name: geerlingguy.docker     # Docker engine\n- name: geerlingguy.certbot    # Let's Encrypt SSL\n- name: geerlingguy.firewall   # UFW firewall\n- name: geerlingguy.jenkins    # Jenkins CI/CD\n</code></pre>"},{"location":"ansible_roles/lecture/#taielik-lamp-stack-naide","title":"T\u00e4ielik LAMP stack n\u00e4ide","text":"<pre><code># site.yml - 10 minutiga valmis!\n- name: \"LAMP stack Galaxy role'idega\"\n  hosts: webservers\n  become: yes\n\n  vars:\n    # Apache konfiguratsioon\n    apache_vhosts:\n      - servername: \"mysite.com\"\n        documentroot: \"/var/www/mysite\"\n\n    # MySQL andmebaas\n    mysql_databases:\n      - name: \"mysite_db\"\n    mysql_users:\n      - name: \"mysite_user\"\n        password: \"{{ vault_mysql_password }}\"\n        priv: \"mysite_db.*:ALL\"\n\n    # PHP seaded\n    php_packages:\n      - php8.1\n      - php8.1-mysql\n      - php8.1-curl\n\n  roles:\n    - geerlingguy.apache\n    - geerlingguy.mysql\n    - geerlingguy.php\n    - geerlingguy.certbot    # Automaatne HTTPS!\n</code></pre>"},{"location":"ansible_roles/lecture/#galaxy-best-practices","title":"Galaxy best practices","text":""},{"location":"ansible_roles/lecture/#1-versioonide-lukustamine","title":"1. Versioonide lukustamine","text":"<pre><code># Production'is ALATI fikseeritud versioonid\n- name: geerlingguy.nginx\n  version: \"3.1.4\"          # T\u00e4pne versioon\n- name: geerlingguy.mysql  \n  version: \"&gt;=4.0.0,&lt;5.0.0\" # Versioonivahemik\n</code></pre>"},{"location":"ansible_roles/lecture/#2-roleide-uuendamine","title":"2. Role'ide uuendamine","text":"<pre><code># Kontrollige, mis on installitud\nansible-galaxy list\n\n# Uuendage k\u00f5iki\nansible-galaxy install -r requirements.yml --force\n\n# Uuendage ainult \u00fchte\nansible-galaxy install geerlingguy.nginx --force\n</code></pre>"},{"location":"ansible_roles/lecture/#3-roleide-kasutamine-koos","title":"3. Role'ide kasutamine koos","text":"<pre><code># Kombineerige Galaxy ja oma role'e\n- name: \"Hybrid deployment\"\n  hosts: webservers\n  roles:\n    - geerlingguy.nginx      # Galaxy'st\n    - geerlingguy.certbot    # Galaxy'st  \n    - my-custom-app          # Oma role\n    - company.monitoring     # Firma role\n</code></pre>"},{"location":"ansible_roles/lecture/#oma-roleide-publitseerimine","title":"Oma role'ide publitseerimine","text":"<p>Kui teie role on valmis, saate selle Galaxy'sse panna:</p> <ol> <li>GitHub'i repo loomine</li> <li>Galaxy metadata lisamine (<code>meta/main.yml</code>)</li> <li>Role'i importimine Galaxy'sse</li> <li>Automaatne s\u00fcnkroniseerimine seadistamine</li> </ol>"},{"location":"ansible_roles/lecture/#osa-4-puppet-vs-ansible","title":"Osa 4: Puppet vs Ansible","text":""},{"location":"ansible_roles/lecture/#loeng-4-configuration-management-vordlus-20-min","title":"Loeng 4: Configuration Management v\u00f5rdlus (20 min)","text":"<p>Configuration Management t\u00f6\u00f6riistade maailmas on kaks suurt m\u00e4ngijat. Peate teadma m\u00f5lemat, et osata valida \u00f5iget t\u00f6\u00f6riista \u00f5igeks t\u00f6\u00f6ks.</p>"},{"location":"ansible_roles/lecture/#miks-vorrelda-puppetiga","title":"Miks v\u00f5rrelda Puppet'iga?","text":"<p>Ansible - mida me \u00f5pime, populaarne DevOps meeskondades Puppet - enterprise'i standard, suur ettev\u00f5tetes</p> <p>Analoogia: Ansible on nagu Tesla (uus, innovaatiline), Puppet on nagu Mercedes (traditsiooniliselt usaldusv\u00e4\u00e4re, enterprise fookus).</p>"},{"location":"ansible_roles/lecture/#fundamentaalsed-erinevused","title":"Fundamentaalsed erinevused","text":""},{"location":"ansible_roles/lecture/#1-arhitektuur","title":"1. Arhitektuur","text":"<p>Ansible (Agentless - SSH p\u00f5hine): <pre><code>Teie arvuti \u2192 SSH \u2192 Serverid\n     \u2193\n   Te kontrollite\n   Push mudel\n</code></pre></p> <p>Puppet (Agent-based - Pull mudel): <pre><code>Puppet Master \u2190 Agents k\u00fcsivad ise (iga 30 min)\n     \u2193              \u2193\n  Manifest'id    Puppet Agent'id\n</code></pre></p> <p>Praktiline erinevus: - Ansible: Te k\u00e4ivitate k\u00e4su \u2192 asjad juhtuvad kohe - Puppet: Te muudate konfiguratsiooni \u2192 serverid k\u00fcsivad hiljem muudatusi</p>"},{"location":"ansible_roles/lecture/#2-keele-erinevus","title":"2. Keele erinevus","text":"<p>Ansible - YAML (tutav): <pre><code>- name: \"Install and start Apache\"\n  package:\n    name: apache2\n    state: present\n\n- name: \"Start Apache service\"\n  service:\n    name: apache2\n    state: started\n    enabled: yes\n</code></pre></p> <p>Puppet - DSL (uus keel): <pre><code>package { 'apache2':\n  ensure =&gt; installed,\n}\n\nservice { 'apache2':\n  ensure  =&gt; running,\n  enable  =&gt; true,\n  require =&gt; Package['apache2'],\n}\n</code></pre></p> <p>\u00d5ppimisk\u00f5ver: - Ansible: Kui oskate YAML'i, oskate Ansible'i - Puppet: Peate \u00f5ppima uut keelt</p>"},{"location":"ansible_roles/lecture/#praktiline-vordlus-sama-ulesanne-molemas","title":"Praktiline v\u00f5rdlus: Sama \u00fclesanne m\u00f5lemas","text":"<p>\u00dclesanne: Nginx + SSL + automaatne k\u00e4ivitamine</p>"},{"location":"ansible_roles/lecture/#ansible-lahendus","title":"Ansible lahendus:","text":"<pre><code>- name: \"Nginx with SSL setup\"\n  hosts: webservers\n  become: yes\n  tasks:\n    - name: \"Install packages\"\n      package:\n        name: ['nginx', 'ssl-cert']\n        state: present\n\n    - name: \"Generate SSL certificate\"\n      command: &gt;\n        openssl req -new -x509 -days 365 -nodes\n        -out /etc/ssl/certs/server.crt\n        -keyout /etc/ssl/private/server.key\n        -subj \"/C=EE/ST=Harju/L=Tallinn/O=Company/CN={{ ansible_fqdn }}\"\n      args:\n        creates: /etc/ssl/certs/server.crt\n\n    - name: \"Configure Nginx\"\n      template:\n        src: nginx.conf.j2\n        dest: /etc/nginx/nginx.conf\n      notify: reload nginx\n\n    - name: \"Start Nginx\"\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre>"},{"location":"ansible_roles/lecture/#puppet-lahendus","title":"Puppet lahendus:","text":"<pre><code>class webserver (\n  String $ssl_cert_path = '/etc/ssl/certs/server.crt',\n  String $ssl_key_path = '/etc/ssl/private/server.key',\n) {\n\n  package { ['nginx', 'ssl-cert']:\n    ensure =&gt; installed,\n  }\n\n  exec { 'generate-ssl-cert':\n    command =&gt; \"openssl req -new -x509 -days 365 -nodes \\\n                -out ${ssl_cert_path} \\\n                -keyout ${ssl_key_path} \\\n                -subj '/C=EE/ST=Harju/L=Tallinn/O=Company/CN=${facts['fqdn']}'\",\n    creates =&gt; $ssl_cert_path,\n    path    =&gt; ['/usr/bin', '/bin'],\n    require =&gt; Package['nginx'],\n  }\n\n  file { '/etc/nginx/nginx.conf':\n    ensure  =&gt; present,\n    content =&gt; template('webserver/nginx.conf.erb'),\n    require =&gt; Package['nginx'],\n    notify  =&gt; Service['nginx'],\n  }\n\n  service { 'nginx':\n    ensure  =&gt; running,\n    enable  =&gt; true,\n    require =&gt; File['/etc/nginx/nginx.conf'],\n  }\n}\n</code></pre> <p>Mis erinevust m\u00e4rkate? - Ansible: k\u00e4sk-k\u00e4sult, loogiline j\u00e4rjekord - Puppet: declarative, Puppet otsustab j\u00e4rjekorra</p>"},{"location":"ansible_roles/lecture/#millal-kasutada-mida","title":"Millal kasutada mida?","text":""},{"location":"ansible_roles/lecture/#ansible-on-parem-kui","title":"Ansible on parem kui:","text":"<p>\u2705 V\u00e4iksemad keskkonnad (&lt; 500 serverit)</p> <p>SSH connection'id ei skaleeeru h\u00e4sti suurte arvudega</p> <p>\u2705 DevOps meeskonnad </p> <p>YAML on tuttav, hea CI/CD integratsioon</p> <p>\u2705 Kiire arendus ja deployment</p> <p>Ei vaja agent'ide seadistamist, kohe valmis</p> <p>\u2705 Multi-cloud keskkonnad</p> <p>SSH t\u00f6\u00f6tab kohalikult ja erinevates keskkondades</p> <p>\u2705 Container orchestration</p> <p>Hea integratsioon Docker/Kubernetes'iga</p> <p>N\u00e4ited: - Startup'i web application deployment - Development environmentide seadistamine - CI/CD pipeline automation - Cloud infrastructure provisioning</p>"},{"location":"ansible_roles/lecture/#puppet-on-parem-kui","title":"Puppet on parem kui:","text":"<p>\u2705 Suuremad keskkonnad (1000+ serverit)</p> <p>Agent'id t\u00f6\u00f6tavad paralleelselt, Master koordineerib</p> <p>\u2705 Enterprise compliance n\u00f5uded</p> <p>24/7 monitoring, automatic configuration drift detection</p> <p>\u2705 Traditional IT meeskonnad</p> <p>Rohkem infrastructure-focused, v\u00e4hem development</p> <p>\u2705 Long-term infrastructure management</p> <p>Agent'id j\u00e4lgivad ja parandavad konfiguratsiooni pidevalt</p> <p>\u2705 Regulatory compliance</p> <p>SOX, HIPAA, PCI DSS - built-in auditing ja reporting</p> <p>N\u00e4ited: - Enterprise data center management - Financial services (banking, insurance) - Healthcare systems (HIPAA compliance) - Government agencies - Large corporate Windows AD environments</p>"},{"location":"ansible_roles/lecture/#skaleeritavuse-vordlus","title":"Skaleeritavuse v\u00f5rdlus","text":""},{"location":"ansible_roles/lecture/#ansible-limitatsioonid","title":"Ansible limitatsioonid:","text":"<pre><code># 1000 serveriga SSH v\u00f5ib olla aeglane\nansible-playbook -f 50 playbook.yml  # Max 50 paralleelset\n</code></pre> <p>Probleemid suurtes keskkondades: - SSH connection pool t\u00e4is - V\u00f5rgu ribalaius - Control machine'i CPU/memory</p>"},{"location":"ansible_roles/lecture/#puppet-eelised-suurtes-keskkondades","title":"Puppet eelised suurtes keskkondades:","text":"<pre><code># 10,000+ serverit ei ole probleem\n# Iga agent pull'ib iseseisvalt\n# Master delegeerib t\u00f6\u00f6d\n</code></pre> <p>Miks see t\u00f6\u00f6tab paremini: - Hajutatud arhitektuur - Agents t\u00f6\u00f6tavad paralleelselt - Master optimeerib ressursse</p>"},{"location":"ansible_roles/lecture/#infrastructure-drift-ja-compliance","title":"Infrastructure Drift ja Compliance","text":""},{"location":"ansible_roles/lecture/#ansible-fire-and-forget","title":"Ansible - \"Fire and forget\":","text":"<pre><code>1. K\u00e4ivitate playbook'i \u2192 serverid on \u00f5iges olekus\n2. 2 n\u00e4dalat hiljem \u2192 keegi muudab midagi k\u00e4sitsi  \n3. Ansible ei tea sellest midagi\n4. J\u00e4rgmine deployment \u2192 parandab tagasi\n</code></pre> <p>Plussid: Lihtne, ei vaja agente Miinused: Ei j\u00e4lgi drift'i, v\u00f5imalikud security augud</p>"},{"location":"ansible_roles/lecture/#puppet-pidev-jalgimine","title":"Puppet - Pidev j\u00e4lgimine:","text":"<pre><code>1. Agent k\u00e4ib iga 30 minuti tagant\n2. Kontrollib konfiguratsiooni\n3. Parandab automaatselt drift'i\n4. Reporteerib k\u00f5ik muudatused PuppetDB'sse\n5. Saate alert'e kui keegi konfiguratsiooni muudab\n</code></pre> <p>Plussid: Pidev compliance, drift detection Miinused: Keerulisem setup, vajab agente</p>"},{"location":"ansible_roles/lecture/#decision-matrix","title":"Decision Matrix","text":"Kriteerium V\u00e4ike env Suur env Dev team Ops team Startup Enterprise Ansible \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50 Puppet \u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50"},{"location":"ansible_roles/lecture/#enterprise-features-vordlus","title":"Enterprise features v\u00f5rdlus","text":"Feature Ansible Puppet Web UI AWX/Tower (complex setup) Built-in Puppet Console Reporting Limited, manual Comprehensive PuppetDB Role-based access Tower/AWX only Built-in RBAC Compliance auditing Manual scripts Automatic reporting Change tracking Git history Built-in change tracking Node classification Inventory groups External Node Classifier"},{"location":"ansible_roles/lecture/#hybrid-lahenemine","title":"Hybrid l\u00e4henemine","text":"<p>Paljud organisatsioonid kasutavad m\u00f5lemat:</p> <pre><code># Ansible infrastructure provisioning ja deployment\n- name: \"Initial server setup\"\n  hosts: new_servers\n  tasks:\n    - name: \"Create local environment\"\n      local_action: ...\n\n    - name: \"Install Puppet agent\"\n      package: \n        name: puppet-agent \n        state: present\n\n# Puppet ongoing configuration management\n# Agents pull konfiguratsiooni iga 30 minutit\n# Hoiab compliance ja drift prevention\n</code></pre>"},{"location":"ansible_roles/lecture/#minu-soovitus","title":"Minu soovitus","text":"<p>Algajatele ja v\u00e4iksematele projektidele: Alustage Ansible'iga! - Lihtsam \u00f5ppida - Kiirem alustada - Hea CI/CD integratsioon</p> <p>Kui vajadused kasvavad: - 1000+ serverit - Strict compliance n\u00f5uded - 24/7 monitoring vajadus - Enterprise audit requirements</p> <p>Siis kaaluge Puppet'i!</p>"},{"location":"ansible_roles/lecture/#kokkuvote","title":"Kokkuv\u00f5te","text":"<p>Role'id lahendavad suured probleemid:</p> <p>\u2705 Korduvkasutatavus - sama role mitmes projektis \u2705 Testitavus - iga role eraldi testida \u2705 Loetavus - selge struktuur \u2705 Meeskonnat\u00f6\u00f6 - lihtne jagada \u2705 Hooldatavus - muudatused isoleeritud  </p> <p>M\u00f5lemad t\u00f6\u00f6riistad on head, aga erinevatel juhtudel:</p> <p>Ansible = Tesla - innovaatiline, kiire, sobib modernsele DevOps'ile Puppet = Mercedes - traditsiooniliselt usaldusv\u00e4\u00e4re, enterprise-ready</p> <p>J\u00e4rgmises osas: Praktiline lab - loome oma nginx role'i!</p>"},{"location":"assignments/","title":"\ud83c\udfaf \u00dclesanded - Infrastructure Automation","text":"<p>Tere tulemast infrastruktuuri automatiseerimise kursuse \u00fclesannete lehele! Siin leiad k\u00f5ik praktilised \u00fclesanded DevOps t\u00f6\u00f6riistade kohta.</p>"},{"location":"assignments/#kursuse-ulesehitus","title":"\ud83d\udcda Kursuse \u00fclesehitus","text":"<p>Kursus koosneb 6 peamisest moodulist:</p> <ol> <li>Git &amp; Versioonihaldus - Alus k\u00f5igele</li> <li>Docker &amp; Konteineriseerimine - Rakenduste pakkimine</li> <li>Ansible &amp; Configuration Management - Infrastruktuuri automatiseerimine</li> <li>CI/CD &amp; GitHub Actions - Pidev integratsioon ja tarnimine</li> <li>Kubernetes - Konteinerite orkestreerimine</li> <li>Terraform - Infrastructure as Code</li> </ol>"},{"location":"assignments/#aktiivsed-ulesanded","title":"\ud83d\ude80 Aktiivsed \u00fclesanded","text":""},{"location":"assignments/#moodul-1-git-versioonihaldus","title":"\ud83d\udce6 Moodul 1: Git &amp; Versioonihaldus","text":"<p>Rain Pickles Website - Versioonihaldus veebilehe jaoks - Branching, merging, konfliktide lahendamine - T\u00e4htaeg: N\u00e4dal 9</p>"},{"location":"assignments/#moodul-2-docker","title":"\ud83d\udc33 Moodul 2: Docker","text":"<p>Multi-Container Application - Dockerize veebirakendus - Docker Compose kasutamine - T\u00e4htaeg: N\u00e4dal 12</p>"},{"location":"assignments/#moodul-3-ansible","title":"\u2699\ufe0f Moodul 3: Ansible","text":"<p>NGINX + SSL + PostgreSQL - Automatiseeri LAMP stack - SSL sertifikaadid, andmebaas - T\u00e4htaeg: N\u00e4dal 15</p>"},{"location":"assignments/#moodul-4-cicd","title":"\ud83d\udd04 Moodul 4: CI/CD","text":"<p>GitHub Actions Pipeline - Automated testing - Docker build &amp; push - T\u00e4htaeg: N\u00e4dal 19</p>"},{"location":"assignments/#moodul-5-kubernetes","title":"\u2638\ufe0f Moodul 5: Kubernetes","text":"<p>3-Tier App Deploy - Deploy frontend, backend, database - Services, ConfigMaps, Secrets - T\u00e4htaeg: N\u00e4dal 21</p>"},{"location":"assignments/#moodul-6-terraform","title":"\ud83c\udfd7\ufe0f Moodul 6: Terraform","text":"<p>AWS Infrastructure - VPC, EC2, RDS provisioning - State management - T\u00e4htaeg: N\u00e4dal 23</p>"},{"location":"assignments/#hindamissusteem","title":"\ud83d\udcca Hindamiss\u00fcsteem","text":""},{"location":"assignments/#ulesannete-kaalud","title":"\u00dclesannete kaalud","text":"<ul> <li>Git: 10%</li> <li>Docker: 15%</li> <li>Ansible: 20%</li> <li>CI/CD: 15%</li> <li>Kubernetes: 20%</li> <li>Terraform: 20%</li> </ul>"},{"location":"assignments/#hindamiskriteeriumid","title":"Hindamiskriteeriumid","text":"<ul> <li>Funktsionaalsus: Kas lahendus t\u00f6\u00f6tab?</li> <li>Best Practices: Kas j\u00e4rgitud parimaid praktikaid?</li> <li>Dokumentatsioon: README, kommentaarid</li> <li>Automatiseerimine: Idempotency, error handling</li> </ul>"},{"location":"assignments/#kodulabori-seadistamine","title":"\ud83c\udfe0 Kodulabori seadistamine","text":""},{"location":"assignments/#option-1-vagrant-virtualbox","title":"Option 1: Vagrant + VirtualBox","text":"<pre><code>vagrant init ubuntu/focal64\nvagrant up\nvagrant ssh\n</code></pre>"},{"location":"assignments/#option-2-docker-desktop","title":"Option 2: Docker Desktop","text":"<ul> <li>Windows/Mac: Docker Desktop</li> <li>Linux: Docker Engine + Docker Compose</li> </ul>"},{"location":"assignments/#option-3-cloud-tasuta","title":"Option 3: Cloud (tasuta)","text":"<ul> <li>AWS Free Tier (12 kuud)</li> <li>Azure Student Account</li> <li>Google Cloud Free Credits</li> </ul>"},{"location":"assignments/#vajalikud-tooriistad","title":"\ud83d\udee0\ufe0f Vajalikud t\u00f6\u00f6riistad","text":"<pre><code># Paigalda k\u00f5ik korraga (Ubuntu/Debian)\nsudo apt update\nsudo apt install -y git docker.io ansible terraform kubectl\n\n# Mac (Homebrew)\nbrew install git docker ansible terraform kubectl\n</code></pre>"},{"location":"assignments/#quick-links","title":"\u26a1 Quick Links","text":"<ul> <li>\ud83c\udf93 GitHub Classroom - Automatiseeritud \u00fclesanded</li> <li>\ud83c\udfc6 Leaderboard - Tulemuste tabel</li> <li>\ud83d\udcad Discussions - K\u00fcsi abi</li> <li>\ud83d\udcd6 Materjalid - Lisalugemine</li> </ul>"},{"location":"assignments/#abi-ja-tugi","title":"\ud83c\udd98 Abi ja tugi","text":""},{"location":"assignments/#kui-jaad-hatta","title":"Kui j\u00e4\u00e4d h\u00e4tta:","text":"<ol> <li>Vaata lecture materjale - Iga mooduli <code>lecture.md</code></li> <li>Proovi lab \u00fclesandeid - Iga mooduli <code>lab.md</code></li> <li>Vaata n\u00e4idiskoode - <code>teacher_repo/</code> kaustas</li> <li>K\u00fcsi abi - GitHub Discussions v\u00f5i praktikumis</li> </ol>"},{"location":"assignments/#sage-vead","title":"Sage vead:","text":"<ul> <li>Permission denied \u2192 Kasuta <code>sudo</code> v\u00f5i kontrolli \u00f5igusi</li> <li>Connection refused \u2192 Kontrolli firewall/ports</li> <li>Module not found \u2192 Paigalda puuduvad s\u00f5ltuvused</li> <li>Timeout \u2192 Suurenda timeout v\u00e4\u00e4rtusi</li> </ul>"},{"location":"assignments/#gamification-achievements","title":"\ud83c\udfae Gamification &amp; Achievements","text":"<p>Teeni badge'e: - \ud83d\ude80 Speed Demon - Esita \u00fclesanne 24h jooksul - \ud83d\udd12 Security First - Implementeeri SSL/TLS \u00f5igesti - \ud83d\udce6 Container Master - Docker multi-stage build &lt; 100MB - \ud83d\udd04 CI/CD Hero - 0 failed pipeline runs - \u2638\ufe0f K8s Navigator - Deploy ilma kubectl edit'ita - \ud83c\udfd7\ufe0f Terraform Architect - 0 drift detected</p> <p>Pro tip: Alusta varakult, testi lokaalses keskkonnas, automatiseeri k\u00f5ik mis v\u00f5imalik!</p> <p>Remember: It's not about doing it perfectly the first time, it's about iterating and improving!</p>"},{"location":"assignments/classroom/","title":"\ud83c\udf93 GitHub Classroom","text":""},{"location":"assignments/classroom/#automatiseeritud-ulesanded-infrastruktuuri-halduseks","title":"Automatiseeritud \u00fclesanded infrastruktuuri halduseks","text":"<p>GitHub Classroom v\u00f5imaldab automatiseerida DevOps \u00fclesannete jagamist ja hindamist. Iga \u00fclesanne on oma repositoorium koos automaatsete testidega.</p>"},{"location":"assignments/classroom/#aktiivsed-ulesanded","title":"\ud83d\udcdd Aktiivsed \u00fclesanded","text":""},{"location":"assignments/classroom/#nadal-9-git-versioonihaldus","title":"N\u00e4dal 9: Git &amp; Versioonihaldus","text":"<p>Eesm\u00e4rk: Rain Pickles veebilehe versioonihaldus</p> <p>Oskused:  - Git branching strategies - Merge conflicts lahendamine - Git workflow</p> <p>T\u00e4htaeg: 1 n\u00e4dal</p>"},{"location":"assignments/classroom/#nadal-11-12-docker-fundamentals","title":"N\u00e4dal 11-12: Docker Fundamentals","text":"<p>Eesm\u00e4rk: Konteineriseeri veebirakendus</p> <p>Oskused: - Dockerfile loomine - Multi-stage builds - Docker Compose</p> <p>T\u00e4htaeg: 2 n\u00e4dalat</p>"},{"location":"assignments/classroom/#nadal-13-15-ansible-automation","title":"N\u00e4dal 13-15: Ansible Automation","text":"<p>Eesm\u00e4rk: Automatiseeri LAMP stack deploy</p> <p>Oskused: - Ansible playbooks - Roles ja Galaxy - Inventory management</p> <p>T\u00e4htaeg: 3 n\u00e4dalat</p>"},{"location":"assignments/classroom/#nadal-19-cicd-pipeline","title":"N\u00e4dal 19: CI/CD Pipeline","text":"<p>Eesm\u00e4rk: GitHub Actions CI/CD pipeline</p> <p>Oskused: - Automated testing - Docker image build &amp; push - Deployment automation</p> <p>T\u00e4htaeg: 1 n\u00e4dal</p>"},{"location":"assignments/classroom/#nadal-21-kubernetes-deploy","title":"N\u00e4dal 21: Kubernetes Deploy","text":"<p>Eesm\u00e4rk: Deploy 3-tier app Kubernetes'isse</p> <p>Oskused: - K8s manifests (Deployment, Service, PVC) - ConfigMaps &amp; Secrets - Ingress configuration</p> <p>T\u00e4htaeg: 1 n\u00e4dal</p>"},{"location":"assignments/classroom/#nadal-23-terraform-infrastructure","title":"N\u00e4dal 23: Terraform Infrastructure","text":"<p>Eesm\u00e4rk: Infrastructure as Code</p> <p>Oskused: - Terraform providers - Resource management - State management</p> <p>T\u00e4htaeg: 1 n\u00e4dal</p>"},{"location":"assignments/classroom/#toovoog","title":"\ud83d\udd04 T\u00f6\u00f6voog","text":"<pre><code>graph LR\n    A[Kliki Start Assignment] --&gt; B[GitHub loob sulle repo]\n    B --&gt; C[Clone repo + Vagrant up]\n    C --&gt; D[Lahenda \u00fclesanne]\n    D --&gt; E[Push lahendus]\n    E --&gt; F[GitHub Actions testid]\n    F --&gt; G{Testid l\u00e4bitud?}\n    G --&gt;|Jah| H[\u2705 Valmis]\n    G --&gt;|Ei| D</code></pre>"},{"location":"assignments/classroom/#hindamine","title":"\ud83c\udfaf Hindamine","text":"<p>Iga \u00fclesanne testib: - Funktsionaalsus: 60% - Kas infrastruktuur t\u00f6\u00f6tab? - Best practices: 20% - Kas j\u00e4rgitud parimaid praktikaid? - Dokumentatsioon: 10% - README, kommentaarid - Idempotency: 10% - Kas korduvk\u00e4ivitus on turvaline?</p>"},{"location":"assignments/classroom/#kodulabor","title":"\ud83c\udfe0 Kodulabor","text":"<p>Soovituslik setup: - Vagrant + VirtualBox - V\u00f5i Docker Desktop - V\u00f5i cloud (AWS Free Tier, Azure Student)</p>"},{"location":"assignments/classroom/#kkk","title":"\u2753 KKK","text":"Kas ma pean kasutama Vagrantit? <p>Ei, v\u00f5id kasutada Docker'it, cloud'i v\u00f5i isegi f\u00fc\u00fcsilisi masinaid.</p> Kuidas testida Ansible playbooke? <p>Kasuta <code>ansible-playbook --check</code> dry-run jaoks ja Molecule testimiseks.</p> Kas Kubernetes on kohustuslik? <p>Minikube v\u00f5i K3s on piisav. Pole vaja t\u00e4is klastreid.</p>"},{"location":"assignments/leaderboard/","title":"\ud83c\udfc6 Leaderboard","text":"\ud83e\udd47 Top Performers <p>Automaatselt uueneb iga 5 minuti tagant</p> Laadin andmeid... Koht Nimi Punkte \u00dclesandeid Badges"},{"location":"assignments/leaderboard/#kuidas-punkte-teenida","title":"\ud83c\udfaf Kuidas punkte teenida?","text":"Tegevus Punkte \u00dclesande lahendamine 50-100 K\u00f5ik testid rohelised +20 Esimene lahendus klassis +30 Koodi kvaliteet (linting) +10 Dokumentatsioon +10 Peer review +5"},{"location":"assignments/leaderboard/#badges","title":"\ud83c\udfc5 Badges","text":"<ul> <li>\ud83d\ude80 Speed Demon - Lahendas \u00fclesande &lt; 1 tunni jooksul</li> <li>\u2728 Perfect Score - 100% testid l\u00e4bitud esimesel katsel</li> <li>\ud83d\udd25 Streak - 5 \u00fclesannet j\u00e4rjest \u00f5igel ajal</li> <li>\ud83d\udcda Documenter - Suurep\u00e4rane dokumentatsioon</li> <li>\ud83c\udfaf First Try - K\u00f5ik testid l\u00e4bitud esimesel pushil</li> <li>\ud83d\udca1 Helper - Aitas teisi Discussions'is</li> <li>\ud83d\udc1b Bug Hunter - Leidis vea \u00fclesandes</li> </ul>"},{"location":"assignments/leaderboard/#statistika","title":"\ud83d\udcca Statistika","text":""},{"location":"ci_cd_advanced/homework/","title":"N\u00e4dal 25: Kodut\u00f6\u00f6 - Projekti L\u00f5petamine","text":"<p>ITS-24 DevOps Automatiseerimine | 1 tund</p>"},{"location":"ci_cd_advanced/homework/#kodutoo-eesmark","title":"\ud83c\udfaf Kodut\u00f6\u00f6 eesm\u00e4rk","text":"<p>L\u00f5peta oma automatiseerimise projekt ja dokumenteeri see.</p>"},{"location":"ci_cd_advanced/homework/#ulesanded","title":"\ud83d\udccb \u00dclesanded","text":""},{"location":"ci_cd_advanced/homework/#1-projekti-dokumenteerimine-30-min","title":"1. Projekti dokumenteerimine (30 min)","text":"<p>Loo README.md fail oma projekti jaoks:</p> <pre><code># Minu Automatiseerimise Projekt\n\n## Kirjeldus\n[Kirjelda oma projekti - mida sa tegid?]\n\n## Tehnoloogiad\n- [ ] Git\n- [ ] Docker\n- [ ] Ansible\n- [ ] Terraform\n- [ ] CI/CD\n\n## Kuidas kasutada\n[Lisa lihtsad juhendid]\n\n## Tulemused\n[Kirjelda, mida sa \u00f5ppisid]\n</code></pre>"},{"location":"ci_cd_advanced/homework/#2-github-repository-15-min","title":"2. GitHub repository (15 min)","text":"<p>Loo GitHub repository: <pre><code># 1. Loo uus repository GitHubis\n# 2. Push'i oma kood\ngit remote add origin https://github.com/teie-kasutajanimi/projekti-nimi.git\ngit push -u origin main\n\n# 3. Lisa README.md fail\n# 4. Lisa .gitignore fail\n</code></pre></p>"},{"location":"ci_cd_advanced/homework/#3-projekti-esitlus-15-min","title":"3. Projekti esitlus (15 min)","text":"<p>Valmista ette 2-3 minutiline esitlus: - Mida sa tegid? - Millised tehnoloogiad kasutasid? - Mida sa \u00f5ppisid?</p>"},{"location":"ci_cd_advanced/homework/#jargmised-sammud","title":"\ud83d\ude80 J\u00e4rgmised sammud","text":"<ol> <li>J\u00e4tka \u00f5ppimist - proovi uusi tehnoloogiaid</li> <li>Ehita projekte - harjuta oskusi</li> <li>Liitu kogukondadega - \u00f5pi teistelt</li> </ol> <p>\ud83c\udf89 Palju \u00f5nne! Oled n\u00fc\u00fcd valmis automatiseerimise projektideks!</p>"},{"location":"ci_cd_advanced/lab/","title":"CI/CD Advanced Lab: T\u00e4ielik Automatiseerimine","text":"<p>ITS-24 DevOps Automatiseerimine | 3 tundi praktiline t\u00f6\u00f6</p>"},{"location":"ci_cd_advanced/lab/#samm-1-labi-eesmark","title":"\ud83c\udfaf Samm 1: Lab'i eesm\u00e4rk","text":"<p>T\u00e4na teeme L\u00d5PPPROJEKTI! Kasutame K\u00d5IKI oskusi, mida \u00f5ppisime:</p> <ul> <li>Git (N\u00e4dal 9) \u2192 Version control ja collaboration</li> <li>Ansible (N\u00e4dal 11-15) \u2192 Server configuration</li> <li>Docker (N\u00e4dal 19-21) \u2192 Containerization</li> <li>Terraform (N\u00e4dal 23) \u2192 Infrastructure as Code</li> <li>CI/CD (N\u00e4dal 25) \u2192 Automated deployment</li> <li>Monitoring \u2192 Production visibility</li> </ul>"},{"location":"ci_cd_advanced/lab/#projekt-techshop-e-commerce-automatiseerimine","title":"\ud83c\udfe2 PROJEKT: \"TechShop\" E-commerce Automatiseerimine","text":"<p>Klient: V\u00e4ike e-commerce startup \"TechShop\"</p> <p>Probleem:  - K\u00e4sitsi deployment (2-3 tundi) - Tihti vigu (30% failure rate) - Aeglane rollback (1 tund) - Arendajad stressis</p> <p>Lahendus: T\u00e4ielik automatiseerimine k\u00f5igi oskustega!</p>"},{"location":"ci_cd_advanced/lab/#vajalikud-tooriistad","title":"\ud83d\udee0\ufe0f Vajalikud t\u00f6\u00f6riistad","text":"<p>Kontrollige, et teil on: - Git - Docker - Python 3.9+ - Ansible - Terraform - GitLab konto (tasuta) - VS Code</p>"},{"location":"ci_cd_advanced/lab/#samm-2-infrastructure-as-code-terraform-30-min","title":"\ud83d\ude80 Samm 2: Infrastructure as Code (Terraform) - 30 min","text":""},{"location":"ci_cd_advanced/lab/#21-loo-terraform-projekt","title":"2.1: Loo Terraform projekt","text":"<pre><code># 1. Loo projekt struktuur\nmkdir techshop-automation\ncd techshop-automation\n\n# 2. Loo Terraform kaust\nmkdir terraform\ncd terraform\n\n# 3. Loo Terraform failid\ntouch main.tf\ntouch variables.tf\ntouch outputs.tf\ntouch terraform.tfvars\n</code></pre>"},{"location":"ci_cd_advanced/lab/#22-loo-infrastruktuur","title":"2.2: Loo infrastruktuur","text":"<p><code>variables.tf</code>: <pre><code>variable \"project_name\" {\n  description = \"Project name\"\n  type        = string\n  default     = \"techshop\"\n}\n\nvariable \"environment\" {\n  description = \"Environment name\"\n  type        = string\n  default     = \"production\"\n}\n\nvariable \"instance_type\" {\n  description = \"Local instance type\"\n  type        = string\n  default     = \"local\"\n}\n</code></pre></p> <p><code>main.tf</code>: <pre><code>terraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n  }\n}\n\n# Local infrastructure setup\nresource \"local_file\" \"project_config\" {\n  content  = \"Project: ${var.project_name}\\nEnvironment: ${var.environment}\\nInstance Type: ${var.instance_type}\"\n  filename = \"${path.module}/config.txt\"\n}\n\nresource \"local_directory\" \"app_directory\" {\n  path = \"${path.module}/app\"\n}\n\nresource \"local_file\" \"docker_compose\" {\n  content = templatefile(\"${path.module}/docker-compose.yml.tpl\", {\n    project_name = var.project_name\n    environment  = var.environment\n  })\n  filename = \"${path.module}/docker-compose.yml\"\n}\n\nresource \"local_file\" \"nginx_config\" {\n  content = templatefile(\"${path.module}/nginx.conf.tpl\", {\n    project_name = var.project_name\n    server_name  = \"localhost\"\n  })\n  filename = \"${path.module}/nginx.conf\"\n}\n\n  tags = {\n    Name = \"${var.project_name}-web-server\"\n  }\n}\n\n# Web configuration\nresource \"local_file\" \"web_config\" {\n  content  = \"Web server configuration for ${var.project_name}\"\n  filename = \"web_config.txt\"\n\n  tags = {\n    Name = \"${var.project_name}-config\"\n  }\n}\n</code></pre></p> <p><code>outputs.tf</code>: <pre><code>output \"project_config_path\" {\n  description = \"Path to project configuration\"\n  value       = local_file.project_config.filename\n}\n\noutput \"app_directory_path\" {\n  description = \"Path to application directory\"\n  value       = local_directory.app_directory.path\n}\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#23-deployi-infrastruktuur","title":"2.3: Deploy'i infrastruktuur","text":"<pre><code># 1. Initsialiseeri Terraform\nterraform init\n\n# 2. Vaata planeeritud muudatusi\nterraform plan\n\n# 3. Deploy'i infrastruktuur\nterraform apply -auto-approve\n\n# 4. Salvesta v\u00e4ljundid\nterraform output &gt; outputs.txt\n</code></pre>"},{"location":"ci_cd_advanced/lab/#samm-3-server-configuration-ansible-30-min","title":"\ud83d\udd27 Samm 3: Server Configuration (Ansible) - 30 min","text":""},{"location":"ci_cd_advanced/lab/#31-loo-ansible-projekt","title":"3.1: Loo Ansible projekt","text":"<pre><code># 1. Mine tagasi projekti juurkausta\ncd ..\n\n# 2. Loo Ansible kaust\nmkdir ansible\ncd ansible\n\n# 3. Loo Ansible failid\ntouch inventory.yml\ntouch playbook.yml\ntouch group_vars/all.yml\nmkdir roles\nmkdir roles/webserver\nmkdir roles/webserver/tasks\nmkdir roles/webserver/handlers\nmkdir roles/webserver/templates\ntouch roles/webserver/tasks/main.yml\ntouch roles/webserver/handlers/main.yml\n</code></pre>"},{"location":"ci_cd_advanced/lab/#32-seadista-inventory","title":"3.2: Seadista inventory","text":"<p><code>inventory.yml</code>: <pre><code>all:\n  children:\n    webservers:\n      hosts:\n        localhost:\n          ansible_connection: local\n      vars:\n        app_name: techshop\n        app_port: 5000\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#33-loo-webserver-role","title":"3.3: Loo webserver role","text":"<p><code>roles/webserver/tasks/main.yml</code>: <pre><code>---\n- name: Update package cache\n  apt:\n    update_cache: yes\n    cache_valid_time: 3600\n\n- name: Install required packages\n  apt:\n    name:\n      - python3\n      - python3-pip\n      - nginx\n      - docker.io\n      - docker-compose\n    state: present\n\n- name: Start and enable Docker\n  systemd:\n    name: docker\n    state: started\n    enabled: yes\n\n- name: Add ubuntu user to docker group\n  user:\n    name: ubuntu\n    groups: docker\n    append: yes\n\n- name: Create application directory\n  file:\n    path: /opt/{{ app_name }}\n    state: directory\n    owner: ubuntu\n    group: ubuntu\n    mode: '0755'\n\n- name: Copy nginx configuration\n  template:\n    src: nginx.conf.j2\n    dest: /etc/nginx/sites-available/{{ app_name }}\n    owner: root\n    group: root\n    mode: '0644'\n  notify: restart nginx\n\n- name: Enable nginx site\n  file:\n    src: /etc/nginx/sites-available/{{ app_name }}\n    dest: /etc/nginx/sites-enabled/{{ app_name }}\n    state: link\n  notify: restart nginx\n\n- name: Remove default nginx site\n  file:\n    path: /etc/nginx/sites-enabled/default\n    state: absent\n  notify: restart nginx\n</code></pre></p> <p><code>roles/webserver/handlers/main.yml</code>: <pre><code>---\n- name: restart nginx\n  systemd:\n    name: nginx\n    state: restarted\n</code></pre></p> <p><code>roles/webserver/templates/nginx.conf.j2</code>: <pre><code>server {\n    listen 80;\n    server_name _;\n\n    location / {\n        proxy_pass http://localhost:{{ app_port }};\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    location /health {\n        proxy_pass http://localhost:{{ app_port }}/health;\n        access_log off;\n    }\n}\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#34-loo-playbook","title":"3.4: Loo playbook","text":"<p><code>playbook.yml</code>: <pre><code>---\n- name: Configure web server\n  hosts: webservers\n  become: yes\n  roles:\n    - webserver\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#35-kaivita-ansible","title":"3.5: K\u00e4ivita Ansible","text":"<pre><code># 1. Seadista keskkonna muutuja\nexport WEB_SERVER_IP=$(terraform -chdir=../terraform output -raw web_server_public_ip)\n\n# 2. K\u00e4ivita Ansible playbook\nansible-playbook -i inventory.yml playbook.yml\n\n# 3. Kontrolli tulemus\nansible webservers -i inventory.yml -m ping\n</code></pre>"},{"location":"ci_cd_advanced/lab/#samm-4-application-development-docker-30-min","title":"\ud83d\udc33 Samm 4: Application Development (Docker) - 30 min","text":""},{"location":"ci_cd_advanced/lab/#41-loo-rakendus","title":"4.1: Loo rakendus","text":"<pre><code># 1. Mine tagasi projekti juurkausta\ncd ..\n\n# 2. Loo rakenduse kaust\nmkdir app\ncd app\n\n# 3. Loo rakenduse failid\ntouch app.py\ntouch requirements.txt\ntouch Dockerfile\ntouch docker-compose.yml\n</code></pre>"},{"location":"ci_cd_advanced/lab/#42-loo-flask-rakendus","title":"4.2: Loo Flask rakendus","text":"<p><code>app.py</code>: <pre><code>from flask import Flask, jsonify, request\nimport os\nimport logging\nfrom datetime import datetime\n\n# Setup logging\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    logger.info(f\"Home page accessed at {datetime.now()}\")\n    return jsonify({\n        'message': 'TechShop E-commerce API',\n        'version': '1.0.0',\n        'status': 'running',\n        'timestamp': str(datetime.now()),\n        'hostname': os.uname().nodename\n    })\n\n@app.route('/health')\ndef health():\n    return jsonify({\n        'status': 'healthy',\n        'timestamp': str(datetime.now())\n    })\n\n@app.route('/products')\ndef products():\n    products = [\n        {'id': 1, 'name': 'Laptop', 'price': 999.99},\n        {'id': 2, 'name': 'Phone', 'price': 599.99},\n        {'id': 3, 'name': 'Tablet', 'price': 399.99}\n    ]\n    return jsonify(products)\n\n@app.route('/orders', methods=['POST'])\ndef create_order():\n    data = request.get_json()\n    logger.info(f\"New order created: {data}\")\n    return jsonify({\n        'message': 'Order created successfully',\n        'order_id': 12345,\n        'timestamp': str(datetime.now())\n    })\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n</code></pre></p> <p><code>requirements.txt</code>: <pre><code>Flask==2.3.3\ngunicorn==21.2.0\npsutil==5.9.5\nrequests==2.31.0\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#43-loo-dockerfile","title":"4.3: Loo Dockerfile","text":"<p><code>Dockerfile</code>: <pre><code>FROM python:3.9-slim\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    gcc \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Copy requirements and install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy application code\nCOPY . .\n\n# Create non-root user\nRUN useradd -m -u 1000 appuser &amp;&amp; chown -R appuser:appuser /app\nUSER appuser\n\nEXPOSE 5000\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:5000\", \"--workers\", \"2\", \"app:app\"]\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#44-loo-docker-compose","title":"4.4: Loo docker-compose","text":"<p><code>docker-compose.yml</code>: <pre><code>version: '3.8'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"5000:5000\"\n    environment:\n      - FLASK_ENV=production\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD-SHELL\", \"curl -f http://localhost:5000/health || exit 1\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#45-testi-kohalikult","title":"4.5: Testi kohalikult","text":"<pre><code># 1. Ehita ja k\u00e4ivita\ndocker-compose up --build -d\n\n# 2. Testi rakendust\ncurl http://localhost:5000/\ncurl http://localhost:5000/health\ncurl http://localhost:5000/products\n\n# 3. Peata\ndocker-compose down\n</code></pre>"},{"location":"ci_cd_advanced/lab/#harjutus-4-cicd-pipeline-gitlab-ci-45-min","title":"\ud83d\ude80 HARJUTUS 4: CI/CD Pipeline (GitLab CI) - 45 min","text":""},{"location":"ci_cd_advanced/lab/#samm-1-loo-git-repository","title":"Samm 1: Loo Git repository","text":"<pre><code># 1. Mine tagasi projekti juurkausta\ncd ..\n\n# 2. Initsialiseeri Git\ngit init\n\n# 3. Lisa .gitignore\necho \"*.tfstate\" &gt; .gitignore\necho \"*.tfstate.backup\" &gt;&gt; .gitignore\necho \"*.tfvars\" &gt;&gt; .gitignore\necho \".terraform/\" &gt;&gt; .gitignore\necho \"__pycache__/\" &gt;&gt; .gitignore\necho \"*.pyc\" &gt;&gt; .gitignore\necho \".env\" &gt;&gt; .gitignore\n\n# 4. Lisa failid\ngit add .\n\n# 5. Esimene commit\ngit commit -m \"Initial commit - TechShop automation project\"\n\n# 6. Lisa remote (asenda oma GitLab URL'iga)\ngit remote add origin https://gitlab.com/teie-kasutajanimi/techshop-automation.git\n\n# 7. Push'i kood\ngit push -u origin main\n</code></pre>"},{"location":"ci_cd_advanced/lab/#samm-2-loo-cicd-pipeline","title":"Samm 2: Loo CI/CD pipeline","text":"<p><code>.gitlab-ci.yml</code>: <pre><code>stages:\n  - validate\n  - test\n  - build\n  - deploy-infrastructure\n  - configure-servers\n  - deploy-application\n\nvariables:\n  DOCKER_IMAGE: registry.gitlab.com/teie-kasutajanimi/techshop-app\n  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/techshop\n\n# Validate Terraform\nvalidate-terraform:\n  stage: validate\n  image: hashicorp/terraform:latest\n  script:\n    - cd terraform\n    - terraform init\n    - terraform validate\n    - terraform plan -out=plan.tfplan\n  artifacts:\n    paths:\n      - terraform/plan.tfplan\n    expire_in: 1 hour\n  only:\n    - main\n\n# Test application\ntest-app:\n  stage: test\n  image: python:3.9\n  script:\n    - cd app\n    - pip install -r requirements.txt\n    - python -c \"import app; print('\u2705 App import successful')\"\n    - echo \"Application tests passed!\"\n  only:\n    - main\n\n# Build Docker image\nbuild-app:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  before_script:\n    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n  script:\n    - cd app\n    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHA .\n    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHA\n    - echo \"\u2705 Docker image built and pushed!\"\n  only:\n    - main\n\n# Deploy infrastructure\ndeploy-infrastructure:\n  stage: deploy-infrastructure\n  image: hashicorp/terraform:latest\n  before_script:\n    - cd terraform\n    - terraform init\n  script:\n    - terraform apply -auto-approve\n    - terraform output -json &gt; outputs.json\n  artifacts:\n    paths:\n      - terraform/outputs.json\n    expire_in: 1 week\n  only:\n    - main\n  when: manual\n\n# Configure servers with Ansible\nconfigure-servers:\n  stage: configure-servers\n  image: alpine:latest\n  before_script:\n    - apk add --no-cache ansible openssh-client\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -\n    - mkdir -p ~/.ssh\n    - chmod 700 ~/.ssh\n  script:\n    - cd ansible\n    - ansible-playbook -i inventory.yml playbook.yml\n    - echo \"\u2705 Local environment configured!\"\n  dependencies:\n    - deploy-infrastructure\n  only:\n    - main\n  when: manual\n\n# Deploy application\ndeploy-application:\n  stage: deploy-application\n  image: alpine:latest\n  before_script:\n    - apk add --no-cache docker-cli curl\n    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n  script:\n    - echo \"\ud83d\ude80 Deploying application locally...\"\n    - docker pull $DOCKER_IMAGE:$CI_COMMIT_SHA\n    - docker stop techshop-app || true\n    - docker rm techshop-app || true\n    - docker run -d --name techshop-app -p 5000:5000 $DOCKER_IMAGE:$CI_COMMIT_SHA\n    - sleep 10\n    - curl -f http://localhost:5000/health || exit 1\n    - echo \"\u2705 Application deployed successfully!\"\n  dependencies:\n    - configure-servers\n  only:\n    - main\n  when: manual\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#samm-3-seadista-gitlab-cicd","title":"Samm 3: Seadista GitLab CI/CD","text":"<ol> <li>Mine GitLab'i \u2192 oma projekt</li> <li>Settings \u2192 CI/CD \u2192 Variables</li> <li>Lisa muutujad:</li> <li><code>DOCKER_IMAGE</code>: teie Docker image nimi</li> <li><code>CI_REGISTRY_USER</code>: GitLab registry kasutajanimi</li> <li><code>CI_REGISTRY_PASSWORD</code>: GitLab registry parool</li> </ol>"},{"location":"ci_cd_advanced/lab/#harjutus-5-monitoring-ja-troubleshooting-30-min","title":"\ud83d\udcca HARJUTUS 5: Monitoring ja Troubleshooting - 30 min","text":""},{"location":"ci_cd_advanced/lab/#samm-1-lisa-monitoring","title":"Samm 1: Lisa monitoring","text":"<p>Lisa <code>app.py</code> faili: <pre><code># Lisa import'id\nimport psutil\nimport requests\n\n@app.route('/metrics')\ndef metrics():\n    cpu_percent = psutil.cpu_percent(interval=1)\n    memory = psutil.virtual_memory()\n    disk = psutil.disk_usage('/')\n\n    return jsonify({\n        'cpu_percent': cpu_percent,\n        'memory_percent': memory.percent,\n        'disk_percent': disk.percent,\n        'timestamp': str(datetime.now())\n    })\n\n@app.route('/status')\ndef status():\n    # Check database connection (if exists)\n    db_status = \"healthy\"  # Placeholder\n\n    # Check external services\n    try:\n        response = requests.get('https://httpbin.org/status/200', timeout=5)\n        external_status = \"healthy\" if response.status_code == 200 else \"unhealthy\"\n    except:\n        external_status = \"unhealthy\"\n\n    return jsonify({\n        'database': db_status,\n        'external_services': external_status,\n        'application': 'healthy',\n        'timestamp': str(datetime.now())\n    })\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#samm-2-lisa-health-check-cicd-pipelinei","title":"Samm 2: Lisa health check CI/CD pipeline'i","text":"<p>Lisa <code>.gitlab-ci.yml</code> faili: <pre><code># Lisa uus stage\nhealth-check:\n  stage: deploy-application\n  image: alpine:latest\n  script:\n    - apk add --no-cache curl\n    - python3 -c \"import json; data=json.load(open('terraform/outputs.json')); print(f'export WEB_SERVER_IP={data[\\\"web_server_public_ip\\\"][\\\"value\\\"]}')\" &gt; set_ip.sh\n    - source set_ip.sh\n    - echo \"\ud83c\udfe5 Running health checks...\"\n    - curl -f http://$WEB_SERVER_IP/health || exit 1\n    - curl -f http://$WEB_SERVER_IP/metrics || exit 1\n    - curl -f http://$WEB_SERVER_IP/status || exit 1\n    - echo \"\u2705 All health checks passed!\"\n  dependencies:\n    - deploy-application\n  only:\n    - main\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#samm-3-troubleshooting-harjutused","title":"Samm 3: Troubleshooting harjutused","text":"<p>Probleem 1: Application ei k\u00e4ivitu <pre><code># Kontrolli Docker container'i\nssh ubuntu@$WEB_SERVER_IP \"docker ps -a\"\nssh ubuntu@$WEB_SERVER_IP \"docker logs techshop-app\"\n\n# Kontrolli port'i\nssh ubuntu@$WEB_SERVER_IP \"netstat -tlnp | grep 5000\"\n\n# Kontrolli nginx\nssh ubuntu@$WEB_SERVER_IP \"sudo systemctl status nginx\"\n</code></pre></p> <p>Probleem 2: Infrastructure deployment eba\u00f5nnestub <pre><code># Kontrolli Terraform state\ncd terraform\nterraform show\nterraform plan\n\n# Kontrolli kohalikke seadeid\nls -la\n</code></pre></p> <p>Probleem 3: Ansible connection eba\u00f5nnestub <pre><code># Kontrolli SSH connection\nssh -i ~/.ssh/techshop-key.pem ubuntu@$WEB_SERVER_IP\n\n# Kontrolli Ansible inventory\nansible webservers -i inventory.yml -m ping -vvv\n</code></pre></p>"},{"location":"ci_cd_advanced/lab/#harjutus-6-dokumenteerimine-ja-demo-15-min","title":"\ud83d\udcdd HARJUTUS 6: Dokumenteerimine ja Demo - 15 min","text":""},{"location":"ci_cd_advanced/lab/#samm-1-loo-readmemd","title":"Samm 1: Loo README.md","text":"<pre><code># TechShop E-commerce Automation Project\n\n## Projekt kirjeldus\nT\u00e4ielik automatiseeritud e-commerce lahendus, mis kasutab k\u00f5iki DevOps oskusi.\n\n## Arhitektuur\n- **Infrastructure**: Local (Terraform)\n- **Configuration**: Ansible\n- **Application**: Python Flask (Docker)\n- **CI/CD**: GitLab CI\n- **Monitoring**: Custom metrics\n\n## Komponendid\n\n### 1. Infrastructure (Terraform)\n- Kohalikud seaded\n- Konfiguratsioonifailid\n- Security groups\n- Elastic IP\n\n### 2. Server Configuration (Ansible)\n- Nginx reverse proxy\n- Docker installation\n- Application directory setup\n\n### 3. Application (Docker)\n- Flask REST API\n- Health checks\n- Metrics endpoint\n- Product catalog\n\n### 4. CI/CD Pipeline (GitLab CI)\n- Infrastructure deployment\n- Server configuration\n- Application deployment\n- Health monitoring\n\n## Kuidas kasutada\n\n### Kohalik arendus\n```bash\n# 1. Klooni projekt\ngit clone https://gitlab.com/teie-kasutajanimi/techshop-automation.git\n\n# 2. K\u00e4ivita kohalikult\ncd app\ndocker-compose up --build\n\n# 3. Testi\ncurl http://localhost:5000/\n</code></pre>"},{"location":"ci_cd_advanced/lab/#production-deployment","title":"Production deployment","text":"<ol> <li>Push'i kood GitLab'i</li> <li>K\u00e4ivita \"deploy-infrastructure\" job</li> <li>K\u00e4ivita \"configure-servers\" job</li> <li>K\u00e4ivita \"deploy-application\" job</li> </ol>"},{"location":"ci_cd_advanced/lab/#api-endpoints","title":"API Endpoints","text":"<ul> <li><code>GET /</code> - Home page</li> <li><code>GET /health</code> - Health check</li> <li><code>GET /metrics</code> - System metrics</li> <li><code>GET /status</code> - Service status</li> <li><code>GET /products</code> - Product catalog</li> <li><code>POST /orders</code> - Create order</li> </ul>"},{"location":"ci_cd_advanced/lab/#monitoring","title":"Monitoring","text":"<ul> <li>Health checks: <code>/health</code></li> <li>System metrics: <code>/metrics</code></li> <li>Service status: <code>/status</code></li> <li>CI/CD pipeline monitoring</li> </ul>"},{"location":"ci_cd_advanced/lab/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Application logs: <code>docker logs techshop-app</code></li> <li>Nginx logs: <code>sudo tail -f /var/log/nginx/access.log</code></li> <li>System logs: <code>journalctl -u docker</code></li> </ul>"},{"location":"ci_cd_advanced/lab/#tehnoloogiad","title":"Tehnoloogiad","text":"<ul> <li>Infrastructure: Terraform, Local</li> <li>Configuration: Ansible</li> <li>Containerization: Docker</li> <li>CI/CD: GitLab CI</li> <li>Application: Python Flask</li> <li>Web Server: Nginx</li> </ul>"},{"location":"ci_cd_advanced/lab/#jargmised-sammud","title":"J\u00e4rgmised sammud","text":"<ul> <li> Lisa PostgreSQL andmebaas</li> <li> Lisa Redis cache</li> <li> Lisa Prometheus monitoring</li> <li> Lisa SSL sertifikaadid</li> <li> Lisa backup automatiseerimine ```</li> </ul>"},{"location":"ci_cd_advanced/lab/#samm-2-demo-ettevalmistus","title":"Samm 2: Demo ettevalmistus","text":"<p>Valmista ette demo: 1. Infrastructure: N\u00e4ita Terraform koodi ja kohalikke ressursse 2. Configuration: N\u00e4ita Ansible playbook'i ja kohalikku seadistust 3. Application: N\u00e4ita Flask rakendust ja Docker container'it 4. CI/CD: K\u00e4ivita pipeline ja n\u00e4ita deployment'i 5. Monitoring: N\u00e4ita health checks ja metrics</p>"},{"location":"ci_cd_advanced/lab/#samm-2-lab-kokkuvote","title":"\ud83c\udfaf Samm 2: Lab Kokkuv\u00f5te","text":""},{"location":"ci_cd_advanced/lab/#koik-oskused-kasutatud","title":"K\u00f5ik oskused kasutatud:","text":"<ol> <li>Git \u2192 Version control ja collaboration</li> <li>Terraform \u2192 Infrastructure as Code</li> <li>Ansible \u2192 Server configuration</li> <li>Docker \u2192 Application containerization</li> <li>CI/CD \u2192 Automated deployment</li> <li>Monitoring \u2192 Production visibility</li> <li>Troubleshooting \u2192 Probleemide lahendamine</li> </ol>"},{"location":"ci_cd_advanced/lab/#real-world-projekt","title":"\ud83d\ude80 Real-world projekt:","text":"<ul> <li>Production-ready e-commerce lahendus</li> <li>T\u00e4ielik automatiseerimine - nullist kuni deployment'ini</li> <li>K\u00f5ik DevOps praktikad \u00fches projektis</li> </ul>"},{"location":"ci_cd_advanced/lab/#tulemused","title":"\ud83d\udcca Tulemused:","text":"<ul> <li>Deployment aeg: 2-3 tundi \u2192 5 minutit</li> <li>Vigade arv: 30% \u2192 2%</li> <li>Rollback aeg: 1 tund \u2192 2 minutit</li> <li>Arendaja stress: K\u00f5rge \u2192 Madal</li> </ul>"},{"location":"ci_cd_advanced/lab/#jargmised-sammud_1","title":"\ud83d\udcda J\u00e4rgmised sammud:","text":"<ul> <li>Lisa andmebaas automatiseerimine</li> <li>Lisa monitoring ja alerting</li> <li>Lisa security scanning</li> <li>Lisa backup ja disaster recovery</li> </ul> <p>\ud83c\udf89 Palju \u00f5nne! Oled n\u00fc\u00fcd valmis automatiseerimise projektideks!</p>"},{"location":"ci_cd_advanced/lecture/","title":"\ud83d\udcda N\u00e4dal 25: Ettev\u00f5tte Infrastruktuuri Automatiseerimine ja Projekti L\u00f5petamine","text":""},{"location":"ci_cd_advanced/lecture/#loeng-251-kuidas-laheneda-uuele-devops-projektile-20-min","title":"\ud83d\udcd6 Loeng 25.1: Kuidas l\u00e4heneda uuele DevOps projektile (20 min)","text":""},{"location":"ci_cd_advanced/lecture/#tere-tagasi-kallid-tudengid","title":"Tere tagasi, kallid tudengid!","text":"<p>Eelmisel n\u00e4dalal \u00f5ppisime Terraform'iga infrastruktuuri koodina. T\u00e4na n\u00e4itame, kuidas K\u00d5IK oskused, mida me \u00f5ppisime, kokku tulevad \u00fches p\u00e4ris projektis!</p>"},{"location":"ci_cd_advanced/lecture/#real-scenario-e-commerce-startup-automatiseerimine","title":"\ud83c\udfe2 Real Scenario: E-commerce startup automatiseerimine","text":"<p>Klient: \"TechShop\" - v\u00e4ike e-commerce startup</p> <p>Praegune olukord: <pre><code># K\u00e4sitsi deployment protsess (2-3 tundi)\n1. SSH serverisse\n2. Git pull latest code\n3. Install dependencies\n4. Restart application\n5. Manual testing\n6. Kui viga \u2192 panic ja rollback\n</code></pre></p> <p>Probleem: Arendajad deploy'ivad k\u00e4sitsi, tihti vigu, aeglane protsess</p>"},{"location":"ci_cd_advanced/lecture/#meie-lahendus-taielik-automatiseerimine","title":"\ud83c\udfaf Meie lahendus: T\u00e4ielik automatiseerimine","text":"<p>K\u00f5ik oskused, mida me \u00f5ppisime, \u00fches projektis:</p>"},{"location":"ci_cd_advanced/lecture/#1-git-ja-version-control-nadal-9","title":"1. Git ja Version Control (N\u00e4dal 9)","text":"<pre><code># Struktureeritud Git workflow\nmain branch \u2192 development \u2192 feature branches\nPull request \u2192 code review \u2192 merge\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#2-ansible-configuration-management-nadal-11-15","title":"2. Ansible Configuration Management (N\u00e4dal 11-15)","text":"<pre><code># server-setup.yml\n- name: Setup web server\n  hosts: webservers\n  tasks:\n    - name: Install nginx\n      package:\n        name: nginx\n        state: present\n\n    - name: Configure nginx\n      template:\n        src: nginx.conf.j2\n        dest: /etc/nginx/nginx.conf\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#3-docker-containerization-nadal-19-21","title":"3. Docker Containerization (N\u00e4dal 19-21)","text":"<pre><code># Dockerfile\nFROM python:3.9-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:5000\", \"app:app\"]\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#4-infrastructure-as-code-nadal-23","title":"4. Infrastructure as Code (N\u00e4dal 23)","text":"<pre><code># main.tf\nresource \"local_file\" \"web_server_config\" {\n  ami           = \"ami-123456\"\n  instance_type = \"t3.micro\"\n\n  tags = {\n    Name = \"TechShop Web Server\"\n  }\n}\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#5-cicd-pipeline-nadal-25","title":"5. CI/CD Pipeline (N\u00e4dal 25)","text":"<pre><code>flowchart LR\n    A[\ud83d\udcdd Code Commit] --&gt; B[\ud83e\uddea Test Stage]\n    B --&gt; C[\ud83d\udce6 Build Stage]\n    C --&gt; D[\ud83d\ude80 Deploy Stage]\n    D --&gt; E[\u2705 Production]\n\n    B --&gt; F[\u274c Test Failed]\n    C --&gt; G[\u274c Build Failed]\n    D --&gt; H[\u274c Deploy Failed]\n\n    F --&gt; I[\ud83d\udd27 Fix Issues]\n    G --&gt; I\n    H --&gt; I\n    I --&gt; A\n\n    style A fill:#99ccff\n    style B fill:#ffff99\n    style C fill:#ffcc99\n    style D fill:#99ff99\n    style E fill:#cc99ff\n    style F fill:#ff9999\n    style G fill:#ff9999\n    style H fill:#ff9999\n    style I fill:#ff99cc</code></pre> <pre><code># .gitlab-ci.yml\nstages:\n  - test\n  - build\n  - deploy\n\ntest:\n  stage: test\n  script:\n    - python -m pytest\n\nbuild:\n  stage: build\n  script:\n    - docker build -t techshop:$CI_COMMIT_SHA .\n\ndeploy:\n  stage: deploy\n  script:\n    - ansible-playbook deploy.yml\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#taielik-automatiseerimise-workflow","title":"\ud83d\udee0\ufe0f T\u00e4ielik automatiseerimise workflow","text":""},{"location":"ci_cd_advanced/lecture/#samm-1-infrastructure-setup-terraform","title":"Samm 1: Infrastructure Setup (Terraform)","text":"<pre><code># 1. Create infrastructure\nterraform init\nterraform plan\nterraform apply\n\n# Tulemus: Kohalikud serverid, load balancer, database\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-2-server-configuration-ansible","title":"Samm 2: Server Configuration (Ansible)","text":"<pre><code># 2. Configure servers\nansible-playbook -i inventory server-setup.yml\n\n# Tulemus: Nginx, Python, dependencies installed\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-3-application-deployment-docker-cicd","title":"Samm 3: Application Deployment (Docker + CI/CD)","text":"<pre><code># 3. Deploy application\ngit push origin main\n# \u2192 Triggers CI/CD pipeline\n# \u2192 Builds Docker image\n# \u2192 Deploys to servers\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-4-monitoring-prometheus-grafana","title":"Samm 4: Monitoring (Prometheus + Grafana)","text":"<pre><code># 4. Monitor everything\n- name: Setup monitoring\n  hosts: monitoring\n  tasks:\n    - name: Install Prometheus\n      docker_container:\n        name: prometheus\n        image: prom/prometheus\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#enne-vs-parast-automatiseerimist","title":"\ud83d\udcca Enne vs P\u00e4rast Automatiseerimist","text":"Aspekt Enne P\u00e4rast Deployment aeg 2-3 tundi 5 minutit Vigade arv 30% 2% Rollback aeg 1 tund 2 minutit Arendaja stress K\u00f5rge Madal Deployment sagedus 1x n\u00e4dalas 5x p\u00e4evas"},{"location":"ci_cd_advanced/lecture/#loeng-252-kuidas-valida-tehnoloogiaid-18-min","title":"\ud83d\udcd6 Loeng 25.2: Kuidas valida tehnoloogiaid (18 min)","text":""},{"location":"ci_cd_advanced/lecture/#real-world-tehnoloogia-valik-meie-projektis","title":"\ud83c\udfaf Real-world tehnoloogia valik meie projektis","text":"<p>Probleem: TechShop vajab automatiseerimist</p> <p>Meie valikud ja p\u00f5hjendused:</p>"},{"location":"ci_cd_advanced/lecture/#1-cicd-platform-gitlab-ci","title":"1. CI/CD Platform: GitLab CI","text":"<pre><code># Miks GitLab CI?\nLihtne setup (GitLab + CI samas kohas)\nTasuta (startup budget)\nDocker support\nAnsible integration\n\u274c GitHub Actions (kallis)\n\u274c Jenkins (keeruline)\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#2-containerization-docker","title":"2. Containerization: Docker","text":"<pre><code># Miks Docker?\nConsistent environment\nEasy deployment\nScalable\nIndustry standard\n\u274c VM (overkill)\n\u274c Direct install (inconsistent)\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#3-configuration-management-ansible","title":"3. Configuration Management: Ansible","text":"<pre><code># Miks Ansible?\nAgentless (no installation on servers)\nYAML syntax (easy to read)\nLarge community\nTerraform integration\n\u274c Puppet (complex)\n\u274c Chef (expensive)\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#4-infrastructure-terraform","title":"4. Infrastructure: Terraform","text":"<pre><code># Miks Terraform?\nMulti-cloud support\nState management\nVersion control\nAnsible integration\n\u274c CloudFormation (AWS only, not covered)\n\u274c Manual setup (error-prone)\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#praktiline-naide-tehnoloogia-valik","title":"\ud83d\udee0\ufe0f Praktiline n\u00e4ide: Tehnoloogia valik","text":"<p>\u00dclesanne: Vali monitoring lahendus TechShop'ile</p> <pre><code>KRITEERIUMID:\n1. Lihtne setup (v\u00e4ike tiim)\n2. Tasuta (startup budget)\n3. Docker support\n4. Alerting\n\nVALIKUD:\n- Prometheus + Grafana\n- Datadog\n- New Relic\n- CloudWatch\n</code></pre> <p>Hindamine: <pre><code>Prometheus + Grafana: 4/5 + 5/5 + 5/5 + 4/5 = 18/20 \u2705\nDatadog: 3/5 + 1/5 + 5/5 + 5/5 = 14/20\nNew Relic: 3/5 + 1/5 + 4/5 + 4/5 = 12/20\nCloudWatch: 4/5 + 3/5 + 3/5 + 4/5 = 14/20\n</code></pre></p> <p>Tulemus: Prometheus + Grafana (tasuta + v\u00f5imas)</p>"},{"location":"ci_cd_advanced/lecture/#loeng-253-kuidas-troubleshootida-production-issues-15-min","title":"\ud83d\udcd6 Loeng 25.3: Kuidas troubleshoot'ida production issues (15 min)","text":""},{"location":"ci_cd_advanced/lecture/#real-scenario-techshop-on-maas","title":"\ud83d\udea8 Real scenario: TechShop on maas","text":"<p>Probleem: Website tagastab 502 Bad Gateway</p>"},{"location":"ci_cd_advanced/lecture/#systematic-troubleshooting-meie-automatiseeritud-susteemis","title":"\ud83d\udd0d Systematic troubleshooting meie automatiseeritud s\u00fcsteemis","text":""},{"location":"ci_cd_advanced/lecture/#samm-1-information-gathering","title":"Samm 1: Information gathering","text":"<pre><code># 1. Check CI/CD pipeline status\ngitlab-ci-lint .gitlab-ci.yml\n# Tulemus: Pipeline OK\n\n# 2. Check Docker containers\ndocker ps\n# Tulemus: Container stopped\n\n# 3. Check application logs\ndocker logs techshop-app\n# Tulemus: Database connection failed\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-2-hypothesis-formation","title":"Samm 2: Hypothesis formation","text":"<pre><code># H\u00fcpoteesid:\n1. Database server down\n2. Network connectivity issue\n3. Application configuration error\n4. Docker container crashed\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-3-systematic-testing","title":"Samm 3: Systematic testing","text":"<pre><code># Test 1: Database connectivity\nmysql -h db.techshop.com -u user -p\n# Tulemus: Connection refused\n\n# Test 2: Check database server\nterraform show\n# Tulemus: Database instance running\n\n# Test 3: Check security groups\n# Local security check\n# Tulemus: Port 3306 blocked\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#samm-4-solution-implementation","title":"Samm 4: Solution implementation","text":"<pre><code># Probleem: Security group blocking database access\n# Lahendus: Update Terraform configuration\n\n# 1. Update security group\nresource \"local_file\" \"db_config\" {\n  ingress {\n    from_port = 3306\n    to_port   = 3306\n    protocol  = \"tcp\"\n    cidr_blocks = [\"10.0.0.0/16\"]\n  }\n}\n\n# 2. Apply changes\nterraform plan\nterraform apply\n\n# 3. Restart application\nansible-playbook restart-app.yml\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#praktiline-harjutus-troubleshooting","title":"\ud83d\udee0\ufe0f Praktiline harjutus: Troubleshooting","text":"<p>\u00dclesanne: TechShop API response time &gt; 30s</p> <p>Sammud: 1. Millised k\u00e4sud sa k\u00e4ivitaksid? 2. Millised h\u00fcpoteesid sul on? 3. Kuidas sa lahendaksid?</p>"},{"location":"ci_cd_advanced/lecture/#loeng-254-jargmised-sammud-karjaaris-12-min","title":"\ud83d\udcd6 Loeng 25.4: J\u00e4rgmised sammud karj\u00e4\u00e4ris (12 min)","text":""},{"location":"ci_cd_advanced/lecture/#kuidas-kasutada-oma-techshop-projekti-karjaaris","title":"\ud83c\udf93 Kuidas kasutada oma TechShop projekti karj\u00e4\u00e4ris","text":""},{"location":"ci_cd_advanced/lecture/#1-portfolio-projekt","title":"1. Portfolio projekt","text":"<p>GitHub repository: <pre><code>techshop-automation/\n\u251c\u2500\u2500 terraform/          # Infrastructure as Code\n\u251c\u2500\u2500 ansible/           # Configuration management\n\u251c\u2500\u2500 docker/            # Containerization\n\u251c\u2500\u2500 ci-cd/             # Pipeline configuration\n\u251c\u2500\u2500 monitoring/        # Prometheus + Grafana\n\u2514\u2500\u2500 README.md          # Project documentation\n</code></pre></p>"},{"location":"ci_cd_advanced/lecture/#2-cv-ja-linkedin","title":"2. CV ja LinkedIn","text":"<p>Skills demonstrated: - Git workflow management - Ansible automation - Docker containerization - Terraform infrastructure - CI/CD pipeline design - Monitoring setup - Production troubleshooting</p>"},{"location":"ci_cd_advanced/lecture/#3-interview-examples","title":"3. Interview examples","text":"<p>\"Tell me about a project you automated\": <pre><code>\"Ma automatiseerisin e-commerce startup'i kogu deployment protsessi.\n- Kasutasin Terraform'it infrastruktuuri loomiseks\n- Ansible'it serverite konfigureerimiseks\n- Docker'it rakenduse pakkimiseks\n- GitLab CI/CD pipeline'i automatiseerimiseks\n- Tulemus: deployment aeg v\u00e4henes 2 tunnilt 5 minutile\"\n</code></pre></p>"},{"location":"ci_cd_advanced/lecture/#praktiline-harjutus-karjaari-planeerimine","title":"\ud83d\udee0\ufe0f Praktiline harjutus: Karj\u00e4\u00e4ri planeerimine","text":"<p>\u00dclesanne: Tee oma TechShop projekti paremaks</p> <pre><code>J\u00c4RGMISED SAMMUD:\n1. Lisa Kubernetes (container orchestration)\n2. Lisa monitoring alerting\n3. Lisa security scanning\n4. Lisa backup automation\n5. Lisa disaster recovery\n</code></pre>"},{"location":"ci_cd_advanced/lecture/#nadala-kokkuvote","title":"\ud83c\udfaf N\u00e4dala Kokkuv\u00f5te","text":""},{"location":"ci_cd_advanced/lecture/#mida-me-oppisime-rakendama","title":"Mida me \u00f5ppisime rakendama:","text":"<ul> <li>Git + CI/CD: Automated deployment pipeline</li> <li>Ansible: Server configuration automation</li> <li>Docker: Application containerization</li> <li>Terraform: Infrastructure as Code</li> <li>Monitoring: Production visibility</li> <li>Troubleshooting: Systematic problem solving</li> </ul>"},{"location":"ci_cd_advanced/lecture/#real-world-projekt","title":"\ud83d\ude80 Real-world projekt:","text":"<ul> <li>TechShop e-commerce - t\u00e4ielik automatiseerimine</li> <li>K\u00f5ik oskused kokku - \u00fches projektis</li> <li>Production-ready - p\u00e4ris kasutuses</li> </ul>"},{"location":"ci_cd_advanced/lecture/#jargmised-sammud","title":"\ud83d\udcda J\u00e4rgmised sammud:","text":"<ul> <li>J\u00e4tka \u00f5ppimist cloud tehnoloogiateid</li> <li>Ehita oma portfolio projektid</li> <li>Osale DevOps kogukondades</li> <li>Praktiseeri real projektides</li> </ul> <p>\ud83c\udf89 \u00d5nnitleme! Oled n\u00fc\u00fcd valmis automatiseerimise projektideks!</p>"},{"location":"docker_fundamentals/homework/","title":"\ud83d\udcdd N\u00e4dal 19 Kodut\u00f6\u00f6: S\u00fcsteemi Oleku Dashboard Deployment","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: \u00d5ppida Docker ja Podman container'ite kasutamist praktikas Aeg: 2-3 tundi (v\u00f5ib olla keeruline, aga j\u00f5ukohane)</p> <p>Te saate valmis veebisaidi - keskenduge container tehnoloogiate \u00f5ppimisele!</p>"},{"location":"docker_fundamentals/homework/#projekt-susteemi-oleku-dashboard","title":"\ud83d\udda5\ufe0f Projekt: S\u00fcsteemi Oleku Dashboard","text":"<p>Mida see teeb: - N\u00e4itab container informatsiooni - Kuvab serveri olekut - V\u00f5imaldab testida connectivity - Eristab Docker vs Podman deployment</p> <p>Mida te \u00f5pite: - Docker ja Podman deployment - Environment variables kasutamine - Container networking - docker-compose orchestration</p>"},{"location":"docker_fundamentals/homework/#samm-1-kloonige-starter-repository","title":"\ud83d\udcc1 Samm 1: Kloonige starter repository","text":""},{"location":"docker_fundamentals/homework/#11-kloonige-kodutoo-starter-repository","title":"1.1 Kloonige kodut\u00f6\u00f6 starter repository","text":"<pre><code># Clone valmis starter repository\ngit clone https://github.com/teacher/docker-dashboard-starter.git\ncd docker-dashboard-starter\n\n# Loo oma branch\ngit checkout -b homework-TEIE-NIMI\n\n# N\u00e4iteks: git checkout -b homework-maria-talvik\n</code></pre> <p>Mida me saime? - Valmis HTML dashboard - Dockerfile template - docker-compose.yml - nginx.conf konfiguratsioon - README dokumentatsioon</p> <p>Ei pea ise kirjutama - fookus container'itel!</p>"},{"location":"docker_fundamentals/homework/#12-tutvuge-starter-failidega","title":"1.2 Tutvuge starter failidega","text":"<p>Kontrollige, mis failid on olemas: <pre><code>ls -la\n# Peaksite n\u00e4gema:\n# index.html - Dashboard rakendus\n# Dockerfile - Container juhised\n# docker-compose.yml - Multi-container setup\n# nginx.conf - Web server config\n# README.md - Dokumentatsioon\n</code></pre></p> <p><code>index.html</code> on valmis dashboard rakendus - see n\u00e4itab: - Container runtime info (Docker/Podman) - S\u00fcsteemi olek ja uptime - Interaktiivsed nupud testimiseks - Responsive disain</p>"},{"location":"docker_fundamentals/homework/#13-testage-starter-rakendust-brauseris","title":"1.3 Testage starter rakendust brauseris","text":"<pre><code># Avage index.html otse brauseris (ilma container'ita)\nopen index.html\n# V\u00f5i Linux'is: firefox index.html\n\n# Dashboard peaks avanema ja n\u00e4itama:\n# - S\u00fcsteemi oleku info\n# - Container runtime: \"Unknown\" \n# - Interactive buttons t\u00f6\u00f6tavad\n</code></pre> <p>Mida need failid teevad? - <code>index.html</code> - Dashboard rakendus (juba valmis!) - <code>Dockerfile</code> - Container ehitamise juhised - <code>docker-compose.yml</code> - Mitme-container haldamine - <code>nginx.conf</code> - Veebserveri t\u00e4psemad seadistused</p>"},{"location":"docker_fundamentals/homework/#samm-2-docker-container-loomine","title":"\ud83d\udd27 Samm 2: Docker container loomine","text":""},{"location":"docker_fundamentals/homework/#21-tutvuge-dockerfileiga","title":"2.1 Tutvuge Dockerfile'iga","text":"<p>Vaadake olemas olevat <code>Dockerfile</code> faili: <pre><code>cat Dockerfile\n</code></pre></p> <p>Dockerfile sisu ja selgitus: <pre><code>FROM nginx:alpine              # Kasutame nginx web server'it\nCOPY index.html /usr/share/nginx/html/   # Kopeerime HTML faili\nCOPY nginx.conf /etc/nginx/conf.d/default.conf  # Custom config\nEXPOSE 80                      # Container port 80\n</code></pre></p> <p>Mida see teeb: - Alustab nginx serveriga (v\u00e4ike Alpine Linux) - Kopeerib meie HTML faili \u00f5igesse kohta - Lisab custom nginx konfiguratsiooni - Avab port 80 HTTP liikluseks</p>"},{"location":"docker_fundamentals/homework/#22-testige-docker-build","title":"2.2 Testige Docker build","text":"<pre><code># Ehitage container image\ndocker build -t my-dashboard .\n\n# Mida see k\u00e4sk teeb?\n# - Loeb Dockerfile faili\n# - Laadib nginx:alpine image\n# - Kopeerib index.html faili\n# - Loob uue image nimega \"my-dashboard\"\n\n# Kontrollige, et image on loodud\ndocker images | grep my-dashboard\n</code></pre>"},{"location":"docker_fundamentals/homework/#23-esimene-commit-oma-branchiga","title":"2.3 Esimene commit oma branch'iga","text":"<pre><code># Commit esialgsed muudatused (kui tegite m\u00f5nda)\ngit add .\ngit commit -m \"Alustasin kodut\u00f6\u00f6d: kontrollisin starter failid ja Docker build\"\n\n# Push oma branch GitHub'i\ngit push origin homework-TEIE-NIMI\n\n# Miks me commit'ime?\n# - Salvestame oma t\u00f6\u00f6 progressi\n# - N\u00e4itame, et alustasime t\u00f6\u00f6d\n# - Saame tagasi minna kui midagi l\u00e4heb valesti\n</code></pre>"},{"location":"docker_fundamentals/homework/#samm-3-containerite-kaivitamine","title":"\ud83d\udc33 Samm 3: Container'ite k\u00e4ivitamine","text":""},{"location":"docker_fundamentals/homework/#31-dockeriga-deploy","title":"3.1 Docker'iga deploy","text":"<pre><code># K\u00e4ivitage container\ndocker run -d --name my-docker-app -p 8080:80 my-dashboard\n\n# Mida see k\u00e4sk teeb?\n# -d = detached mode (taustal)\n# --name = anname container'ile nime \"my-docker-app\"\n# -p 8080:80 = \u00fchendame host port 8080 \u2192 container port 80\n# my-dashboard = kasutame meie loodud image't\n\n# Kontrollige, et container t\u00f6\u00f6tab\ndocker ps\n\n# Testidige brauseris\necho \"Avage brauser: http://localhost:8080\"\n</code></pre>"},{"location":"docker_fundamentals/homework/#32-podmaniga-deploy","title":"3.2 Podman'iga deploy","text":"<pre><code># Ehitage image Podman'iga\npodman build -t my-dashboard-podman .\n\n# K\u00e4ivitage Podman container\npodman run -d --name my-podman-app -p 8081:80 my-dashboard-podman\n\n# Kontrollige Podman container'eid\npodman ps\n\n# Testidige brauseris\necho \"Avage brauser: http://localhost:8081\"\n</code></pre> <p>Docker vs Podman erinevused: - Docker vajab daemon'it (background service) - Podman t\u00f6\u00f6tab ilma daemon'ita - K\u00e4sud on peaaegu identilised - M\u00f5lemad kasutavad sama container format</p>"},{"location":"docker_fundamentals/homework/#33-docker-compose-kasutamine","title":"3.3 Docker-compose kasutamine","text":"<p>Looge <code>docker-compose.yml</code> fail: <pre><code>version: '3.8'\n\nservices:\n  dashboard:\n    build: .\n    ports:\n      - \"8080:80\"\n    container_name: compose-dashboard\n</code></pre></p> <p>K\u00e4ivitage docker-compose'iga: <pre><code># Ehitage ja k\u00e4ivitage\ndocker-compose up -d\n\n# Mida see teeb?\n# - Loeb docker-compose.yml faili\n# - Ehitab image kui vaja\n# - K\u00e4ivitab container'i\n# - Seadistab networking automaatselt\n\n# Kontrollige\ndocker-compose ps\n\n# Testidige: http://localhost:8080\n</code></pre></p>"},{"location":"docker_fundamentals/homework/#34-commit-oma-edu","title":"3.4 Commit oma edu","text":"<pre><code>git add docker-compose.yml\ngit commit -m \"Docker ja Podman deployment t\u00f6\u00f6tab - m\u00f5lemad testitud\"\n</code></pre>"},{"location":"docker_fundamentals/homework/#samm-4-containerite-haldamine","title":"\ud83d\udcca Samm 4: Container'ite haldamine","text":""},{"location":"docker_fundamentals/homework/#41-containerite-info-vaatamine","title":"4.1 Container'ite info vaatamine","text":"<pre><code># Vaadake k\u00f5iki t\u00f6\u00f6tavaid container'eid\ndocker ps\n\n# Vaadake container'i logisid\ndocker logs my-docker-app\n\n# Sisenege container'isse (debugging)\ndocker exec -it my-docker-app sh\n\n# Container'ist v\u00e4ljumine\nexit\n</code></pre> <p>Mida need k\u00e4sud teevad? - <code>docker ps</code> - n\u00e4itab t\u00f6\u00f6tavaid container'eid - <code>docker logs</code> - n\u00e4itab container'i v\u00e4ljundit - <code>docker exec -it</code> - lubab container'isse siseneda</p>"},{"location":"docker_fundamentals/homework/#42-containerite-peatamine-ja-kustutamine","title":"4.2 Container'ite peatamine ja kustutamine","text":"<pre><code># Peatage container\ndocker stop my-docker-app\n\n# Kustutage container\ndocker rm my-docker-app\n\n# Teha m\u00f5lemat korraga\ndocker rm -f my-docker-app\n\n# Kustutage ka image (kui vaja)\ndocker rmi my-dashboard\n</code></pre>"},{"location":"docker_fundamentals/homework/#43-docker-compose-haldamine","title":"4.3 Docker-compose haldamine","text":"<pre><code># Vaadake docker-compose staatust\ndocker-compose ps\n\n# Vaadake logisid\ndocker-compose logs\n\n# Peatage k\u00f5ik teenused\ndocker-compose down\n\n# K\u00e4ivitage uuesti\ndocker-compose up -d\n</code></pre>"},{"location":"docker_fundamentals/homework/#44-ressursside-kasutus","title":"4.4 Ressursside kasutus","text":"<pre><code># Vaadake container'ite ressursside kasutust\ndocker stats\n\n# Vaadake Docker disk kasutust\ndocker system df\n\n# Puhastage unused resources\ndocker system prune -f\n</code></pre> <p>Commit haldamise oskused: <pre><code>git add .\ngit commit -m \"\u00d5ppisin container'ite haldamist - start, stop, logs, cleanup\"\n</code></pre></p>"},{"location":"docker_fundamentals/homework/#samm-5-loplik-dokumentatsioon-10-min","title":"\ud83d\udccb Samm 5: L\u00f5plik dokumentatsioon (10 min)","text":""},{"location":"docker_fundamentals/homework/#51-muutke-readmemd-faili","title":"5.1 Muutke README.md faili","text":"<p>Fail: <code>README.md</code> (kopeerige ja t\u00e4itke oma andmed): <pre><code># System Status Dashboard - [TEIE NIMI]\n\n## Mis see on?\nSystem Status Dashboard on veebirakendus, mis n\u00e4itab container informatsiooni,\ns\u00fcsteemi olekut ja v\u00f5imaldab testida erinevaid operations.\n\n## Kuidas k\u00e4ivitada?\n\n### Docker'iga:\n```bash\ndocker build -t dashboard .\ndocker run -d -p 8080:80 dashboard\n# Avage: http://localhost:8080?type=Docker\n</code></pre></p>"},{"location":"docker_fundamentals/homework/#podmaniga","title":"Podman'iga:","text":"<pre><code>podman build -t dashboard .\npodman run -d -p 8081:80 dashboard  \n# Avage: http://localhost:8081?type=Podman\n</code></pre>"},{"location":"docker_fundamentals/homework/#docker-composeiga","title":"Docker-compose'iga:","text":"<pre><code>docker-compose up -d\n# Docker: http://localhost:8080?type=Docker\n# Podman: http://localhost:8081?type=Podman\n</code></pre>"},{"location":"docker_fundamentals/homework/#funktsioonid","title":"Funktsioonid","text":"<ul> <li>System status monitoring</li> <li>Container runtime detection</li> <li>Interactive operations testing</li> <li>Real-time uptime counter</li> <li>Health check endpoint</li> <li>Custom nginx configuration</li> </ul>"},{"location":"docker_fundamentals/homework/#keskkonnamuutujad","title":"Keskkonnamuutujad","text":"Muutuja Kirjeldus <code>CONTAINER_TYPE</code> N\u00e4itab Docker v\u00f5i Podman <code>DEPLOY_DATE</code> Millal container deployiti"},{"location":"docker_fundamentals/homework/#tervise-kontroll","title":"Tervise kontroll","text":"<p>K\u00fclastage <code>/health</code> endpoint'i container'i tervise staatuse kontrollimiseks.</p>"},{"location":"docker_fundamentals/homework/#ekraanipildid","title":"Ekraanipildid","text":"<p>[Lisage oma screenshot'id siia]</p>"},{"location":"docker_fundamentals/homework/#mida-ma-oppisin","title":"Mida ma \u00f5ppisin","text":"<ul> <li>[Teie kogemus 1]</li> <li>[Teie kogemus 2] </li> <li>[Teie kogemus 3]</li> </ul>"},{"location":"docker_fundamentals/homework/#probleemid-ja-lahendused","title":"Probleemid ja lahendused","text":"<p>Probleem: [Kirjeldage probleem mis teil tekkis] Lahendus: [Kuidas te selle lahendasite] <pre><code>### 5.2 Tehke screenshot'id\n\n**Vajalikud screenshot'id:**\n1. Dashboard t\u00f6\u00f6tab Docker'is: `http://localhost:8080?type=Docker`\n2. Dashboard t\u00f6\u00f6tab Podman'is: `http://localhost:8081?type=Podman`  \n3. Terminal output: `docker ps` ja `podman ps`\n4. Tervise kontrolli test: `curl http://localhost:8082/health`\n\n**Salvestage screenshot'id `screenshots/` kausta.**\n\n---\n\n### 5.2 L\u00f5plik push oma branch'iga\n\n```bash\n# Veenduge, et k\u00f5ik on commit'itud\ngit add .\ngit commit -m \"L\u00f5plik esitamine: Docker kodut\u00f6\u00f6 valmis - k\u00f5ik containerid testitud\"\n\n# Push final version\ngit push origin homework-TEIE-NIMI\n\n# GitHub'is saate luua Pull Request \u00f5petajale\n# Teacher repository \u2192 Pull Requests \u2192 New Pull Request\n</code></pre></p>"},{"location":"docker_fundamentals/homework/#esitamise-nouded","title":"\ud83d\udccb Esitamise n\u00f5uded","text":""},{"location":"docker_fundamentals/homework/#repository-peab-sisaldama","title":"Repository peab sisaldama:","text":"<pre><code>docker-fundamentals-homework/\n\u251c\u2500\u2500 README.md                    # Projekti kirjeldus\n\u251c\u2500\u2500 index.html                   # Veebisaidi fail\n\u251c\u2500\u2500 Dockerfile                   # Container definitsioon\n\u251c\u2500\u2500 docker-compose.yml           # Multi-container setup\n\u2514\u2500\u2500 screenshots/ (valikuline)    # T\u00f6\u00f6tavate container'ite pildid\n</code></pre>"},{"location":"docker_fundamentals/homework/#esitamine","title":"Esitamine:","text":"<ol> <li>GitHub Pull Request link esitage \u00f5ppetoolis</li> <li>Oma branch teacher repository's: <code>homework-TEIE-NIMI</code></li> <li>T\u00f6\u00f6tav demonstratsioon - \u00f5petaja saab checkout'ida ja testida</li> </ol>"},{"location":"docker_fundamentals/homework/#repository-peab-naitama","title":"Repository peab n\u00e4itama:","text":"<ul> <li>T\u00f6\u00f6tav rakendus Docker'is</li> <li>T\u00f6\u00f6tav rakendus Podman'is</li> <li>docker-compose setup</li> <li>Selge dokumentatsioon README.md's</li> <li>Git commit history n\u00e4itab progressi</li> </ul>"},{"location":"docker_fundamentals/lab/","title":"Docker Fundamentals Lab: Docker &amp; Podman P\u00f5hilised Kogemused","text":""},{"location":"docker_fundamentals/lab/#eesmark-feel-the-difference-container-fundamentals-hands-on-2h","title":"Eesm\u00e4rk: \"Feel the difference\" - Container fundamentals hands-on (2h)","text":"<p>T\u00e4na \u00f5pite konteinerite alused praktikas. Fookus on m\u00f5istmisel, mitte s\u00fcntaksil.</p>"},{"location":"docker_fundamentals/lab/#labi-eesmargid","title":"\ud83c\udfaf Lab'i eesm\u00e4rgid","text":"<p>P\u00e4rast seda lab'i teate: - Miks konteinerid on kiired (kogesite ise) - Kuidas ehitada lihtsat rakendust (k\u00e4ed-k\u00fcljes) - Docker vs Podman erinevusi (side-by-side) - P\u00f5hilisi troubleshooting'u oskusi (\u00f5ppinud vigadest)</p>"},{"location":"docker_fundamentals/lab/#samm-1-container-speed-experience-30-min","title":"\ud83d\udccb Samm 1: Container Speed Experience (30 min)","text":""},{"location":"docker_fundamentals/lab/#ulesanne-11-feel-the-speed-10-min","title":"\u00dclesanne 1.1: \"Feel the Speed\" (10 min)","text":"<p>V\u00f5rdle VM vs Container startup aegu:</p> <pre><code># 1. Testi container kiirus\ntime docker run hello-world\n# M\u00e4rkige aeg: _____ sekundit\n\n# 2. Testi teist container'it  \ntime docker run alpine echo \"Hello from container\"\n# M\u00e4rkige aeg: _____ sekundit\n\n# 3. V\u00f5rdle VM'iga (kui teil on access)\n# K\u00e4ivitage VM - m\u00e4rkige aeg: _____ minutit\n</code></pre> <p>\ud83d\udd0d Mida m\u00e4rkasite? - Container startup: ___ sekundit - VM startup: ___ minutit - Erinevus: ___x kiirem</p>"},{"location":"docker_fundamentals/lab/#ulesanne-12-resource-usage-comparison-10-min","title":"\u00dclesanne 1.2: Resource Usage Comparison (10 min)","text":"<pre><code># 1. Vaadake Docker daemon resource kasutust\nps aux | grep docker\n# M\u00e4rkige RAM kasutus: _____ MB\n\n# 2. K\u00e4ivitage lihtne web server\ndocker run -d --name test-web -p 8080:80 nginx\n\n# 3. Kontrollige container'i resource kasutust\ndocker stats test-web --no-stream\n# M\u00e4rkige CPU ja RAM: CPU: ___% RAM: ___MB\n\n# 4. Testiga \u00fchendust\ncurl http://localhost:8080\n# Kas t\u00f6\u00f6tab? \u2705/\u274c\n</code></pre> <p>\ud83e\uddf9 Cleanup: <pre><code>docker stop test-web &amp;&amp; docker rm test-web\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#ulesanne-13-basic-commands-discovery-10-min","title":"\u00dclesanne 1.3: Basic Commands Discovery (10 min)","text":"<p>Avastage k\u00e4ske ja vaadake, mis juhtub:</p> <pre><code># Millised image'id teil on?\ndocker images\n\n# Millised containers t\u00f6\u00f6tavad?\ndocker ps\ndocker ps -a  # Mis erinevus?\n\n# Palju ruumi v\u00f5tab Docker?\ndocker system df\n\n# K\u00fcsimus: Miks \"hello-world\" image on endiselt olemas?\n# Vastus: _______________________\n</code></pre>"},{"location":"docker_fundamentals/lab/#samm-2-build-your-first-app-45-min","title":"\ud83d\udce6 Samm 2: Build Your First App (45 min)","text":""},{"location":"docker_fundamentals/lab/#21-prepare-simple-web-app-10-min","title":"2.1: Prepare Simple Web App (10 min)","text":"<p>Looge t\u00f6\u00f6kaust: <pre><code>mkdir ~/docker-fundamentals-lab &amp;&amp; cd ~/docker-fundamentals-lab\n</code></pre></p> <p>Looge lihtne HTML fail: <pre><code>&lt;!-- index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;My Container App&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial; text-align: center; margin-top: 100px; }\n        .container { background: #f0f0f0; padding: 20px; border-radius: 10px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;\ud83d\udc33 My First Container App!&lt;/h1&gt;\n        &lt;p&gt;Server: &lt;span id=\"hostname\"&gt;Loading...&lt;/span&gt;&lt;/p&gt;\n        &lt;p&gt;Time: &lt;span id=\"time\"&gt;&lt;/span&gt;&lt;/p&gt;\n        &lt;script&gt;\n            document.getElementById('time').innerText = new Date();\n            fetch('/hostname').then(r =&gt; r.text()).then(h =&gt; \n                document.getElementById('hostname').innerText = h\n            ).catch(() =&gt; \n                document.getElementById('hostname').innerText = 'Container ID: Unknown'\n            );\n        &lt;/script&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#22-write-your-first-dockerfile-15-min","title":"2.2: Write Your First Dockerfile (15 min)","text":"<p>Template (t\u00e4itke l\u00fcngad): <pre><code># TODO: Vali base image (nginx:alpine)\nFROM ______\n\n# TODO: Kopeeri HTML fail \u00f5igesse kohta \n# Nginx serveerib faile kaustast: /usr/share/nginx/html/\nCOPY ______ ______\n\n# TODO: Avage port 80\nEXPOSE ______\n\n# CMD juba defined base image'is!\n</code></pre></p> <p>Vastused (p\u00e4rast katsetamist): <pre><code>FROM nginx:alpine\nCOPY index.html /usr/share/nginx/html/\nEXPOSE 80\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#23-build-and-test-10-min","title":"2.3: Build and Test (10 min)","text":"<pre><code># 1. Build image\ndocker build -t my-web-app .\n\n# Kas build \u00f5nnestus? \u2705/\u274c\n# Kui ei, siis vaadake error message'i ja parandage\n\n# 2. Run container\ndocker run -d --name my-app -p 8080:80 my-web-app\n\n# 3. Test\ncurl http://localhost:8080\n# V\u00f5i avage brauseris: http://localhost:8080\n\n# Kas n\u00e4ete oma HTML'i? \u2705/\u274c\n</code></pre>"},{"location":"docker_fundamentals/lab/#24-modify-and-rebuild-10-min","title":"2.4: Modify and Rebuild (10 min)","text":"<p>Muutke HTML faili: <pre><code>&lt;!-- Lisa midagi uut, n\u00e4iteks: --&gt;\n&lt;p&gt;Version: 2.0 - Updated!&lt;/p&gt;\n&lt;p&gt;Student: [Your Name]&lt;/p&gt;\n</code></pre></p> <p>Rebuild ja test: <pre><code># Build uus versioon\ndocker build -t my-web-app:v2 .\n\n# Stop vana container\ndocker stop my-app &amp;&amp; docker rm my-app\n\n# Start uus container\ndocker run -d --name my-app-v2 -p 8080:80 my-web-app:v2\n\n# Test\ncurl http://localhost:8080\n# Kas n\u00e4ete muudatusi? \u2705/\u274c\n</code></pre></p> <p>\ud83e\uddf9 Cleanup: <pre><code>docker stop my-app-v2 &amp;&amp; docker rm my-app-v2\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#samm-3-docker-vs-podman-side-by-side-30-min","title":"\ud83d\udd27 Samm 3: Docker vs Podman Side-by-Side (30 min)","text":""},{"location":"docker_fundamentals/lab/#31-install-podman-if-needed-5-min","title":"3.1: Install Podman (if needed) (5 min)","text":"<pre><code># Ubuntu/Debian\nsudo apt update &amp;&amp; sudo apt install -y podman\n\n# Test installation\npodman --version\n</code></pre>"},{"location":"docker_fundamentals/lab/#32-same-commands-different-tools-15-min","title":"3.2: Same Commands, Different Tools (15 min)","text":"<p>K\u00e4ivitage SAMA rakendus m\u00f5lemas s\u00fcsteemis:</p> <p>Docker versio: <pre><code># Terminal 1: Docker\ndocker run -d --name web-docker -p 8081:80 my-web-app:v2\n</code></pre></p> <p>Podman versio: <pre><code># Terminal 2: Podman  \npodman run -d --name web-podman -p 8082:80 my-web-app:v2\n</code></pre></p> <p>Teste m\u00f5lemat: <pre><code># Docker test\ncurl http://localhost:8081\n\n# Podman test  \ncurl http://localhost:8082\n\n# M\u00f5lemad t\u00f6\u00f6tavad? \u2705/\u274c\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#33-observe-the-differences-10-min","title":"3.3: Observe the Differences (10 min)","text":"<p>Resource usage: <pre><code># Docker daemon\nps aux | grep dockerd\n# M\u00e4rkige RAM kasutus: _____ MB\n\n# Podman (no daemon!)\nps aux | grep podman\n# M\u00e4rkige RAM kasutus: _____ MB\n</code></pre></p> <p>User permissions: <pre><code># Docker (check groups)\ngroups $USER\n# Kas \"docker\" on listis? \u2705/\u274c\n\n# Podman (no special groups needed)\npodman run --rm alpine id\n# Container sees: uid=0 (root)\n\nwhoami\n# Host sees: [your username]\n</code></pre></p> <p>Commands: <pre><code># Proovige sama k\u00e4sku\ndocker ps\npodman ps\n\n# Kas output on sarnane? \u2705/\u274c\n</code></pre></p> <p>\ud83e\uddf9 Cleanup: <pre><code>docker stop web-docker &amp;&amp; docker rm web-docker\npodman stop web-podman &amp;&amp; podman rm web-podman\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#samm-4-troubleshooting-networks-15-min","title":"\ud83d\udc1b Samm 4: Troubleshooting &amp; Networks (15 min)","text":""},{"location":"docker_fundamentals/lab/#41-fix-broken-container-10-min","title":"4.1: Fix Broken Container (10 min)","text":"<p>Antakse teile \"broken\" Dockerfile: <pre><code>FROM nginx:alpine\nCOPY index.html /wrong/path/\nEXPOSE 80\n</code></pre></p> <p>Proovige ehitada: <pre><code>docker build -t broken-app .\ndocker run -d --name broken -p 8083:80 broken-app\ncurl http://localhost:8083\n</code></pre></p> <p>Diagnoosimine: <pre><code># Vaadake loge\ndocker logs broken\n\n# Minge sisse ja uurige\ndocker exec -it broken sh\nls /usr/share/nginx/html/  # Kas index.html on siin?\nexit\n</code></pre></p> <p>\ud83d\udd0d K\u00fcsimus: Miks ei t\u00f6\u00f6ta? Vastus: ________________</p> <p>Parandage ja teste uuesti: <pre><code>FROM nginx:alpine\nCOPY index.html /usr/share/nginx/html/\nEXPOSE 80\n</code></pre></p>"},{"location":"docker_fundamentals/lab/#ulesanne-42-simple-network-test-5-min","title":"\u00dclesanne 4.2: Simple Network Test (5 min)","text":"<pre><code># K\u00e4ivitage 2 container'it custom network'is\ndocker network create test-network\n\ndocker run -d --name app1 --network test-network nginx:alpine\ndocker run -d --name app2 --network test-network nginx:alpine\n\n# Test connectivity\ndocker exec app1 ping app2\n# Kas t\u00f6\u00f6tab? \u2705/\u274c\n\n# Cleanup\ndocker stop app1 app2 &amp;&amp; docker rm app1 app2\ndocker network rm test-network\n</code></pre>"},{"location":"docker_fundamentals/lab/#samm-3-volume-persistence-test-20-min","title":"\ud83c\udfaf Samm 3: Volume Persistence Test (20 min)","text":""},{"location":"docker_fundamentals/lab/#ulesanne-51-data-persistence-challenge-15-min","title":"\u00dclesanne 5.1: Data Persistence Challenge (15 min)","text":"<p>Create persistent web content: <pre><code># 1. Create volume\ndocker volume create web-content\n\n# 2. Run container with volume\ndocker run -d --name web-persistent \\\n    -p 8084:80 \\\n    -v web-content:/usr/share/nginx/html \\\n    nginx:alpine\n\n# 3. Add custom content\ndocker exec web-persistent sh -c 'echo \"&lt;h1&gt;Persistent Data!&lt;/h1&gt;\" &gt; /usr/share/nginx/html/index.html'\n\n# 4. Test\ncurl http://localhost:8084\n# Kas n\u00e4ete custom content'i? \u2705/\u274c\n\n# 5. Destroy container (but keep volume!)\ndocker stop web-persistent &amp;&amp; docker rm web-persistent\n\n# 6. Create NEW container with SAME volume\ndocker run -d --name web-new \\\n    -p 8084:80 \\\n    -v web-content:/usr/share/nginx/html \\\n    nginx:alpine\n\n# 7. Test again\ncurl http://localhost:8084\n# Kas andmed on alles? \u2705/\u274c\n</code></pre></p> <p>\ud83d\udd0d K\u00fcsimus: Miks andmed j\u00e4id alles? Vastus: ________________</p>"},{"location":"docker_fundamentals/lab/#ulesanne-52-development-workflow-5-min","title":"\u00dclesanne 5.2: Development Workflow (5 min)","text":"<pre><code># Mount current directory\ndocker run -it --rm \\\n    -v $(pwd):/workspace \\\n    -w /workspace \\\n    alpine sh\n\n# Inside container:\necho \"Container can modify host files\" &gt; test.txt\nexit\n\n# Check on host:\ncat test.txt\n# Kas fail on host'is? \u2705/\u274c\n\n# Cleanup\nrm test.txt\n</code></pre>"},{"location":"docker_fundamentals/lab/#samm-5-lab-summary-reflection","title":"\ud83c\udf93 Samm 5: Lab Summary &amp; Reflection","text":""},{"location":"docker_fundamentals/lab/#mida-te-kogesite","title":"Mida te kogesite:","text":"<p>Container Speed: - Container startup: ___ sekundit vs VM: ___ minutit - Resource efficiency: V\u00e4hem overhead</p> <p>Building Apps: - Dockerfile = retsept rakenduse loomiseks - Layer caching optimiseerib rebuild kiirust</p> <p>Docker vs Podman: - Docker: Daemon architecture, vajab special group - Podman: Daemonless, rootless security</p> <p>Troubleshooting: - <code>docker logs</code> - esimene debug samm - <code>docker exec</code> - konteiner investigation - Volume'id s\u00e4ilitavad andmeid</p>"},{"location":"docker_fundamentals/lab/#jargmised-sammud","title":"\ud83d\ude80 J\u00e4rgmised sammud:","text":"<p>Kodut\u00f6\u00f6: S\u00fcvauurige Docker vs Podman v\u00f5rdlust J\u00e4rgmine lab: Docker Compose multi-container applications</p>"},{"location":"docker_fundamentals/lab/#boonusulesanded-dockeri-oskajatele","title":"\ud83d\ude80 BOONUS\u00dcLESANDED (Docker'i oskajatele)","text":""},{"location":"docker_fundamentals/lab/#b1-multi-stage-docker-builds-20-min","title":"B1: Multi-stage Docker Builds (20 min)","text":"<pre><code># Optimized Node.js build\nFROM node:18-alpine AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\nFROM node:18-alpine AS runtime\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n\n# Build: docker build -t optimized-app .\n</code></pre>"},{"location":"docker_fundamentals/lab/#b2-docker-security-ja-best-practices-25-min","title":"B2: Docker Security ja Best Practices (25 min)","text":"<pre><code># Non-root user\nFROM alpine:latest\nRUN addgroup -g 1001 appgroup &amp;&amp; \\\n    adduser -u 1001 -G appgroup -s /bin/sh -D appuser\nUSER appuser\n\n# Security scanning\ndocker scout cves myapp:latest\ndocker security scan myapp:latest\n\n# Read-only filesystem\ndocker run --read-only --tmpfs /tmp myapp:latest\n\n# Resource limits\ndocker run --memory=512m --cpus=1.5 myapp:latest\n</code></pre>"},{"location":"docker_fundamentals/lab/#b3-advanced-networking-ja-storage-20-min","title":"B3: Advanced Networking ja Storage (20 min)","text":"<pre><code># Custom networks\ndocker network create --driver bridge \\\n  --subnet=172.20.0.0/16 \\\n  --gateway=172.20.0.1 \\\n  custom-network\n\n# Named volumes with options\ndocker volume create --driver local \\\n  --opt type=bind \\\n  --opt device=/host/path \\\n  --opt o=bind \\\n  custom-volume\n\n# Network debugging\ndocker exec container-name netstat -tulpn\ndocker exec container-name ss -tulpn\n</code></pre>"},{"location":"docker_fundamentals/lab/#b4-docker-performance-monitoring-15-min","title":"B4: Docker Performance Monitoring (15 min)","text":"<pre><code># Container stats\ndocker stats --format \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"\n\n# System events\ndocker events --filter container=myapp\n\n# Detailed inspection\ndocker inspect myapp | jq '.[].[0].State'\n\n# Health checks\ndocker run --health-cmd='curl -f http://localhost:3000/health' \\\n           --health-interval=30s \\\n           --health-timeout=10s \\\n           --health-retries=3 \\\n           myapp:latest\n</code></pre>"},{"location":"docker_fundamentals/lab/#b5-docker-compose-advanced-25-min","title":"B5: Docker Compose Advanced (25 min)","text":"<pre><code># docker-compose.advanced.yml\nversion: '3.8'\nservices:\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile.prod\n      args:\n        - NODE_ENV=production\n    deploy:\n      replicas: 3\n      restart_policy:\n        condition: on-failure\n        delay: 5s\n        max_attempts: 3\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    secrets:\n      - db_password\n    configs:\n      - app_config\n\nsecrets:\n  db_password:\n    file: ./secrets/db_password.txt\n\nconfigs:\n  app_config:\n    file: ./configs/app.conf\n</code></pre> <p>H\u00e4sti tehtud! Teil on n\u00fc\u00fcd nii p\u00f5hi- kui ka ekspert-tasemel container kogemused! \ud83d\udc33</p>"},{"location":"docker_fundamentals/lecture/","title":"\ud83d\udcda N\u00e4dal 19: Docker Fundamentals","text":""},{"location":"docker_fundamentals/lecture/#teemad-container-technology-overview-docker-installation-ja-basic-commands-dockerfile-creation-docker-networking-ja-volumes-podman-introduction-ja-comparison","title":"Teemad: Container technology overview, Docker installation ja basic commands, Dockerfile creation, Docker networking ja volumes, Podman introduction ja comparison","text":"<p>Eelmisel n\u00e4dalal \u00f5ppisime Ansible role'e. T\u00e4na astume j\u00e4rgmisesse dimensiooni - konteinerite maailm.</p> <p>M\u00f5tle konteineritele kui LEGO klotside s\u00fcsteemile - iga konteiner on \u00fcks klots, mis saab kiiresti kokku panna suuremateks rakendusteks.</p>"},{"location":"docker_fundamentals/lecture/#osa-0-docker-installatsioon-ja-pohilised-moisted","title":"Osa 0: Docker Installatsioon ja P\u00f5hilised M\u00f5isted","text":""},{"location":"docker_fundamentals/lecture/#loeng-190-getting-started-with-docker-15-min","title":"Loeng 19.0: Getting Started with Docker (15 min)","text":""},{"location":"docker_fundamentals/lecture/#mis-on-docker","title":"Mis on Docker?","text":"<p>Docker = t\u00f6\u00f6riist konteinerite loomiseks ja haldamiseks.</p> <p>Lihtne definitsioon: Docker v\u00f5imaldab sul pakkida rakenduse koos k\u00f5igi s\u00f5ltuvustega \u00fchte \"kasti\" (konteiner), mis t\u00f6\u00f6tab igal arvutil.</p>"},{"location":"docker_fundamentals/lecture/#pohilised-moisted","title":"P\u00f5hilised m\u00f5isted","text":"<p>Image = Mall konteineri jaoks (nagu CD-ROM) - N\u00e4iteks: <code>nginx:alpine</code>, <code>python:3.9</code>, <code>mysql:8.0</code> - Sisaldab OS'i, rakendust ja s\u00f5ltuvusi</p> <p>Container = K\u00e4ivitatud image (nagu programm arvutis) - Elab ja t\u00f6\u00f6tab - V\u00f5ib peatada, kustutada, taask\u00e4ivitada</p> <p>Dockerfile = Retsept image'i loomiseks - Tekstifail, mis kirjeldab, kuidas image ehitada</p> <p>Registry = Pood image'ite jaoks (Docker Hub) - Nagu App Store, aga konteinerite jaoks</p>"},{"location":"docker_fundamentals/lecture/#docker-installatsioon","title":"Docker installatsioon","text":""},{"location":"docker_fundamentals/lecture/#ubuntudebian","title":"Ubuntu/Debian:","text":"<pre><code># 1. Update package list\nsudo apt update\n\n# 2. Install prerequisites\nsudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# 3. Add Docker's official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# 4. Add Docker repository\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# 5. Install Docker\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io\n\n# 6. Start Docker service\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# 7. Add user to docker group (v\u00e4ltida sudo kasutamist)\nsudo usermod -aG docker $USER\n\n# 8. Logout ja login uuesti, v\u00f5i k\u00e4ivita:\nnewgrp docker\n</code></pre>"},{"location":"docker_fundamentals/lecture/#macos","title":"macOS:","text":"<pre><code># Download ja install Docker Desktop\n# https://www.docker.com/products/docker-desktop\n</code></pre>"},{"location":"docker_fundamentals/lecture/#windows","title":"Windows:","text":"<pre><code># Download ja install Docker Desktop\n# https://www.docker.com/products/docker-desktop\n</code></pre>"},{"location":"docker_fundamentals/lecture/#esimene-docker-kask","title":"Esimene Docker k\u00e4sk","text":"<pre><code># Testi installatsiooni\ndocker --version\n\n# K\u00e4ivita esimene konteiner\ndocker run hello-world\n\n# Mida see tegi?\n# 1. Laadis hello-world image Docker Hub'ist\n# 2. K\u00e4ivitas konteineri\n# 3. Konteiner tervitas sind ja v\u00e4ljus\n</code></pre>"},{"location":"docker_fundamentals/lecture/#docker-arhitektuur","title":"Docker arhitektuur","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Docker Client                 \u2502\n\u2502     (docker k\u00e4skude kasutaja)          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Docker Daemon                 \u2502\n\u2502     (background service)                \u2502\n\u2502  - Image management                     \u2502\n\u2502  - Container lifecycle                  \u2502\n\u2502  - Networking                          \u2502\n\u2502  - Storage                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Containers                    \u2502\n\u2502  [Container 1] [Container 2] [Container 3]\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"docker_fundamentals/lecture/#docker-hub-imageite-pood","title":"Docker Hub - Image'ite pood","text":"<p>Docker Hub = Suurim konteinerite registry - https://hub.docker.com - Tuhanded valmis image'id - Nagu GitHub, aga konteinerite jaoks</p> <p>Populaarsed image'id: - <code>nginx</code> - Web server - <code>mysql</code> - Andmebaas - <code>python</code> - Python runtime - <code>node</code> - Node.js runtime - <code>ubuntu</code> - Ubuntu OS - <code>alpine</code> - V\u00e4ike Linux OS</p>"},{"location":"docker_fundamentals/lecture/#esimene-praktiline-naide","title":"Esimene praktiline n\u00e4ide","text":"<pre><code># 1. K\u00e4ivita web server\ndocker run -d -p 8080:80 nginx\n\n# Mida see teeb?\n# -d = detached (taustal)\n# -p 8080:80 = port mapping (host:container)\n# nginx = image nimi\n\n# 2. Testi brauseris\n# Avage: http://localhost:8080\n\n# 3. Vaata t\u00f6\u00f6tavaid konteinereid\ndocker ps\n\n# 4. Peata konteiner\ndocker stop $(docker ps -q)\n\n# 5. Kustuta konteiner\ndocker rm $(docker ps -aq)\n</code></pre>"},{"location":"docker_fundamentals/lecture/#kasulikud-kasud-algajale","title":"Kasulikud k\u00e4sud algajale","text":"<pre><code># Image'ite haldamine\ndocker images                    # N\u00e4ita k\u00f5iki image'eid\ndocker pull nginx               # Lae image alla\ndocker rmi nginx                # Kustuta image\n\n# Container'ite haldamine\ndocker ps                       # N\u00e4ita t\u00f6\u00f6tavaid konteinereid\ndocker ps -a                    # N\u00e4ita k\u00f5iki konteinereid\ndocker logs container_name      # Vaata konteineri loge\ndocker exec -it container_name bash  # Sisene konteinerisse\n\n# S\u00fcsteemi haldamine\ndocker system df                # Vaata ruumi kasutust\ndocker system prune             # Puhasta kasutamata objektid\ndocker info                     # Docker info\n</code></pre>"},{"location":"docker_fundamentals/lecture/#levinumad-vead-ja-lahendused","title":"Levinumad vead ja lahendused","text":"<p>Viga 1: \"Permission denied\" <pre><code># Probleem: User pole docker grupis\n# Lahendus:\nsudo usermod -aG docker $USER\n# Logout ja login uuesti\n</code></pre></p> <p>Viga 2: \"Cannot connect to the Docker daemon\" <pre><code># Probleem: Docker daemon ei t\u00f6\u00f6ta\n# Lahendus:\nsudo systemctl start docker\nsudo systemctl enable docker\n</code></pre></p> <p>Viga 3: \"Port already in use\" <pre><code># Probleem: Port juba kasutusel\n# Lahendus:\ndocker ps                      # Leia konfliktne konteiner\ndocker stop container_name     # Peata see\n# V\u00f5i kasuta teist porti: -p 8081:80\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#docker-vs-traditsiooniline-arendus","title":"Docker vs traditsiooniline arendus","text":"<p>Traditsiooniline l\u00e4henemine: <pre><code>\"See t\u00f6\u00f6tab minu arvutil\"\n- Installeri Python 3.9\n- Installeri nginx\n- Seadista MySQL\n- Konfigureeri firewall\n- \"Miks see ei t\u00f6\u00f6ta sinu arvutil?\"\n</code></pre></p> <p>Docker l\u00e4henemine: <pre><code>\"See t\u00f6\u00f6tab igal arvutil\"\ndocker run my-app\n- K\u00f5ik s\u00f5ltuvused on image's\n- Sama keskkond igal pool\n- Kiire deployment\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#jargmised-sammud","title":"J\u00e4rgmised sammud","text":"<p>P\u00e4rast installatsiooni ja p\u00f5hiliste k\u00e4skude \u00f5ppimist: 1. Container vs VM - miks konteinerid on paremad? 2. Dockerfile - kuidas luua oma image'eid? 3. Networking - kuidas konteinerid suhtlevad? 4. Volumes - kuidas s\u00e4ilitada andmeid?</p>"},{"location":"docker_fundamentals/lecture/#osa-1-containers-vs-vms","title":"Osa 1: Containers vs VMs","text":""},{"location":"docker_fundamentals/lecture/#loeng-191-container-technology-overview-12-min","title":"Loeng 19.1: Container Technology Overview (12 min)","text":""},{"location":"docker_fundamentals/lecture/#luhike-evolutsioon","title":"L\u00fchike evolutsioon","text":"<pre><code>graph TB\n    subgraph \"\ud83c\udfd7\ufe0f F\u00fc\u00fcsilised serverid (kuni 2000)\"\n        Physical1[Apache + Linux&lt;br/&gt;Server 1]\n        Physical2[MySQL + Linux&lt;br/&gt;Server 2]\n        Physical3[Exchange + Windows&lt;br/&gt;Server 3]\n    end\n\n    subgraph \"\ud83d\udda5\ufe0f Virtuaalne masina (2000-2010)\"\n        HostOS[Host OS]\n        Hypervisor[Hypervisor]\n        VM1[VM1&lt;br/&gt;OS + App]\n        VM2[VM2&lt;br/&gt;OS + App]\n        VM3[VM3&lt;br/&gt;OS + App]\n\n        HostOS --&gt; Hypervisor\n        Hypervisor --&gt; VM1\n        Hypervisor --&gt; VM2\n        Hypervisor --&gt; VM3\n    end\n\n    subgraph \"\ud83d\udce6 Konteinerid (2013-t\u00e4na)\"\n        HostOS2[Host OS]\n        Runtime[Container Runtime]\n        Container1[App1&lt;br/&gt;10-100MB]\n        Container2[App2&lt;br/&gt;10-100MB]\n        Container3[App3&lt;br/&gt;10-100MB]\n\n        HostOS2 --&gt; Runtime\n        Runtime --&gt; Container1\n        Runtime --&gt; Container2\n        Runtime --&gt; Container3\n    end\n\n    style Physical1 fill:#ff9999\n    style Physical2 fill:#ff9999\n    style Physical3 fill:#ff9999\n    style VM1 fill:#ffcc99\n    style VM2 fill:#ffcc99\n    style VM3 fill:#ffcc99\n    style Container1 fill:#99ff99\n    style Container2 fill:#99ff99\n    style Container3 fill:#99ff99</code></pre> <p>F\u00fc\u00fcsilised serverid (kuni 2000): - \u00dcks rakendus = \u00dcks server - Probleemid: Kallis, ineffektiivne (5-15% kasutus)</p> <p>Virtuaalne masina (2000-2010): - \u00dcks server = Mitu VM'i - Iga VM vajab t\u00e4ispikka OS'i: 1-2GB RAM, 20GB disk - Parem, aga suur overhead</p> <p>Konteinerid (2013-t\u00e4na): - \u00dcks OS = Palju konteinereid - Jagavad sama OS kernel'it: 10-100MB per container - Maksimaalne efektiivsus!</p>"},{"location":"docker_fundamentals/lecture/#peamine-erinevus","title":"Peamine erinevus","text":"<p>Virtual Machine = Terve arvuti sinus arvutis - Oma OS, oma kernel, oma m\u00e4lu - Nagu eraldi korter majas</p> <p>Container = Aplikatsioon + s\u00f5ltuvused - Jagab host OS kernel'it - Nagu tuba korteris - jagad k\u00f6\u00f6k ja vannituba</p>"},{"location":"docker_fundamentals/lecture/#praktilised-numbrid","title":"Praktilised numbrid","text":"Kriteerium Virtual Machines Containers K\u00e4ivitusaeg 1-5 minutit 1-5 sekundit M\u00e4lu 1-8GB per VM 10-100MB per container Mahtuvus 10-50 per server 100-1000 per server Disk size 10-50GB 100MB-1GB"},{"location":"docker_fundamentals/lecture/#analoogia-korterimaja-vs-konteinerid","title":"Analoogia: Korterimaja vs Konteinerid","text":"<p>VM = Korterimaja: - Iga korter (VM) on eraldi - Igal on oma elekter, vesi, k\u00fcte - Turvaline, aga kallis</p> <p>Containers = \u00dchiselamu: - Jagavad infrastruktuuri (kernel) - Kiirem, odavam - V\u00e4hem isolatsiooni</p>"},{"location":"docker_fundamentals/lecture/#millal-kasutada-mida","title":"Millal kasutada mida?","text":"<p>Kasuta VM'e kui: - Erinevad OS'id (Windows + Linux) - Maksimum turvalisus (pank, haigla) - Legacy s\u00fcsteemid - Pikaajalised teenused</p> <p>Kasuta konteinereid kui: - Kaasaegsed web rakendused - Development/testing - Microservices - CI/CD pipelines - Kiire deployment</p>"},{"location":"docker_fundamentals/lecture/#kiire-naide","title":"Kiire n\u00e4ide","text":"<p>WordPress sait:</p> <p>VM lahendus: - 3 VM'i: Web (2GB), Database (4GB), Load Balancer (1GB) - Kokku: 7GB RAM, 90GB disk, 6 min deployment</p> <p>Container lahendus: - 3 konteinerit: Web, DB, LB - Kokku: 650MB RAM, 650MB disk, 17 sek deployment</p> <p>Tulemus: 10x v\u00e4hem ressursse, 20x kiirem!</p>"},{"location":"docker_fundamentals/lecture/#kokkuvote","title":"Kokkuv\u00f5te","text":"<p>Konteinerid ei asenda VM'e - nad lahendavad erinevaid probleeme: - VM'id = maksimaalne isolatsioon ja turvalisus - Konteinerid = maksimaalne efektiivsus ja kiirus</p>"},{"location":"docker_fundamentals/lecture/#osa-2-docker-commands","title":"Osa 2: Docker Commands","text":""},{"location":"docker_fundamentals/lecture/#loeng-192-docker-cli-basics-15-min","title":"Loeng 19.2: Docker CLI Basics (15 min)","text":""},{"location":"docker_fundamentals/lecture/#docker-cli-pohialused","title":"Docker CLI p\u00f5hialused","text":"<p>Docker CLI on teie peamine t\u00f6\u00f6riist. \u00d5pime AINULT Docker k\u00e4ske - Podman tuleb j\u00e4rgmises loengus!</p> <pre><code>docker [OPTIONS] COMMAND [ARG...]\n\n# N\u00e4ited:\ndocker run nginx              # K\u00e4ivita nginx\ndocker ps                     # N\u00e4ita containers\ndocker images                 # N\u00e4ita image'e\n</code></pre>"},{"location":"docker_fundamentals/lecture/#imageide-haldamine","title":"Image'ide haldamine","text":"<pre><code># 1. Image'ide allalaadimine\ndocker pull nginx             # Viimane versioon\ndocker pull nginx:1.21        # Konkreetne versioon\ndocker pull ubuntu:20.04      # Erinevad base image'id\n\n# 2. Image'ide vaatamine\ndocker images                 # K\u00f5ik lokaalsed image'id\ndocker image inspect nginx    # Detailne info\ndocker search mysql           # Otsi Docker Hub'ist\n\n# 3. Cleanup\ndocker rmi nginx              # Kustuta image\ndocker image prune            # Kustuta kasutamata image'id\n</code></pre>"},{"location":"docker_fundamentals/lecture/#containerite-kaivitamine","title":"Container'ite k\u00e4ivitamine","text":"<pre><code># P\u00f5hilised k\u00e4sud\ndocker run nginx                    # Foreground (blokeerib terminal)\ndocker run -d nginx                 # Detached (background)\ndocker run --name my-web nginx     # Anna nimi\ndocker run -p 8080:80 nginx        # Port mapping: host:container\n\n# Interaktiivne kasutamine\ndocker run -it ubuntu bash         # Interactive terminal\ndocker exec -it container_name bash # K\u00e4ivita k\u00e4sk olemasolevs\n</code></pre>"},{"location":"docker_fundamentals/lecture/#containerite-jalgimine","title":"Container'ite j\u00e4lgimine","text":"<pre><code># \u00dclevaade\ndocker ps                     # T\u00f6\u00f6tavad containers\ndocker ps -a                  # K\u00f5ik (ka peatatud)\ndocker stats                  # Live resource kasutus\ndocker logs container_name    # Container logid\ndocker logs -f container_name # Follow logs (real-time)\n</code></pre>"},{"location":"docker_fundamentals/lecture/#container-lifecycle","title":"Container lifecycle","text":"<pre><code>docker start container_name   # K\u00e4ivita peatatud\ndocker stop container_name    # Peata gracefully\ndocker restart container_name # Restart\ndocker rm container_name      # Kustuta container\ndocker rm -f container_name   # Force kustutamine\n</code></pre>"},{"location":"docker_fundamentals/lecture/#praktilised-naited","title":"Praktilised n\u00e4ited","text":""},{"location":"docker_fundamentals/lecture/#naide-1-lihtne-web-server","title":"N\u00e4ide 1: Lihtne web server","text":"<pre><code># K\u00e4ivita Nginx\ndocker run -d --name my-web -p 80:80 nginx\n\n# Testi\ncurl http://localhost\n\n# Vaata loge\ndocker logs my-web\n\n# Cleanup\ndocker stop my-web &amp;&amp; docker rm my-web\n</code></pre>"},{"location":"docker_fundamentals/lecture/#naide-2-database","title":"N\u00e4ide 2: Database","text":"<pre><code># MySQL andmebaas\ndocker run -d \\\n  --name mysql-db \\\n  -e MYSQL_ROOT_PASSWORD=secret123 \\\n  -e MYSQL_DATABASE=testdb \\\n  -p 3306:3306 \\\n  mysql:8.0\n\n# \u00dchenda\ndocker exec -it mysql-db mysql -u root -p\n</code></pre>"},{"location":"docker_fundamentals/lecture/#naide-3-development","title":"N\u00e4ide 3: Development","text":"<pre><code># Python development\ndocker run -it \\\n  --name python-dev \\\n  -v $(pwd):/workspace \\\n  -w /workspace \\\n  python:3.9 bash\n\n# N\u00fc\u00fcd saad editeerida faile host'is!\n</code></pre>"},{"location":"docker_fundamentals/lecture/#environment-variables","title":"Environment variables","text":"<pre><code># \u00dcks muutuja\ndocker run -e NODE_ENV=production node-app\n\n# Mitu muutujat\ndocker run \\\n  -e DB_HOST=localhost \\\n  -e DB_PORT=5432 \\\n  -e DEBUG=true \\\n  my-app\n\n# Env file'ist\ndocker run --env-file .env my-app\n</code></pre>"},{"location":"docker_fundamentals/lecture/#volume-mounting-quick-intro","title":"Volume mounting (quick intro)","text":"<pre><code># Host kaust \u2192 container kaust\ndocker run -v /host/path:/container/path nginx\n\n# Current directory\ndocker run -v $(pwd):/app -w /app node:16 npm install\n\n# Named volume (advanced - \u00f5pime hiljem)\ndocker volume create my-data\ndocker run -v my-data:/data nginx\n</code></pre>"},{"location":"docker_fundamentals/lecture/#kasulikud-aliased","title":"Kasulikud aliased","text":"<p>Lisa oma <code>~/.bashrc</code> faili: <pre><code>alias dps='docker ps'\nalias dpsa='docker ps -a'\nalias dimg='docker images'\nalias dstop='docker stop $(docker ps -q)'\nalias drm='docker rm $(docker ps -aq)'\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#system-cleanup","title":"System cleanup","text":"<pre><code>docker info                  # Docker info\ndocker system df             # Disk kasutus\ndocker system prune          # Kustuta unused objects\ndocker system prune -a       # Kustuta K\u00d5IK unused\n</code></pre>"},{"location":"docker_fundamentals/lecture/#algaja-vead-ja-lahendused","title":"Algaja vead ja lahendused","text":"<p>Viga 1: \"Permission denied\" <pre><code># Probleem: User pole docker grupis\nsudo usermod -aG docker $USER\n# Logout ja login uuesti\n</code></pre></p> <p>Viga 2: \"Port already in use\" <pre><code># Probleem: Port juba kasutusel\ndocker ps                    # Leia conflicting container\ndocker stop container_name   # Peata see\n# V\u00f5i kasuta teist porti: -p 8081:80\n</code></pre></p> <p>Viga 3: Container kohe v\u00e4ljub <pre><code># Kontrolli loge\ndocker logs container_name\n\n# Tihti puudub foreground protsess\n# Lisa CMD v\u00f5i ENTRYPOINT Dockerfile'is\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#napunaited","title":"N\u00e4pun\u00e4ited","text":"<ol> <li>Alati kasuta <code>-d</code> production containers jaoks</li> <li>Anna containers nimed <code>--name</code> flagiga  </li> <li>Port mapping on oluline: <code>-p host:container</code></li> <li>Cleanup regulaarselt <code>docker system prune</code></li> <li>Kasuta <code>docker logs</code> debug'imiseks</li> </ol>"},{"location":"docker_fundamentals/lecture/#osa-3-podman-introduction","title":"Osa 3: Podman Introduction","text":""},{"location":"docker_fundamentals/lecture/#loeng-193-podman-vs-docker-8-min","title":"Loeng 19.3: Podman vs Docker (8 min)","text":""},{"location":"docker_fundamentals/lecture/#mis-on-podman","title":"Mis on Podman?","text":"<p>Podman (Pod Manager) on Docker'i alternatiiv Red Hat'i poolt. </p> <p>Peamine erinevus: Podman t\u00f6\u00f6tab ILMA daemon'ita!</p>"},{"location":"docker_fundamentals/lecture/#docker-vs-podman-arhitektuur","title":"Docker vs Podman arhitektuur","text":"<p>Docker: <pre><code>You \u2192 Docker Client \u2192 Docker Daemon \u2192 Container\n              \u2191              \u2191\n           Terminal      Always running\n                         as ROOT user\n</code></pre></p> <p>Podman: <pre><code>You \u2192 Podman \u2192 Container\n         \u2191\n    Direct execution\n    NO daemon needed!\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#peamised-erinevused","title":"Peamised erinevused","text":"Aspekt Docker Podman Daemon Vajab dockerd EI vaja daemon'it Root Vajab root \u00f5igusi T\u00f6\u00f6tab rootless Startup Daemon peab t\u00f6\u00f6tama Kohe kasutamisvalmis Security docker group = root Tavaline user"},{"location":"docker_fundamentals/lecture/#installation","title":"Installation","text":"<p>Docker installation (\u00fclevaade): <pre><code>sudo apt install docker.io\nsudo systemctl start docker      # Start daemon\nsudo usermod -aG docker $USER    # Add to group\n# Logout/login required\n</code></pre></p> <p>Podman installation: <pre><code>sudo apt install podman\n# That's it! Kohe kasutamisvalmis\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#commands-peaaegu-identne","title":"Commands - peaaegu identne!","text":"<pre><code># Docker                 \u2192    Podman\ndocker pull nginx       \u2192    podman pull nginx\ndocker run -d nginx     \u2192    podman run -d nginx\ndocker ps               \u2192    podman ps\ndocker logs name        \u2192    podman logs name\ndocker exec -it name bash \u2192 podman exec -it name bash\n</code></pre> <p>Magic trick: Podman alias <pre><code># Lisa ~/.bashrc faili\nalias docker=podman\n\n# N\u00fc\u00fcd k\u00f5ik docker k\u00e4sud t\u00f6\u00f6tavad!\ndocker run nginx  # Tegelikult: podman run nginx\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#rootless-containers-suur-eelis","title":"Rootless containers (SUUR eelis!)","text":"<p>Docker probleem: <pre><code># docker group = root equivalent\ndocker run -v /:/host -it alpine chroot /host bash\n# Oled n\u00fc\u00fcd ROOT host s\u00fcsteemis! \ud83d\ude31\n</code></pre></p> <p>Podman lahendus: <pre><code># T\u00f6\u00f6tab tava userina\npodman run -it alpine id\n# uid=0(root) gid=0(root)  \u2190 Inside container\nwhoami  # user \u2190 On host\n\n# User namespace mapping:\n# Container root (0) = Host user (1000)\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#podman-unique-features","title":"Podman unique features","text":""},{"location":"docker_fundamentals/lecture/#1-pods-kubernetes-like","title":"1. Pods (Kubernetes-like)","text":"<pre><code># Loo pod (containers group)\npodman pod create --name web-pod -p 8080:80\n\n# Lisa containers pod'i\npodman run -d --pod web-pod --name web nginx\npodman run -d --pod web-pod --name cache redis\n\n# Containers pod'is jagavad:\n# - Network (localhost communication)\n# - Storage\n# - IP address\n</code></pre>"},{"location":"docker_fundamentals/lecture/#2-systemd-integration","title":"2. Systemd integration","text":"<pre><code># Generate systemd service\npodman run -d --name my-app nginx\npodman generate systemd --new --files --name my-app\n\n# Install USER service (no sudo!)\nmkdir -p ~/.config/systemd/user\nmv *.service ~/.config/systemd/user/\nsystemctl --user enable container-my-app.service\n</code></pre>"},{"location":"docker_fundamentals/lecture/#3-kubernetes-yaml-support","title":"3. Kubernetes YAML support","text":"<pre><code># Generate Kubernetes YAML\npodman generate kube web-pod &gt; pod.yaml\n\n# Deploy Kubernetes'es\nkubectl apply -f pod.yaml\n\n# V\u00f5i kasuta Podman'iga\npodman play kube pod.yaml\n</code></pre>"},{"location":"docker_fundamentals/lecture/#performance-vordlus","title":"Performance v\u00f5rdlus","text":"<p>Memory usage: - Docker: ~50-200MB daemon + containers - Podman: 0MB daemon (ainult containers)</p> <p>Startup speed: - Docker: ~2-3 sekundit (daemon communication) - Podman: ~1-2 sekundit (direct execution)</p>"},{"location":"docker_fundamentals/lecture/#millal-kasutada-mida_1","title":"Millal kasutada mida?","text":""},{"location":"docker_fundamentals/lecture/#vali-docker-kui","title":"Vali Docker kui:","text":"<ul> <li>Team tunneb juba Docker'it</li> <li>Vajad Docker-specific tooling'ut</li> <li>Windows/macOS development</li> <li>Olemasolev Docker infrastruktuur</li> </ul>"},{"location":"docker_fundamentals/lecture/#vali-podman-kui","title":"Vali Podman kui:","text":"<ul> <li>Turvalisus on prioriteet</li> <li>RHEL/CentOS/Fedora keskkonnas</li> <li>Ei taha daemon overhead'i</li> <li>Rootless containers vajalik</li> <li>Kubernetes workflows</li> </ul>"},{"location":"docker_fundamentals/lecture/#lihtne-migratsioon","title":"Lihtne migratsioon","text":"<pre><code># 1. Install Podman\nsudo apt install podman\n\n# 2. Add alias\necho \"alias docker=podman\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n\n# 3. Install podman-compose (if needed)\npip3 install podman-compose\n\n# 4. Use existing docker-compose.yml\npodman-compose up -d\n</code></pre>"},{"location":"docker_fundamentals/lecture/#praktiline-naide","title":"Praktiline n\u00e4ide","text":"<p>Same application, different tools:</p> <p>Docker: <pre><code>docker run -d --name web -p 8080:80 nginx\ndocker logs web\ndocker exec -it web bash\n</code></pre></p> <p>Podman: <pre><code>podman run -d --name web -p 8080:80 nginx\npodman logs web  \npodman exec -it web bash\n</code></pre></p> <p>Result: Identne kasutuskogemus, turvalisem backend!</p>"},{"location":"docker_fundamentals/lecture/#kokkuvote_1","title":"Kokkuv\u00f5te","text":"<ul> <li>Podman = Docker without daemon</li> <li>Commands peaaegu identne</li> <li>Turvalisem (rootless)</li> <li>Kubernetes native support</li> <li>Easy migration with aliases</li> </ul>"},{"location":"docker_fundamentals/lecture/#osa-4-dockerfile-best-practices","title":"Osa 4: Dockerfile Best Practices","text":""},{"location":"docker_fundamentals/lecture/#loeng-194-container-build-optimization-20-min","title":"Loeng 19.4: Container Build Optimization (20 min)","text":""},{"location":"docker_fundamentals/lecture/#mis-on-dockerfile","title":"Mis on Dockerfile?","text":"<p>Dockerfile = retsept teie rakenduse konteineri loomiseks.</p> <p>M\u00f5tle sellele kui IKEA m\u00f6\u00f6bli kokkupaneku juhendile - sammhaaval juhised, kuidas komponentidest valmis toode teha.</p> <pre><code># See on Dockerfile - simple text file\nFROM nginx:alpine\nCOPY index.html /usr/share/nginx/html/\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n</code></pre>"},{"location":"docker_fundamentals/lecture/#pohiinstruktsioonid","title":"P\u00f5hiinstruktsioonid","text":""},{"location":"docker_fundamentals/lecture/#from-base-image","title":"FROM - Base image","text":"<pre><code># Official image (ALATI eelistatud)\nFROM nginx:alpine\nFROM python:3.9\nFROM node:16\n\n# Konkreetne versioon (production)\nFROM node:16.14.2-alpine\nFROM python:3.9.16-slim\n\n# \u00c4RA tee nii:\nFROM nginx  # latest tag - ette arvamatu!\n</code></pre>"},{"location":"docker_fundamentals/lecture/#copy-vs-add","title":"COPY vs ADD","text":"<pre><code># COPY - lihtne kopeerimine (kasuta seda!)\nCOPY app.py /app/\nCOPY src/ /app/src/\nCOPY . /app/\n\n# ADD - automaatne ekstraktimine (harva vajad)\nADD archive.tar.gz /app/  # Automaatselt pakib lahti\nADD http://example.com/file.txt /app/  # Laeb URL'ist\n\n# REEGEL: Kasuta COPY, v\u00e4lja arvatud kui vajad ADD funktsioone\n</code></pre>"},{"location":"docker_fundamentals/lecture/#run-commands","title":"RUN - Commands","text":"<pre><code># VALE: Palju layer'eid\nRUN apt-get update\nRUN apt-get install -y curl\nRUN apt-get clean\n\n# \u00d5IGE: \u00dcks layer\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y curl &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"docker_fundamentals/lecture/#workdir-working-directory","title":"WORKDIR - Working directory","text":"<pre><code># \u00d5IGE viis\nWORKDIR /app\nCOPY package.json .\nRUN npm install\n\n# VALE viis\nCOPY package.json /app/package.json\nRUN cd /app &amp;&amp; npm install\n</code></pre>"},{"location":"docker_fundamentals/lecture/#cmd-vs-entrypoint","title":"CMD vs ENTRYPOINT","text":"<pre><code># CMD - default command (override'itav)\nCMD [\"python\", \"app.py\"]\n# docker run myapp              \u2192 python app.py\n# docker run myapp echo hello   \u2192 echo hello\n\n# ENTRYPOINT - alati jookseb\nENTRYPOINT [\"python\", \"app.py\"]  \n# docker run myapp              \u2192 python app.py\n# docker run myapp --debug      \u2192 python app.py --debug\n\n# Koos (best practice)\nENTRYPOINT [\"python\", \"app.py\"]\nCMD [\"--help\"]\n# docker run myapp              \u2192 python app.py --help\n# docker run myapp --prod       \u2192 python app.py --prod\n</code></pre>"},{"location":"docker_fundamentals/lecture/#best-practice-1-layer-cache-optimization","title":"Best Practice #1: Layer Cache Optimization","text":"<p>Probleem: Iga kord kui muudad koodi, installib dependencies uuesti.</p> <p>VALE j\u00e4rjekord: <pre><code>FROM node:16\nCOPY . /app/          # K\u00f5ik kood kopeeritakse kohe\nWORKDIR /app\nRUN npm install      # Dependencies installib uuesti kui kood muutub\nCMD [\"npm\", \"start\"]\n</code></pre></p> <p>\u00d5IGE j\u00e4rjekord: <pre><code>FROM node:16\nWORKDIR /app\n\n# 1. Copy dependency files (muutuvad harva)\nCOPY package*.json ./\nRUN npm install\n\n# 2. Copy source code (muutub tihti) \nCOPY . .\nCMD [\"npm\", \"start\"]\n</code></pre></p> <p>Miks t\u00f6\u00f6tab: Docker cache'ib layer'eid. Dependencies muutuvad harva!</p>"},{"location":"docker_fundamentals/lecture/#best-practice-2-multi-stage-builds","title":"Best Practice #2: Multi-stage Builds","text":"<p>Probleem: Build tools suurendavad production image'i.</p> <p>Single-stage (SUUR ~1GB): <pre><code>FROM node:16\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install        # Dev dependencies ka!\nCOPY . .\nRUN npm run build\nCMD [\"npm\", \"start\"]\n</code></pre></p> <p>Multi-stage (V\u00c4IKE ~200MB): <pre><code># Stage 1: Build\nFROM node:16 AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n# Stage 2: Production\nFROM node:16-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install --only=production\nCOPY --from=builder /app/dist ./dist\nCMD [\"npm\", \"start\"]\n</code></pre></p> <p>Tulemus: 80% v\u00e4iksem image!</p>"},{"location":"docker_fundamentals/lecture/#best-practice-3-security","title":"Best Practice #3: Security","text":"<pre><code># 1. Konkreetsed versioonid\nFROM node:16.14.2-alpine  # Mitte: FROM node\n\n# 2. Non-root user\nRUN addgroup -g 1001 -S appuser &amp;&amp; \\\n    adduser -S appuser -u 1001\n\n# 3. \u00c4ra jookse root'ina\nUSER appuser\n\n# 4. Ownership\nCOPY --chown=appuser:appuser . .\n\n# 5. Minimal packages\nRUN apk add --no-cache curl\n</code></pre>"},{"location":"docker_fundamentals/lecture/#best-practice-4-size-optimization","title":"Best Practice #4: Size Optimization","text":"<pre><code># 1. Alpine images (v\u00e4iksemad)\nFROM python:3.9-alpine  # vs python:3.9\n\n# 2. Clean up same layer'is\nRUN apk add --no-cache build-base &amp;&amp; \\\n    pip install -r requirements.txt &amp;&amp; \\\n    apk del build-base\n\n# 3. .dockerignore file\n</code></pre> <p>.dockerignore n\u00e4ide: <pre><code>node_modules\n.git\n*.md\n.env\ntest/\ndocs/\ncoverage/\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#praktiline-naide-python-flask","title":"Praktiline n\u00e4ide: Python Flask","text":"<pre><code>FROM python:3.9-slim\n\n# Non-root user\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\n\nWORKDIR /app\n\n# Dependencies first\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Source code last\nCOPY --chown=appuser:appuser . .\n\n# Switch to non-root\nUSER appuser\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s \\\n    CMD curl -f http://localhost:5000/health || exit 1\n\nEXPOSE 5000\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:5000\", \"app:app\"]\n</code></pre>"},{"location":"docker_fundamentals/lecture/#advanced-extreme-size-optimization","title":"Advanced: Extreme size optimization","text":"<p>Go application (5MB image!): <pre><code># Build stage\nFROM golang:1.19-alpine AS builder\nWORKDIR /app\nCOPY . .\nRUN CGO_ENABLED=0 go build -o app\n\n# Runtime stage\nFROM scratch  # T\u00fchi image!\nCOPY --from=builder /app/app /app\nEXPOSE 8080\nCMD [\"/app\"]\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#common-mistakes","title":"Common mistakes","text":""},{"location":"docker_fundamentals/lecture/#mistake-1-cached-package-lists","title":"Mistake 1: Cached package lists","text":"<pre><code># VALE\nRUN apt-get update\nRUN apt-get install -y curl  # Kasutab vana cache'i\n\n# \u00d5IGE  \nRUN apt-get update &amp;&amp; apt-get install -y curl\n</code></pre>"},{"location":"docker_fundamentals/lecture/#mistake-2-root-user","title":"Mistake 2: Root user","text":"<pre><code># VALE\nFROM ubuntu\nCOPY app /app\nCMD [\"/app\"]  # Jookseb root'ina\n\n# \u00d5IGE\nFROM ubuntu\nRUN useradd -m appuser\nUSER appuser\nCOPY app /app\nCMD [\"/app\"]\n</code></pre>"},{"location":"docker_fundamentals/lecture/#mistake-3-secrets-in-layers","title":"Mistake 3: Secrets in layers","text":"<pre><code># VALE - secrets j\u00e4\u00e4vad image'i\nCOPY secret.key /app/\nRUN echo \"PASSWORD=secret\" &gt; /app/.env\n\n# \u00d5IGE - runtime secrets\nENV PASSWORD_FILE=/run/secrets/password\nCMD [\"sh\", \"-c\", \"PASSWORD=$(cat $PASSWORD_FILE) /app\"]\n</code></pre>"},{"location":"docker_fundamentals/lecture/#dockerfile-linting","title":"Dockerfile linting","text":"<pre><code># Install Hadolint\ndocker run --rm -i hadolint/hadolint &lt; Dockerfile\n\n# Common warnings:\n# - DL3008: Pin versions in apt install\n# - DL3025: Use JSON array for CMD\n# - DL3059: Multiple consecutive RUN\n</code></pre>"},{"location":"docker_fundamentals/lecture/#golden-rules","title":"Golden Rules","text":"<ol> <li>Official base images</li> <li>Dependencies enne, kood p\u00e4rast (cache optimization)</li> <li>Multi-stage builds production'is</li> <li>Non-root user</li> <li>Pin package versions</li> <li>Combine RUN statements</li> <li>Use .dockerignore</li> <li>Add health checks</li> <li>Lint with Hadolint</li> </ol>"},{"location":"docker_fundamentals/lecture/#build-ja-test","title":"Build ja test","text":"<pre><code># Build\ndocker build -t myapp:v1.0 .\n\n# Test different stages\ndocker build --target builder -t myapp:builder .\n\n# Test security\ndocker run --rm -it myapp:v1.0 whoami  # Should NOT be root\n</code></pre>"},{"location":"docker_fundamentals/lecture/#osa-5-networks-ja-volumes","title":"Osa 5: Networks ja Volumes","text":""},{"location":"docker_fundamentals/lecture/#loeng-195-container-connectivity-data-persistence-10-min","title":"Loeng 19.5: Container Connectivity &amp; Data Persistence (10 min)","text":""},{"location":"docker_fundamentals/lecture/#docker-networking","title":"Docker Networking","text":"<p>Probleem: Kuidas containers omavahel suhtlevad?</p> <p>Analoogia: Container = korter majas. Network = telefonikaabel korterite vahel.</p>"},{"location":"docker_fundamentals/lecture/#default-networks","title":"Default networks","text":"<pre><code># Vaata k\u00f5iki v\u00f5rke\ndocker network ls\n\n# Default networks:\n# bridge    \u2190 Default network\n# host      \u2190 Host network\n# none      \u2190 No network\n</code></pre>"},{"location":"docker_fundamentals/lecture/#bridge-network-default","title":"Bridge network (default)","text":"<pre><code># Default k\u00e4itumine\ndocker run -d --name web1 nginx\ndocker run -d --name web2 nginx\n\n# Containers saavad IP aadressid:\n# web1: 172.17.0.2\n# web2: 172.17.0.3\n\n# Saavad ping'ida IP kaudu\ndocker exec web1 ping 172.17.0.3  # \u2705 T\u00f6\u00f6tab\n\n# AGA EI SAA kasutada nimesid\ndocker exec web1 ping web2        # \u274c Ei t\u00f6\u00f6ta\n</code></pre>"},{"location":"docker_fundamentals/lecture/#custom-networks-soovitatud","title":"Custom networks (SOOVITATUD!)","text":"<pre><code># Loo custom network\ndocker network create myapp-network\n\n# K\u00e4ivita containers custom network'is\ndocker run -d --name web --network myapp-network nginx\ndocker run -d --name api --network myapp-network python:3.9\n\n# N\u00fc\u00fcd hostname resolution t\u00f6\u00f6tab!\ndocker exec web ping api          # \u2705 T\u00f6\u00f6tab!\ndocker exec api ping web          # \u2705 T\u00f6\u00f6tab!\n</code></pre>"},{"location":"docker_fundamentals/lecture/#praktiline-naide-3-tier-app","title":"Praktiline n\u00e4ide: 3-tier app","text":"<pre><code># Loo networks\ndocker network create frontend   # Web \u2194 API\ndocker network create backend    # API \u2194 Database\n\n# Database (ainult backend)\ndocker run -d --name db \\\n  --network backend \\\n  -e POSTGRES_PASSWORD=secret \\\n  postgres:13\n\n# API (m\u00f5lemas networks)\ndocker run -d --name api \\\n  --network backend \\\n  python:3.9\ndocker network connect frontend api\n\n# Web (ainult frontend)  \ndocker run -d --name web \\\n  --network frontend \\\n  -p 80:80 \\\n  nginx\n</code></pre> <p>Topology: <pre><code>Internet \u2192 [web] \u2192 [api] \u2192 [db]\n          frontend backend\n</code></pre></p>"},{"location":"docker_fundamentals/lecture/#host-networking","title":"Host networking","text":"<pre><code># Container kasutab host network'i\ndocker run -d --network host nginx\n\n# Container port'id on otse host'is\n# Ei vaja port mapping'ut!\ncurl http://localhost:80  # T\u00f6\u00f6tab kohe\n</code></pre>"},{"location":"docker_fundamentals/lecture/#docker-volumes","title":"Docker Volumes","text":"<p>Probleem: Container kustutamisel K\u00d5IK andmed kaovad!</p> <p>Analoogia: Volume = v\u00e4line k\u00f5vaketas, mida saad container'ite vahel jagada.</p>"},{"location":"docker_fundamentals/lecture/#volume-tuubid","title":"Volume t\u00fc\u00fcbid","text":""},{"location":"docker_fundamentals/lecture/#1-named-volumes-soovitatud","title":"1. Named volumes (SOOVITATUD)","text":"<pre><code># Loo named volume\ndocker volume create mydata\n\n# Kasuta volume'i\ndocker run -d \\\n  --name database \\\n  -v mydata:/var/lib/mysql \\\n  mysql:8.0\n\n# Volume info\ndocker volume ls\ndocker volume inspect mydata\n</code></pre>"},{"location":"docker_fundamentals/lecture/#2-bind-mounts-host-kaustade-kinnitamine","title":"2. Bind mounts (host kaustade kinnitamine)","text":"<pre><code># Mount host directory \u2192 container\ndocker run -d \\\n  --name web \\\n  -v /home/user/website:/usr/share/nginx/html \\\n  nginx\n\n# Muudatused host'is on kohe n\u00e4htavad container'is!\necho \"&lt;h1&gt;Hello&lt;/h1&gt;\" &gt; /home/user/website/index.html\ncurl http://localhost  # Uus sisu!\n</code></pre>"},{"location":"docker_fundamentals/lecture/#3-tmpfs-mounts-ram-based","title":"3. tmpfs mounts (RAM-based)","text":"<pre><code># Temporary storage (ainult RAM'is)\ndocker run -d \\\n  --name cache \\\n  --tmpfs /tmp \\\n  redis:alpine\n\n# /tmp data kaob container'i restart'imisel\n</code></pre>"},{"location":"docker_fundamentals/lecture/#praktiline-naide-persistent-database","title":"Praktiline n\u00e4ide: Persistent database","text":"<pre><code># 1. Loo volume\ndocker volume create postgres_data\n\n# 2. K\u00e4ivita database volume'iga\ndocker run -d \\\n  --name mydb \\\n  -e POSTGRES_PASSWORD=secret \\\n  -v postgres_data:/var/lib/postgresql/data \\\n  postgres:13\n\n# 3. Loo andmeid\ndocker exec -it mydb psql -U postgres\n# CREATE TABLE users (id SERIAL, name TEXT);\n# INSERT INTO users (name) VALUES ('Alice'), ('Bob');\n\n# 4. Kustuta container\ndocker stop mydb &amp;&amp; docker rm mydb\n\n# 5. K\u00e4ivita uus container SAMA volume'iga\ndocker run -d \\\n  --name newdb \\\n  -e POSTGRES_PASSWORD=secret \\\n  -v postgres_data:/var/lib/postgresql/data \\\n  postgres:13\n\n# 6. Andmed on alles!\ndocker exec -it newdb psql -U postgres -c \"SELECT * FROM users;\"\n</code></pre>"},{"location":"docker_fundamentals/lecture/#development-workflow","title":"Development workflow","text":"<pre><code># Mount source code arendamiseks\ndocker run -it \\\n  --name dev \\\n  -v $(pwd):/workspace \\\n  -w /workspace \\\n  -p 3000:3000 \\\n  node:16 bash\n\n# Edita faile host'is, jooksu container'is!\n</code></pre>"},{"location":"docker_fundamentals/lecture/#volume-cleanup","title":"Volume cleanup","text":"<pre><code># Vaata volumes\ndocker volume ls\n\n# Kustuta volume\ndocker volume rm mydata\n\n# Kustuta kasutamata volumes\ndocker volume prune\n</code></pre>"},{"location":"docker_fundamentals/lecture/#kokkuvote_2","title":"Kokkuv\u00f5te","text":"<p>Networks: Containers suhtlevad custom network'ides hostname'ide kaudu</p> <p>Volumes: Andmed p\u00fcsivad container'ite kustutamisel</p> <p>Best practices: - Kasuta custom networks - Named volumes production'is - Bind mounts development'is</p>"},{"location":"docker_fundamentals/lecture/#kokkuvote-week-19-docker-fundamentals","title":"Kokkuv\u00f5te: Week 19 Docker Fundamentals","text":"<p>Selles n\u00e4dalas \u00f5ppisime:</p>"},{"location":"docker_fundamentals/lecture/#peamised-teemad","title":"\ud83c\udfaf Peamised teemad:","text":"<ol> <li>Containers vs VMs</li> <li>Container efektiivsus ja kiirus</li> <li>Ressursside optimeerimine</li> <li> <p>Deployment stsenaariumi valikud</p> </li> <li> <p>Docker CLI Mastery</p> </li> <li>Container lifecycle management</li> <li>Image operations ja cleanup</li> <li> <p>Development workflows</p> </li> <li> <p>Podman Alternative</p> </li> <li>Daemonless architecture</li> <li>Rootless security</li> <li> <p>Kubernetes integration</p> </li> <li> <p>Dockerfile Optimization</p> </li> <li>Layer caching strategies</li> <li>Multi-stage builds</li> <li>Security best practices</li> <li> <p>Size optimization</p> </li> <li> <p>Networking &amp; Storage</p> </li> <li>Custom networks ja service discovery</li> <li>Volume persistence strategies</li> <li>Development ja production patterns</li> </ol>"},{"location":"docker_fundamentals/lecture/#praktilised-oskused","title":"\ud83d\udee0\ufe0f Praktilised oskused:","text":"<ul> <li>Container technology m\u00f5istmine</li> <li>Docker CLI commands fluently</li> <li>Dockerfile kirjutamine optimaalselt</li> <li>Network ja volume management</li> <li>Docker vs Podman trade-offs</li> </ul>"},{"location":"docker_fundamentals/lecture/#jargmine-nadal","title":"\ud83d\udcda J\u00e4rgmine n\u00e4dal:","text":"<p>N\u00e4dal 21 - Docker Compose ja Orchestration: - Multi-container applications - Service orchestration - Environment management - Production deployment strategies</p> <p>Valmistumine: M\u00f5elge, kuidas hallata keerulist rakendust, mis vajab andmebaasi, web serverit, cache'i ja monitoring'ut k\u00f5ike koos?</p> <p>Head containeriseerimist! \ud83d\udc33</p>"},{"location":"docker_orchestration/homework/","title":"\ud83d\udcdd N\u00e4dal 21 Kodut\u00f6\u00f6: Docker Compose ja Kubernetes Praktika","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Docker Compose ja Kubernetes praktiline kasutamine Aeg: 2-3 tundi praktilist t\u00f6\u00f6d</p>"},{"location":"docker_orchestration/homework/#projekt-multi-container-rakendus-docker-composeiga-ja-kubernetesil","title":"\ud83c\udfaf Projekt: Multi-Container Rakendus Docker Compose'iga ja Kubernetes'il","text":"<p>Docker Compose v\u00f5imaldab hallata mitut container'it kui \u00fchte rakendust. Kubernetes v\u00f5imaldab hallata mitut container'it mitmel masinal. Selles kodut\u00f6\u00f6s \u00f5pite m\u00f5lemat l\u00e4henemist.</p>"},{"location":"docker_orchestration/homework/#mida-te-ehitate","title":"Mida te ehitate?","text":"<p>\ud83c\udf10 Frontend - Lihtne web rakendus (HTML/CSS/JS) kasutajaliidese jaoks \ud83d\udd27 Backend - Flask API \u00e4riloogika ja andmete t\u00f6\u00f6tlemiseks \ud83d\uddc4\ufe0f Database - PostgreSQL andmete salvestamiseks \ud83d\udcca Monitoring - Health checks ja logide vaatamine</p> <p>\ud83d\udd17 Teenuste suhtlus: <pre><code>Kasutaja \u2192 Frontend \u2192 Backend \u2192 Database\n     \u2191                                    \u2193\n     \u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Vastus \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2190\n</code></pre></p>"},{"location":"docker_orchestration/homework/#arhitektuuri-diagramm","title":"Arhitektuuri diagramm","text":"<pre><code>graph TB\n    subgraph \"Internet\"\n        User[\ud83d\udc64 Kasutaja]\n    end\n\n    subgraph \"Kubernetes Cluster\"\n        subgraph \"Ingress Layer\"\n            Ingress[\u2696\ufe0f Nginx Ingress&lt;br/&gt;Load Balancer]\n        end\n\n        subgraph \"Application Layer\"\n            Frontend1[\ud83c\udf10 Frontend Pod 1&lt;br/&gt;React App]\n            Frontend2[\ud83c\udf10 Frontend Pod 2&lt;br/&gt;React App]\n            Backend1[\ud83d\udd27 Backend Pod 1&lt;br/&gt;Flask API]\n            Backend2[\ud83d\udd27 Backend Pod 2&lt;br/&gt;Flask API]\n        end\n\n        subgraph \"Data Layer\"\n            Redis[\ud83d\udd04 Redis Cache&lt;br/&gt;Session/Data Cache]\n            Postgres[\ud83d\uddc4\ufe0f PostgreSQL&lt;br/&gt;Persistent Data]\n        end\n\n        subgraph \"Monitoring\"\n            Health[\ud83d\udcca Health Checks&lt;br/&gt;Liveness/Readiness]\n        end\n    end\n\n    User --&gt; Ingress\n    Ingress --&gt; Frontend1\n    Ingress --&gt; Frontend2\n    Ingress --&gt; Backend1\n    Ingress --&gt; Backend2\n\n    Frontend1 --&gt; Backend1\n    Frontend2 --&gt; Backend2\n    Backend1 --&gt; Redis\n    Backend2 --&gt; Redis\n    Backend1 --&gt; Postgres\n    Backend2 --&gt; Postgres\n\n    Health --&gt; Frontend1\n    Health --&gt; Frontend2\n    Health --&gt; Backend1\n    Health --&gt; Backend2\n    Health --&gt; Redis\n    Health --&gt; Postgres\n\n    style Ingress fill:#ff9999\n    style Frontend1 fill:#99ccff\n    style Frontend2 fill:#99ccff\n    style Backend1 fill:#99ff99\n    style Backend2 fill:#99ff99\n    style Redis fill:#ffcc99\n    style Postgres fill:#cc99ff\n    style Health fill:#ffff99</code></pre>"},{"location":"docker_orchestration/homework/#samm-1-keskkonna-seadistamine","title":"\ud83d\udcc1 Samm 1: Keskkonna seadistamine","text":""},{"location":"docker_orchestration/homework/#kontrollige-keskkonda","title":"Kontrollige keskkonda:","text":"<pre><code>docker --version\ndocker-compose --version\nminikube status\nkubectl get nodes\n</code></pre>"},{"location":"docker_orchestration/homework/#loo-projekti-struktuur","title":"Loo projekti struktuur:","text":"<pre><code>mkdir ~/docker-orchestration-homework\ncd ~/docker-orchestration-homework\nmkdir -p app/{frontend,backend}\ngit init\necho \"node_modules/\\n.env\\n*.log\" &gt; .gitignore\n</code></pre>"},{"location":"docker_orchestration/homework/#samm-2-rakenduse-komponentide-loomine-60-min","title":"\ud83d\udd27 Samm 2: Rakenduse komponentide loomine (60 min)","text":"<p>N\u00fc\u00fcd hakkame tegelikult midagi tegema. Siin n\u00e4eme, kuidas k\u00f5ik t\u00f6\u00f6tab.</p> <p>Kujutage ette, et ehitame maja. Meil on plaan, meil on materjalid, ja n\u00fc\u00fcd hakkame ehitama. Frontend on nagu maja esiukse - see, mida k\u00f5ik n\u00e4evad. Backend on nagu maja \"aju\" - seal toimub k\u00f5ik loogika. Ja andmebaas? See on nagu maja keldri - seal hoitakse k\u00f5iki olulisi asju.</p> <p>Ma tean, et see v\u00f5ib tunduda keeruline, aga teeme seda sammhaaval. Iga samm on lihtne, ja kui teeme k\u00f5ik \u00f5igesti, siis l\u00f5puks t\u00f6\u00f6tab k\u00f5ik koos nagu orkester.</p> <p>Mida me t\u00e4pselt teeme? No, k\u00f5igepealt loome lihtsa veebilehe. Siis teeme API, mis t\u00f6\u00f6tleb andmeid. Ja l\u00f5puks \u00fchendame k\u00f5ike andmebaasiga. K\u00f5ik on lihtne, kui teeme seda sammhaaval.</p> <p>Ja mida te \u00f5pite? No, k\u00f5igepealt \u00f5pite, kuidas veebirakendused t\u00f6\u00f6tavad. Siis \u00f5pite, kuidas erinevad osad omavahel suhtlevad. Ja l\u00f5puks \u00f5pite, kuidas k\u00f5ike koos hoida ja probleeme lahendada.</p>"},{"location":"docker_orchestration/homework/#21-lihtne-frontend","title":"2.1 Lihtne Frontend","text":"<p>N\u00fc\u00fcd kopeerime frontend'i failid. See on automation kursus, seega me ei kirjuta HTML koodi - me lihtsalt kopeerime valmis failid.</p> <p>Frontend on nagu kontrollpaneel - see n\u00e4itab kasutajale, mis toimub ja v\u00f5imaldab neil rakendust testida.</p> <p>Kuidas me seda teeme? No, k\u00f5igepealt kopeerime failid teacher_repo'st. See on nagu valmis maja ostmine - me ei ehita seda, me lihtsalt kasutame seda.</p> <pre><code># Kopeerige Docker Compose fail\ncp teacher_repo/docker-orchestration-starter/templates/docker-compose.yml.example docker-compose.yml\n</code></pre> <p>Mida te t\u00e4pselt teete? No, k\u00f5igepealt minge teacher_repo kausta ja kopeerige frontend failid oma projekti kausta. See on lihtne - ainult kopeerige failid \u00f5igesse kohta.</p> <pre><code># Kopeerige frontend failid\ncp teacher_repo/docker-orchestration-starter/templates/app/frontend/* app/frontend/\n</code></pre> <p>Kuidas testida? Kui failid on kopeeritud, avage brauser, minge <code>http://localhost:8080</code> ja vajutage nuppe. Vaadake, kas midagi juhtub.</p> <p>Mida te \u00f5pite? Kuidas kasutada valmis komponente, kuidas suhelda backend API-ga ja kuidas testida rakenduse t\u00f6\u00f6d.</p> <p>Ja kui midagi ei t\u00f6\u00f6ta? Kontrollige, et failid on \u00f5iges kaustas ja veenduge, et backend t\u00f6\u00f6tab.</p>"},{"location":"docker_orchestration/homework/#22-lihtne-backend","title":"2.2 Lihtne Backend","text":"<p>N\u00fc\u00fcd kopeerime backend'i failid. See on automation kursus, seega me ei kirjuta Python koodi - me lihtsalt kopeerime valmis failid.</p> <p>Backend on nagu restorani k\u00f6\u00f6k - kasutajad ei n\u00e4e seda, aga k\u00f5ik t\u00f6\u00f6 toimub seal. Frontend saadab tellimused, backend t\u00f6\u00f6tleb need ja tagastab tulemused.</p> <p>Kuidas me seda teeme? No, k\u00f5igepealt kopeerime Python failid teacher_repo'st. See on nagu valmis k\u00f6\u00f6gi retsept - me ei kirjuta seda, me lihtsalt kasutame seda.</p> <p>Mida te t\u00e4pselt teete? No, k\u00f5igepealt minge teacher_repo kausta ja kopeerige backend failid oma projekti kausta. See on lihtne - ainult kopeerige failid \u00f5igesse kohta.</p> <pre><code># Kopeerige backend failid\ncp teacher_repo/docker-orchestration-starter/templates/app/backend/* app/backend/\n</code></pre> <p>Kuidas testida? Kui failid on kopeeritud, k\u00e4ivitage <code>python app.py</code>, avage brauser ja minge <code>http://localhost:5000/api/status</code>. Peaksite n\u00e4gema JSON vastust.</p> <p>Mida te \u00f5pite? Kuidas kasutada valmis API-d, kuidas \u00fchenduda andmebaasiga ja kuidas testida backend'i t\u00f6\u00f6d.</p> <p>Ja kui midagi ei t\u00f6\u00f6ta? Kontrollige, et failid on \u00f5iges kaustas, kontrollige, et Python on installitud ja veenduge, et andmebaas t\u00f6\u00f6tab.</p>"},{"location":"docker_orchestration/homework/#samm-3-kubernetes-praktika-60-min","title":"\ud83d\ude80 Samm 3: Kubernetes Praktika (60 min)","text":"<p>N\u00fc\u00fcd hakkame \u00f5ppima Kubernetes'i - see on nagu \u00f5ppima, kuidas hallata mitut restorani korraga!</p> <p>Miks me seda teeme? Kubernetes on nagu restoraniketi juht - see v\u00f5imaldab hallata mitut rakendust mitmel masinal korraga. Docker Compose oli nagu \u00fche restorani juht, aga Kubernetes on nagu kogu keti juht.</p> <p>Kuidas me seda teeme? 1. Seadistame Kubernetes keskkonna - nagu restorani kohvikuga varustamine 2. Loome manifeste - need on nagu restorani t\u00f6\u00f6juhendid 3. Juurutame rakenduse - nagu restorani avamine 4. Testime t\u00f6\u00f6d - nagu kvaliteedi kontroll</p>"},{"location":"docker_orchestration/homework/#31-kubernetes-keskkonna-seadistamine","title":"3.1 Kubernetes Keskkonna Seadistamine","text":"<p>Enne kui hakkame restorani avama, peame veenduma, et k\u00f5ik t\u00f6\u00f6riistad on kohal.</p> <p>Miks me seda teeme? Kubernetes vajab erilist keskkonda - nagu restoran vajab k\u00f6\u00f6ki, laudasid ja personali. Minikube simuleerib t\u00f5elist Kubernetes clustrit teie arvutil.</p> <p>Kuidas me seda teeme? 1. Kontrollige kubectl - see on nagu restorani juhtimise t\u00f6\u00f6riist 2. Kontrollige Minikube - see on nagu restorani kohvik 3. Testige \u00fchendust - veenduge, et k\u00f5ik t\u00f6\u00f6tab</p> <p>Kontrollige Minikube'i: <pre><code># Kontrollige kubectl konfiguratsiooni - see n\u00e4itab, millist restorani juhtida\nkubectl config current-context\n\n# Minikube konteksti seadistamine - valige \u00f5ige restoran\nkubectl config use-context minikube\n\n# Testige \u00fchendust - veenduge, et restoran on avatud\nkubectl cluster-info\n</code></pre></p> <p>Mida peaksite n\u00e4gema? - <code>minikube</code> kontekst - Cluster info koos URL'iga - Mitte \u00fchtegi veateadet</p>"},{"location":"docker_orchestration/homework/#32-kubernetes-manifests-loomine","title":"3.2 Kubernetes Manifests Loomine","text":"<p>N\u00fc\u00fcd loome restorani t\u00f6\u00f6juhendid - need on nagu retseptid, mis \u00fctlevad, kuidas iga teenus t\u00f6\u00f6tab.</p> <p>Miks me seda teeme? Manifestid on nagu restorani t\u00f6\u00f6juhendid - need \u00fctlevad Kubernetes'ile, mida ja kuidas teha. Ilma nendeta ei tea Kubernetes, mida teha.</p> <p>Kuidas me seda teeme? 1. Loome kaustade struktuuri - nagu restorani osakondade korraldamine 2. Loome iga komponendi manifesti - nagu iga osakonna t\u00f6\u00f6juhend 3. Seadistame teenuste suhtluse - nagu osakondade vahelise koost\u00f6\u00f6</p> <p>Mida peate tegema:</p> <ol> <li> <p>Loo projekti struktuur: <pre><code># Looge kaustad nagu restorani osakonnad\nmkdir -p k8s/{namespace,database,backend,frontend}\n</code></pre></p> </li> <li> <p>Loo Namespace (k8s/namespace/namespace.yaml):</p> </li> <li>See on nagu restorani nimi - eraldab teie rakenduse teistest</li> <li>Kasuta <code>apiVersion: v1</code></li> <li>Lisa <code>kind: Namespace</code></li> <li> <p>Lisa metadata nimega <code>docker-orchestration-app</code></p> </li> <li> <p>Loo Database komponendid:</p> </li> <li>Deployment (k8s/database/deployment.yaml): PostgreSQL container, 1 replica<ul> <li>See on nagu andmebaasi serveri seadistamine</li> </ul> </li> <li>PVC (k8s/database/pvc.yaml): 1Gi salvestusruum<ul> <li>See on nagu andmete salvestamise ruum</li> </ul> </li> <li> <p>Service (k8s/database/service.yaml): ClusterIP teenus pordil 5432</p> <ul> <li>See on nagu andmebaasi telefoninumber</li> </ul> </li> <li> <p>Loo Backend komponendid:</p> </li> <li>Deployment (k8s/backend/deployment.yaml): Flask app, 2 replicas, health checks<ul> <li>See on nagu backend serverite seadistamine</li> </ul> </li> <li> <p>Service (k8s/backend/service.yaml): ClusterIP teenus pordil 5000</p> <ul> <li>See on nagu backend'i telefoninumber</li> </ul> </li> <li> <p>Loo Frontend komponendid:</p> </li> <li>Deployment (k8s/frontend/deployment.yaml): Nginx container, 2 replicas<ul> <li>See on nagu frontend serverite seadistamine</li> </ul> </li> <li>ConfigMap (k8s/frontend/configmap.yaml): HTML sisu<ul> <li>See on nagu frontend'i sisu</li> </ul> </li> <li>Service (k8s/frontend/service.yaml): LoadBalancer teenus pordil 80<ul> <li>See on nagu frontend'i telefoninumber</li> </ul> </li> </ol> <p>Kuidas testida? 1. Looge k\u00f5ik failid 2. Kontrollige YAML s\u00fcntaksit 3. Veenduge, et failid on \u00f5iges kaustas</p> <p>Mida \u00f5pite: - Kuidas luua Kubernetes manifeste - Kuidas kasutada Deployments, Services, ConfigMaps - Kuidas seadistada health checks - Kuidas kasutada PersistentVolumeClaims - Kuidas konfigureerida teenuste v\u00f5rgu\u00fchendused</p> <p>Kui midagi ei t\u00f6\u00f6ta: - Kontrollige YAML s\u00fcntaksit (indentatsioon on oluline!) - Veenduge, et failid on \u00f5iges kaustas - Kontrollige, et Minikube t\u00f6\u00f6tab</p>"},{"location":"docker_orchestration/homework/#33-kubernetes-juurutamine","title":"3.3 Kubernetes Juurutamine","text":"<p>N\u00fc\u00fcd avame restorani - see on nagu k\u00f5igi t\u00f6\u00f6juhendite rakendamine ja restorani avamine k\u00fclastajatele.</p> <p>Miks me seda teeme? Juurutamine on nagu restorani avamine - k\u00f5ik t\u00f6\u00f6juhendid on valmis, personal on kohal ja n\u00fc\u00fcd avame uksed k\u00fclastajatele.</p> <p>Kuidas me seda teeme? 1. Juurutame iga komponendi - nagu iga osakonna k\u00e4ivitamine 2. Kontrollime juurutamist - nagu kvaliteedi kontroll 3. Testime t\u00f6\u00f6d - nagu esimeste k\u00fclastajate vastuv\u00f5tmine</p> <p>Juurutage k\u00f5ik komponendid: <pre><code># Namespace - looge restorani nimi\nkubectl apply -f k8s/namespace/\n\n# Database - k\u00e4ivitage andmebaasi server\nkubectl apply -f k8s/database/\n\n# Backend - k\u00e4ivitage backend serverid\nkubectl apply -f k8s/backend/\n\n# Frontend - k\u00e4ivitage frontend serverid\nkubectl apply -f k8s/frontend/\n</code></pre></p> <p>Mida peaksite n\u00e4gema? - <code>namespace/docker-orchestration-app created</code> - <code>deployment.apps/database-deployment created</code> - <code>service/database-service created</code> - <code>deployment.apps/backend-deployment created</code> - <code>service/backend-service created</code> - <code>deployment.apps/frontend-deployment created</code> - <code>service/frontend-service created</code></p> <p>Kontrollige juurutamist: <pre><code># Kontrollige k\u00f5iki ressurssideid - nagu restorani \u00fclevaatus\nkubectl get all -n docker-orchestration-app\n\n# Kontrollige podide staatust - nagu personali kontroll\nkubectl get pods -n docker-orchestration-app\n\n# Vaadake logisid - nagu t\u00f6\u00f6 j\u00e4lgimine\nkubectl logs -f deployment/backend-deployment -n docker-orchestration-app\n</code></pre></p> <p>Mida peaksite n\u00e4gema? - K\u00f5ik podid oleksid <code>Running</code> staatuses - Mitte \u00fchtegi <code>Pending</code> v\u00f5i <code>Error</code> staatust - Logides peaks olema <code>Running on http://0.0.0.0:5000</code></p> <p>Kui midagi ei t\u00f6\u00f6ta: - Kontrollige, et k\u00f5ik failid on juurutatud - Vaadake podide logisid vigade jaoks - Kontrollige, et Minikube'l on piisavalt ressursse</p>"},{"location":"docker_orchestration/homework/#samm-4-docker-compose-ja-kubernetes-vordlus-60-min","title":"\ud83d\udd27 Samm 4: Docker Compose ja Kubernetes V\u00f5rdlus (60 min)","text":"<p>Tere! N\u00fc\u00fcd v\u00f5rdleme kahte l\u00e4henemist - see on nagu v\u00f5rdlema \u00fche restorani juhtimist vs kogu restoraniketi juhtimist.</p> <p>Miks me seda teeme? V\u00f5rdlus aitab m\u00f5ista, millal kasutada Docker Compose'i ja millal Kubernetes'i. See on nagu valida \u00fche restorani ja kogu keti vahel.</p> <p>Kuidas me seda teeme? 1. Juurutame Docker Compose rakenduse - nagu \u00fche restorani avamine 2. Juurutame Kubernetes rakenduse - nagu kogu keti avamine 3. V\u00f5rdleme t\u00f6\u00f6d - nagu kvaliteedi v\u00f5rdlus 4. Anal\u00fc\u00fcsime erinevusi - nagu juhtimise v\u00f5rdlus</p>"},{"location":"docker_orchestration/homework/#41-docker-compose-juurutamine","title":"4.1 Docker Compose Juurutamine","text":"<p>Tere! N\u00fc\u00fcd avame \u00fche restorani - see on lihtne ja kiire.</p> <p>Miks me seda teeme? Docker Compose on nagu \u00fche restorani avamine - lihtne, kiire ja k\u00f5ik on \u00fchel kohal. See on ideaalne arenduseks ja testimiseks.</p> <p>Kuidas me seda teeme? 1. Loome Docker Compose faili - see on nagu restorani men\u00fc\u00fc 2. K\u00e4ivitame rakenduse - nagu restorani avamine 3. Kontrollime t\u00f6\u00f6d - nagu kvaliteedi kontroll</p> <p>K\u00e4ivita Docker Compose rakendus: <pre><code># Docker Compose faili loomine - see on nagu restorani men\u00fc\u00fc kirjutamine\ncat &gt; docker-compose.yml &lt;&lt; 'EOF'\nversion: '3.8'\n\nservices:\n  frontend:\n    image: nginx:alpine\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./app/frontend:/usr/share/nginx/html:ro\n    depends_on:\n      - backend\n\n  backend:\n    build: ./app/backend\n    ports:\n      - \"5000:5000\"\n    environment:\n      - DB_HOST=db\n      - DB_NAME=app\n      - DB_USER=postgres\n      - DB_PASSWORD=secret\n    depends_on:\n      - db\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=app\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=secret\n    volumes:\n      - db_data:/var/lib/postgresql/data\n\nvolumes:\n  db_data:\nEOF\n\n# K\u00e4ivita rakendus - nagu restorani avamine\ndocker-compose up -d\n\n# Kontrolli teenuseid - nagu personali kontroll\ndocker-compose ps\n</code></pre></p> <p>Mida peaksite n\u00e4gema? - <code>frontend</code> - <code>Up</code> staatus - <code>backend</code> - <code>Up</code> staatus - <code>db</code> - <code>Up</code> staatus - Mitte \u00fchtegi <code>Exit</code> v\u00f5i <code>Error</code> staatust</p> <p>Kuidas testida? 1. Avage brauser ja minge <code>http://localhost:8080</code> 2. Peaksite n\u00e4gema frontend'i 3. Vajutage nuppe ja testige funktsionaalsust</p>"},{"location":"docker_orchestration/homework/#42-kubernetes-juurutamine","title":"4.2 Kubernetes Juurutamine","text":"<p>Juuruta sama rakendus Kubernetes'il: <pre><code># Backend image build ja load\ncd app/backend\ndocker build -t docker-orchestration-backend:latest .\nminikube image load docker-orchestration-backend:latest\n\n# Juuruta k\u00f5ik komponendid\nkubectl apply -f k8s/namespace/\nkubectl apply -f k8s/database/\nkubectl apply -f k8s/backend/\nkubectl apply -f k8s/frontend/\n\n# Kontrolli juurutamist\nkubectl get all -n docker-orchestration-app\n</code></pre></p>"},{"location":"docker_orchestration/homework/#43-vordlus-ja-testimine","title":"4.3 V\u00f5rdlus ja Testimine","text":"<p>Testi m\u00f5lemat rakendust: <pre><code># Docker Compose test\ncurl http://localhost:8080\ncurl http://localhost:5000/api/status\n\n# Kubernetes test\nkubectl port-forward service/frontend-service 8081:80 -n docker-orchestration-app &amp;\nkubectl port-forward service/backend-service 5001:5000 -n docker-orchestration-app &amp;\n\ncurl http://localhost:8081\ncurl http://localhost:5001/api/status\n</code></pre></p> <p>V\u00f5rdlus tabel:</p> Aspekt Docker Compose Kubernetes Juhtimine <code>docker-compose up/down</code> <code>kubectl apply/delete</code> Skaleerimine K\u00e4sitsi replica arv <code>kubectl scale deployment</code> Load Balancing Ei ole Automaatne Health Checks K\u00e4sitsi Liveness/Readiness probes Storage Volumes PVC/PV Networking Lihtne Services, Ingress Monitoring K\u00e4sitsi Automaatne"},{"location":"docker_orchestration/homework/#samm-5-scaling-and-monitoring-30-min","title":"\ud83d\udcca Samm 5: Scaling and Monitoring (30 min)","text":""},{"location":"docker_orchestration/homework/#51-application-scaling","title":"5.1 Application Scaling","text":"<pre><code># Skaleerige backend teenust\nkubectl scale deployment backend-deployment --replicas=3 -n docker-orchestration-app\n\n# Skaleerige frontend teenust\nkubectl scale deployment frontend-deployment --replicas=3 -n docker-orchestration-app\n\n# Kontrollige skaleerimist\nkubectl get pods -n docker-orchestration-app\n</code></pre>"},{"location":"docker_orchestration/homework/#52-basic-monitoring","title":"5.2 Basic Monitoring","text":"<pre><code># Podide ressursside kasutus\nkubectl top pods -n docker-orchestration-app\n\n# Node ressursside kasutus\nkubectl top nodes\n\n# Podide logide vaatamine\nkubectl logs -l app=backend -n docker-orchestration-app --tail=50\n</code></pre>"},{"location":"docker_orchestration/homework/#53-health-checks","title":"5.3 Health Checks","text":"<pre><code># Testige health endpoint'i\nkubectl port-forward service/backend-service 5000:5000 -n docker-orchestration-app\ncurl http://localhost:5000/api/health\n\n# Testige status endpoint'i\ncurl http://localhost:5000/api/status\n</code></pre>"},{"location":"docker_orchestration/homework/#samm-6-advanced-features-optional-30-min","title":"\ud83c\udfaf Samm 6: Advanced Features (Optional - 30 min)","text":""},{"location":"docker_orchestration/homework/#61-configmap-ja-secrets","title":"6.1 ConfigMap ja Secrets","text":"<p>k8s/config/configmap.yaml: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\n  namespace: docker-orchestration-app\ndata:\n  NODE_ENV: \"production\"\n  DB_NAME: \"app\"\n  REDIS_PORT: \"6379\"\n</code></pre></p> <p>k8s/config/secret.yaml: <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secrets\n  namespace: docker-orchestration-app\ntype: Opaque\ndata:\n  DB_PASSWORD: c2VjcmV0  # base64 encoded \"secret\"\n  DB_USER: cG9zdGdyZXM=  # base64 encoded \"postgres\"\n</code></pre></p>"},{"location":"docker_orchestration/homework/#62-horizontal-pod-autoscaler","title":"6.2 Horizontal Pod Autoscaler","text":"<p>k8s/scaling/hpa.yaml: <pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: backend-hpa\n  namespace: docker-orchestration-app\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: backend-deployment\n  minReplicas: 2\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n</code></pre></p>"},{"location":"docker_orchestration/homework/#samm-7-documentation-ja-submission-30-min","title":"\ud83d\udcdd Samm 7: Documentation ja Submission (30 min)","text":""},{"location":"docker_orchestration/homework/#71-readmemd-loomine","title":"7.1 README.md loomine","text":"<pre><code># Docker Orchestration Kubernetes Homework\n\n## Projekt kirjeldus\nMulti-tier web application Kubernetes'il koos frontend, backend, database ja cache teenustega.\n\n## Komponendid\n- Frontend: React application\n- Backend: Python Flask API\n- Database: PostgreSQL\n- Cache: Redis\n- Ingress: Nginx\n\n## Juurutamine\n```bash\nkubectl apply -f k8s/\n</code></pre>"},{"location":"docker_orchestration/homework/#testimine","title":"Testimine","text":"<pre><code>kubectl port-forward service/frontend-service 8080:3000 -n docker-orchestration-app\n</code></pre>"},{"location":"docker_orchestration/homework/#skaleerimine","title":"Skaleerimine","text":"<p><pre><code>kubectl scale deployment backend-deployment --replicas=3 -n docker-orchestration-app\n</code></pre> <pre><code>### 7.2 Git commit ja push\n\n```bash\n# Lisa k\u00f5ik failid\ngit add .\n\n# Esimene commit\ngit commit -m \"Initial Kubernetes deployment setup\"\n\n# Push GitHub'i\ngit push -u origin main\n</code></pre></p>"},{"location":"docker_orchestration/homework/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"docker_orchestration/homework/#levinud-probleemid","title":"Levinud probleemid:","text":"<p>Probleem: Pod ei k\u00e4ivitu <pre><code># Kontrollige podi staatust\nkubectl describe pod &lt;pod-name&gt; -n docker-orchestration-app\n\n# Vaadake logisid\nkubectl logs &lt;pod-name&gt; -n docker-orchestration-app\n</code></pre></p> <p>Probleem: Service ei \u00fchendu <pre><code># Kontrollige service konfiguratsiooni\nkubectl describe service &lt;service-name&gt; -n docker-orchestration-app\n\n# Testige endpoint'i\nkubectl port-forward service/&lt;service-name&gt; &lt;port&gt; -n docker-orchestration-app\n</code></pre></p> <p>Probleem: Image ei leia <pre><code># Kontrollige image olemasolu\ndocker images | grep docker-orchestration\n\n# Load image Minikube'i\nminikube image load docker-orchestration-backend:latest\n</code></pre></p> <p>Probleem: Kodu masina seadistamine - Vaadake eraldi juhendit: <code>kodu_masina_ehitus_juhend.md</code></p>"},{"location":"docker_orchestration/homework/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":"<ul> <li>Kubernetes Documentation</li> <li>Minikube Getting Started</li> <li>Kubernetes YAML Reference</li> <li>Kubernetes Best Practices</li> <li>Kubernetes Architecture</li> <li>Microservices Patterns</li> </ul>"},{"location":"docker_orchestration/homework/#alternative-orchestrators","title":"Alternative Orchestrators:","text":"<ul> <li>Docker Swarm</li> <li>HashiCorp Nomad</li> <li>Apache Mesos</li> <li>Docker Swarm vs Kubernetes</li> </ul>"},{"location":"docker_orchestration/homework/#kodu-masina-seadistamine","title":"\ud83c\udfe0 Kodu masina seadistamine:","text":"<ul> <li>Kodu Masina Ehitus Juhend - T\u00e4ielik juhend VM, VSCode ja SSH seadistamiseks</li> </ul>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/","title":"\ud83c\udfe0 Kodu Masina Ehitus Juhend","text":"<p>Eesm\u00e4rk: Seadistada arenduskeskkond kodus Kubernetes ja Docker \u00f5ppimiseks</p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#sisukord","title":"\ud83d\udccb Sisukord","text":"<ol> <li>Virtuaalse masina loomine</li> <li>VSCode seadistamine</li> <li>SSH \u00fchenduse seadistamine</li> <li>Docker ja Kubernetes installimine</li> <li>Probleemide lahendamine</li> </ol>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#virtuaalse-masina-loomine","title":"\ud83d\udda5\ufe0f Virtuaalse masina loomine","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#susteemi-nouded","title":"S\u00fcsteemi n\u00f5uded:","text":"<ul> <li>RAM: V\u00e4hemalt 8GB (soovituslik 16GB)</li> <li>CPU: V\u00e4hemalt 4 tuuma (soovituslik 8 tuuma)</li> <li>Ketas: V\u00e4hemalt 50GB vaba ruumi</li> <li>OS: Windows 10/11, macOS, v\u00f5i Linux</li> </ul>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#1-multipass-soovituslik-ubuntu","title":"1. Multipass (soovituslik - Ubuntu)","text":"<p>Windows: <pre><code># 1. Laadige alla: https://multipass.run/download/windows\n# 2. Installige ja taask\u00e4ivitage arvuti\n# 3. Avage PowerShell ja k\u00e4ivitage:\n\n# Looge virtuaalne masin\nmultipass launch --name dev-lab --memory 8G --disk 30G --cpus 4\n\n# \u00dchenduge masinaga\nmultipass shell dev-lab\n</code></pre></p> <p>macOS: <pre><code># Installige Homebrew'iga\nbrew install --cask multipass\n\n# Looge virtuaalne masin\nmultipass launch --name dev-lab --memory 8G --disk 30G --cpus 4\nmultipass shell dev-lab\n</code></pre></p> <p>Linux: <pre><code># Installige Snap'iga\nsudo snap install multipass\n\n# Looge virtuaalne masin\nmultipass launch --name dev-lab --memory 8G --disk 30G --cpus 4\nmultipass shell dev-lab\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#2-virtualbox-ubuntu-server","title":"2. VirtualBox + Ubuntu Server","text":"<p>1. VirtualBox installimine: - Laadige alla: https://www.virtualbox.org/ - Installige ja taask\u00e4ivitage arvuti</p> <p>2. Ubuntu Server allalaadimine: - Laadige alla: https://ubuntu.com/download/server - Valige LTS versioon (22.04 LTS)</p> <p>3. Virtuaalse masina loomine: <pre><code># VirtualBox'is:\n# 1. \"New\" \u2192 \"Expert mode\"\n# 2. Nimi: \"Dev-Lab\"\n# 3. OS: Ubuntu 64-bit\n# 4. RAM: 8192 MB (8GB)\n# 5. CPU: 4 tuuma\n# 6. Ketas: 50GB\n# 7. K\u00e4ivitage ja installige Ubuntu Server\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#3-wsl2-windows-1011","title":"3. WSL2 (Windows 10/11)","text":"<pre><code># Avage PowerShell administraatorina\nwsl --install -d Ubuntu\n\n# Taask\u00e4ivitage arvuti\n# Avage Ubuntu terminal ja seadistage kasutaja\n</code></pre>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#vscode-seadistamine","title":"\ud83d\udcbb VSCode seadistamine","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#1-vscode-installimine","title":"1. VSCode installimine","text":"<p>Windows/macOS/Linux: - Laadige alla: https://code.visualstudio.com/ - Installige ja avage</p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#2-kasulikud-laiendused","title":"2. Kasulikud laiendused","text":"<p>Kubernetes ja Docker: <pre><code># Installige j\u00e4rgmised laiendused:\n# 1. \"Docker\" - Microsoft\n# 2. \"Kubernetes\" - Microsoft\n# 3. \"YAML\" - Red Hat\n# 4. \"Remote - SSH\" - Microsoft\n# 5. \"Remote - WSL\" - Microsoft (Windows)\n</code></pre></p> <p>Arenduskeskkond: <pre><code># 6. \"GitLens\" - Git integreerimine\n# 7. \"Auto Rename Tag\" - HTML/XML\n# 8. \"Bracket Pair Colorizer\" - koodi lugemine\n# 9. \"Material Icon Theme\" - failide ikoonid\n# 10. \"One Dark Pro\" - tumm teema\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#3-vscode-seaded","title":"3. VSCode seaded","text":"<p>settings.json: <pre><code>{\n    \"editor.fontSize\": 14,\n    \"editor.fontFamily\": \"Consolas, 'Courier New', monospace\",\n    \"editor.tabSize\": 2,\n    \"editor.insertSpaces\": true,\n    \"editor.wordWrap\": \"on\",\n    \"files.autoSave\": \"onFocusChange\",\n    \"terminal.integrated.fontSize\": 14,\n    \"workbench.colorTheme\": \"One Dark Pro\",\n    \"workbench.iconTheme\": \"material-icon-theme\"\n}\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#ssh-uhenduse-seadistamine","title":"\ud83d\udd10 SSH \u00fchenduse seadistamine","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#1-ssh-votmete-loomine-host-masinal","title":"1. SSH v\u00f5tmete loomine (host masinal)","text":"<p>Windows: <pre><code># Avage PowerShell\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n# Salvestage: C:\\Users\\YourName\\.ssh\\id_rsa\n</code></pre></p> <p>macOS/Linux: <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n# Salvestage: ~/.ssh/id_rsa\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#2-ssh-votme-kopeerimine-vmi","title":"2. SSH v\u00f5tme kopeerimine VM'i","text":"<p>Multipass: <pre><code># Kopeerige avalik v\u00f5ti VM'i\nmultipass exec dev-lab -- bash -c 'mkdir -p ~/.ssh'\nmultipass transfer ~/.ssh/id_rsa.pub dev-lab:/home/ubuntu/.ssh/authorized_keys\nmultipass exec dev-lab -- bash -c 'chmod 600 ~/.ssh/authorized_keys'\n</code></pre></p> <p>VirtualBox/WSL2: <pre><code># Kopeerige avalik v\u00f5ti k\u00e4sitsi v\u00f5i kasutage ssh-copy-id\nssh-copy-id username@vm-ip-address\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#3-ssh-konfiguratsioon","title":"3. SSH konfiguratsioon","text":"<p>~/.ssh/config (host masinal): <pre><code>Host dev-lab\n    HostName 192.168.1.100  # VM'i IP aadress\n    User ubuntu\n    Port 22\n    IdentityFile ~/.ssh/id_rsa\n    ServerAliveInterval 60\n    ServerAliveCountMax 3\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#4-vscode-remote-ssh-seadistamine","title":"4. VSCode Remote SSH seadistamine","text":"<p>1. Avage VSCode 2. Vajutage <code>Ctrl+Shift+P</code> (Windows/Linux) v\u00f5i <code>Cmd+Shift+P</code> (macOS) 3. Otsige \"Remote-SSH: Connect to Host\" 4. Valige \"Add New SSH Host\" 5. Sisestage: <code>ssh ubuntu@192.168.1.100</code> 6. \u00dchenduge ja avage kaust</p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#docker-ja-kubernetes-installimine","title":"\ud83d\udc33 Docker ja Kubernetes installimine","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#1-docker-installimine-vms","title":"1. Docker installimine VM's","text":"<pre><code># \u00dchenduge VM'iga\nssh dev-lab\n\n# Docker installimine\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n\n# Lisa kasutaja docker gruppi\nsudo usermod -aG docker $USER\n\n# Taask\u00e4ivitage terminal\nnewgrp docker\n\n# Kontrollige installimist\ndocker --version\ndocker run hello-world\n</code></pre>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#2-minikube-installimine","title":"2. Minikube installimine","text":"<pre><code># Kubectl installimine\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n\n# Minikube installimine\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# Minikube k\u00e4ivitamine\nminikube start --driver=docker --memory=4096 --cpus=2\n\n# Kontrollige\nkubectl get nodes\n</code></pre>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#3-kubernetes-dashboard","title":"3. Kubernetes Dashboard","text":"<pre><code># Dashboard installimine\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml\n\n# Proxy k\u00e4ivitamine\nkubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='.*'\n\n# Avage brauser: http://vm-ip:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/\n</code></pre>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#probleemide-lahendamine","title":"\ud83d\udd27 Probleemide lahendamine","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#1-ssh-uhenduse-probleemid","title":"1. SSH \u00fchenduse probleemid","text":"<p>\u00dchendus ei t\u00f6\u00f6ta: <pre><code># Kontrollige VM'i IP aadressi\nip addr show\n\n# Kontrollige SSH teenust\nsudo systemctl status ssh\n\n# K\u00e4ivitage SSH teenus\nsudo systemctl start ssh\nsudo systemctl enable ssh\n</code></pre></p> <p>V\u00f5tme probleemid: <pre><code># Kontrollige v\u00f5tmete \u00f5igusi\nchmod 600 ~/.ssh/id_rsa\nchmod 644 ~/.ssh/id_rsa.pub\n\n# Kontrollige VM'i v\u00f5tmete \u00f5igusi\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#2-docker-probleemid","title":"2. Docker probleemid","text":"<p>Docker ei k\u00e4ivitu: <pre><code># Kontrollige Docker teenust\nsudo systemctl status docker\n\n# K\u00e4ivitage Docker\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# Kontrollige kasutaja gruppi\ngroups $USER\n</code></pre></p> <p>Minikube probleemid: <pre><code># Minikube logid\nminikube logs\n\n# Minikube taask\u00e4ivitamine\nminikube stop\nminikube delete\nminikube start --driver=docker\n\n# Ressursi kontroll\nfree -h\ndf -h\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#3-vscode-probleemid","title":"3. VSCode probleemid","text":"<p>Remote SSH ei \u00fchendu: <pre><code># Kontrollige SSH konfiguratsiooni\nssh -T dev-lab\n\n# Kontrollige VSCode Remote SSH laiendust\n# Vajutage Ctrl+Shift+P ja otsige \"Remote-SSH: Show Log\"\n</code></pre></p> <p>Failide s\u00fcnkroniseerimise probleemid: <pre><code># Kontrollige faili \u00f5igusi\nls -la\n\n# Muutke faili omanikku\nsudo chown -R $USER:$USER /path/to/project\n</code></pre></p>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":""},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#dokumentatsioon","title":"Dokumentatsioon:","text":"<ul> <li>Multipass Documentation</li> <li>VSCode Remote Development</li> <li>Docker Installation</li> <li>Minikube Documentation</li> </ul>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#video-juhendid","title":"Video juhendid:","text":"<ul> <li>VSCode Remote SSH Setup</li> <li>Docker Installation on Ubuntu</li> <li>Minikube Quick Start</li> </ul>"},{"location":"docker_orchestration/kodu_masina_ehitus_juhend/#kasulikud-kasud","title":"Kasulikud k\u00e4sud:","text":"<pre><code># VM'i info\nmultipass info dev-lab\n\n# Ressursi kasutus\nhtop\nfree -h\ndf -h\n\n# V\u00f5rgu info\nip addr show\nnetstat -tulpn\n\n# Logide vaatamine\njournalctl -f\ndocker logs &lt;container&gt;\nkubectl logs &lt;pod&gt;\n</code></pre>"},{"location":"docker_orchestration/lab/","title":"\ud83e\uddea N\u00e4dal 21 Lab: Docker Compose Praktika","text":"<p>Kestus: 2 tundi Eesm\u00e4rk: \u00d5ppida Docker Compose'i praktilist kasutamist ja luua lihtsa multi-container rakenduse</p>"},{"location":"docker_orchestration/lab/#samm-1-opivaljundid","title":"\ud83c\udfaf Samm 1: \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast laborit oskate: - Kirjutada lihtsa Docker Compose faili - p\u00f5hilised teenused - K\u00e4ivitada multi-container rakendust - \u00fche k\u00e4suga - M\u00f5ista teenuste s\u00f5ltuvusi - mis k\u00e4ivitub enne - Debugida probleeme - logide vaatamine - Kasutada dokumentatsiooni - abi leidmine</p>"},{"location":"docker_orchestration/lab/#samm-1-lihtsa-rakenduse-loomine-45-min","title":"\ud83d\udccb Samm 1: Lihtsa rakenduse loomine (45 min)","text":""},{"location":"docker_orchestration/lab/#11-projekti-struktuuri-loomine","title":"1.1: Projekti struktuuri loomine","text":"<p>Loome lihtsa web rakenduse, mis koosneb kahest osast: - Web server - kuvab veebilehte - Database - salvestab andmeid</p> <pre><code># Projekti kataloogi loomine\nmkdir ~/docker-orchestration-lab\ncd ~/docker-orchestration-lab\n\n# Lihtne struktuur\nmkdir app\n</code></pre>"},{"location":"docker_orchestration/lab/#12-lihtsa-web-rakenduse-loomine","title":"1.2: Lihtsa web rakenduse loomine","text":"<p>Kopeerime valmis HTML faili teacher_repo'st:</p> <pre><code># Kopeerige valmis HTML fail\ncp teacher_repo/docker-orchestration-starter/templates/app/frontend/index.html.example app/index.html\n</code></pre> <p>Mida see teeb? - Kuvab lihtsa veebilehe - N\u00e4itab, et rakendus t\u00f6\u00f6tab - Kuvab praeguse aja</p> <p>Miks me ei kirjuta HTML koodi? See on automation kursus, mitte veebiarenduse kursus. Me keskendume Docker Compose'i \u00f5ppimisele, mitte HTML kirjutamisele.</p>"},{"location":"docker_orchestration/lab/#13-docker-compose-faili-loomine","title":"1.3: Docker Compose faili loomine","text":"<p>Kopeerime valmis Docker Compose faili teacher_repo'st:</p> <pre><code># Kopeerige valmis Docker Compose fail\ncp teacher_repo/docker-orchestration-starter/templates/docker-compose.yml.example docker-compose.yml\n</code></pre> <p>Mida see teeb? - Web teenus - kuvab HTML faili brauseris - Database teenus - salvestab andmeid (praegu ei kasuta)</p> <p>Miks me ei kirjuta Docker Compose faili? See on lihtne lab, kus \u00f5pime Docker Compose'i kasutamist. Hiljem \u00f5pite ka failide kirjutamist. - Volumes - p\u00fcsivad andmed andmebaasi jaoks             host=os.getenv('REDIS_HOST', 'redis'),             port=int(os.getenv('REDIS_PORT', 6379)),             decode_responses=True         )         r.ping()         return r     except Exception as e:         return None</p> <p>@app.route('/api/status') def status():     db_status = \"Connected\" if get_db_connection() else \"Disconnected\"     redis_status = \"Connected\" if get_redis_connection() else \"Disconnected\"</p> <pre><code>return jsonify({\n    'status': 'OK',\n    'environment': os.getenv('NODE_ENV', 'development'),\n    'database': db_status,\n    'cache': redis_status,\n    'timestamp': datetime.now().isoformat()\n})\n</code></pre> <p>@app.route('/api/health') def health():     return jsonify({'status': 'healthy'})</p> <p>if name == 'main':     app.run(host='0.0.0.0', port=5000, debug=os.getenv('DEBUG', 'false').lower() == 'true') <pre><code>**Backend requirements (app/backend/requirements.txt):**\n</code></pre> Flask==2.3.3 psycopg2-binary==2.9.7 redis==4.6.0 <pre><code>### 1.4: Docker Compose konfiguratsioon\n\n**Base configuration (docker-compose.yml):**\n```yaml\nversion: '3.8'\n\nservices:\n  frontend:\n    image: nginx:alpine\n    ports:\n      - \"${FRONTEND_PORT:-80}:80\"\n    volumes:\n      - ./app/frontend:/usr/share/nginx/html:ro\n    depends_on:\n      - backend\n    networks:\n      - frontend\n\n  backend:\n    build:\n      context: ./app/backend\n      dockerfile: Dockerfile\n    environment:\n      - NODE_ENV=${NODE_ENV:-development}\n      - DEBUG=${DEBUG:-false}\n      - DB_HOST=db\n      - DB_NAME=${DB_NAME:-app}\n      - DB_USER=${DB_USER:-postgres}\n      - DB_PASSWORD=${DB_PASSWORD:-secret}\n      - REDIS_HOST=redis\n      - REDIS_PORT=6379\n    depends_on:\n      - db\n      - redis\n    networks:\n      - frontend\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:5000/api/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=${DB_NAME:-app}\n      - POSTGRES_USER=${DB_USER:-postgres}\n      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - backend\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U ${DB_USER:-postgres}\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n    networks:\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 3s\n      retries: 5\n\nvolumes:\n  postgres_data:\n  redis_data:\n\nnetworks:\n  frontend:\n    driver: bridge\n  backend:\n    driver: bridge\n    internal: true\n</code></pre></p> <p>Backend Dockerfile (app/backend/Dockerfile): <pre><code>FROM python:3.9-slim\n\nWORKDIR /app\n\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . .\n\nEXPOSE 5000\n\nCMD [\"python\", \"app.py\"]\n</code></pre></p>"},{"location":"docker_orchestration/lab/#15-rakenduse-kaivitamine","title":"1.5: Rakenduse k\u00e4ivitamine","text":"<p>K\u00e4ivitage rakendus: <pre><code># K\u00e4ivita k\u00f5ik teenused\ndocker-compose up -d\n\n# Vaata, kas k\u00f5ik t\u00f6\u00f6tab\ndocker-compose ps\n\n# Vaata logisid\ndocker-compose logs web\n</code></pre></p> <p>Testige rakendust: - Avage brauser ja minge aadressile: <code>http://localhost:8080</code> - Peaksite n\u00e4gema veebilehte \"\ud83d\ude80 Week 21 Lab\"</p> <p>Peatage rakendus: <pre><code># Peata k\u00f5ik teenused\ndocker-compose down\n</code></pre></p>"},{"location":"docker_orchestration/lab/#samm-2-probleemide-lahendamine-30-min","title":"\ud83d\udccb Samm 2: Probleemide lahendamine (30 min)","text":""},{"location":"docker_orchestration/lab/#21-levinud-probleemid-ja-lahendused","title":"2.1: Levinud probleemid ja lahendused","text":"<p>Probleem: Port on juba kasutusel <pre><code># Vea s\u00f5num: \"port is already allocated\"\n# Lahendus: Muutke porti docker-compose.yml failis\nports:\n  - \"8081:80\"  # 8080 asemel 8081\n</code></pre></p> <p>Probleem: Container ei k\u00e4ivitu <pre><code># Vaata logisid\ndocker-compose logs web\n\n# Vaata k\u00f5iki logisid\ndocker-compose logs\n</code></pre></p> <p>Probleem: Fail ei leia <pre><code># Kontrollige, kas fail eksisteerib\nls -la app/index.html\n\n# Kontrollige faili \u00f5igused\nchmod 644 app/index.html\n</code></pre></p>"},{"location":"docker_orchestration/lab/#22-debugimise-kasud","title":"2.2: Debugimise k\u00e4sud","text":"<pre><code># Vaata k\u00f5iki container'eid\ndocker ps\n\n# Vaata container'i sisu\ndocker exec -it docker-orchestration-lab_web_1 sh\n\n# Vaata faili sisu container'is\ndocker exec docker-orchestration-lab_web_1 cat /usr/share/nginx/html/index.html\n</code></pre>"},{"location":"docker_orchestration/lab/#23-podman-compose-konfiguratsioon","title":"2.3: Podman Compose konfiguratsioon","text":"<p>Podman-specific docker-compose.yml: <pre><code>version: '3.8'\n\nservices:\n  frontend:\n    image: nginx:alpine\n    ports:\n      - \"${FRONTEND_PORT:-80}:80\"\n    volumes:\n      - ./app/frontend:/usr/share/nginx/html:ro\n    depends_on:\n      - backend\n    networks:\n      - frontend\n\n  backend:\n    build:\n      context: ./app/backend\n      dockerfile: Dockerfile\n    environment:\n      - NODE_ENV=${NODE_ENV:-development}\n      - DEBUG=${DEBUG:-false}\n      - DB_HOST=db\n      - DB_NAME=${DB_NAME:-app}\n      - DB_USER=${DB_USER:-postgres}\n      - DB_PASSWORD=${DB_PASSWORD:-secret}\n      - REDIS_HOST=redis\n      - REDIS_PORT=6379\n    depends_on:\n      - db\n      - redis\n    networks:\n      - frontend\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:5000/api/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=${DB_NAME:-app}\n      - POSTGRES_USER=${DB_USER:-postgres}\n      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - backend\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U ${DB_USER:-postgres}\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n    networks:\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 3s\n      retries: 5\n\nvolumes:\n  postgres_data:\n  redis_data:\n\nnetworks:\n  frontend:\n    driver: bridge\n  backend:\n    driver: bridge\n    internal: true\n</code></pre></p>"},{"location":"docker_orchestration/lab/#samm-3-podman-compose-kaivitamine","title":"Samm 3: Podman Compose k\u00e4ivitamine","text":"<pre><code># Peatage Docker Compose teenused\ndocker-compose down\n\n# K\u00e4ivitage Podman Compose\npodman-compose --env-file .env.development up -d\n\n# Kontrollige teenuseid\npodman-compose ps\n\n# Vaadake logisid\npodman-compose logs -f backend\n\n# Testige rakendust\ncurl http://localhost:8080/api/status\n</code></pre>"},{"location":"docker_orchestration/lab/#samm-3-vordlus-ja-analuus-30-min","title":"\ud83d\udccb Samm 3: V\u00f5rdlus ja Anal\u00fc\u00fcs (30 min)","text":""},{"location":"docker_orchestration/lab/#samm-1-performance-vordlus","title":"Samm 1: Performance v\u00f5rdlus","text":"<pre><code># Docker Compose resource usage\ndocker stats\n\n# Podman resource usage\npodman stats\n\n# V\u00f5rdle m\u00e4lu ja CPU kasutust\n</code></pre>"},{"location":"docker_orchestration/lab/#samm-2-security-vordlus","title":"Samm 2: Security v\u00f5rdlus","text":"<pre><code># Docker process info\nps aux | grep docker\n\n# Podman process info\nps aux | grep podman\n\n# User context\ndocker ps\npodman ps\n</code></pre>"},{"location":"docker_orchestration/lab/#samm-3-logide-ja-monitoring","title":"Samm 3: Logide ja monitoring","text":"<pre><code># Docker Compose logid\ndocker-compose logs --tail=50\n\n# Podman Compose logid\npodman-compose logs --tail=50\n\n# V\u00f5rdle logide formaati ja sisu\n</code></pre>"},{"location":"docker_orchestration/lab/#samm-2-labori-kokkuvote","title":"\ud83c\udfaf Samm 2: Labori Kokkuv\u00f5te","text":""},{"location":"docker_orchestration/lab/#opitud-kontseptsioonid","title":"\u00d5pitud kontseptsioonid:","text":"<p>Docker Compose faili kirjutamine - lihtne YAML s\u00fcntaks Multi-container rakenduse k\u00e4ivitamine - \u00fche k\u00e4suga Teenuste haldamine - k\u00e4ivitamine, peatamine, logide vaatamine Probleemide lahendamine - debugimise oskused Dokumentatsiooni kasutamine - abi leidmine  </p>"},{"location":"docker_orchestration/lab/#jargmised-sammud","title":"J\u00e4rgmised sammud:","text":"<ol> <li>Rohkem teenuseid - lisage backend ja cache</li> <li>Environment variables - erinevate keskkondade haldamine</li> <li>Production setup - turvaline ja skaleeritav konfiguratsioon</li> <li>Kubernetes - kui vajate rohkem funktsionaalsust</li> </ol>"},{"location":"docker_orchestration/lab/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"docker_orchestration/lab/#levinud-probleemid","title":"Levinud probleemid:","text":"<p>Probleem: Teenused ei k\u00e4ivitu \u00f5iges j\u00e4rjekorras <pre><code># Lahendus: Lisa health checks ja depends_on\ndepends_on:\n  db:\n    condition: service_healthy\n</code></pre></p> <p>Probleem: Podman network error <pre><code># Lahendus: Lisa selges\u00f5naline network konfiguratsioon\nnetworks:\n  default:\n    driver: bridge\n</code></pre></p> <p>Probleem: Volume permissions <pre><code># Lahendus: Lisa user mapping\nservices:\n  db:\n    user: \"1000:1000\"\n</code></pre></p>"},{"location":"docker_orchestration/lab/#lisaressursid-ja-abi","title":"\ud83d\udcda Lisaressursid ja abi","text":""},{"location":"docker_orchestration/lab/#oppimiseks","title":"\ud83c\udf93 \u00d5ppimiseks:","text":"<ul> <li>Docker Compose Quickstart - kiire algus</li> <li>Docker Compose Examples - palju n\u00e4iteid</li> <li>Docker Compose Reference - k\u00f5ik v\u00f5imalikud seaded</li> </ul>"},{"location":"docker_orchestration/lab/#abi-saamiseks","title":"\ud83c\udd98 Abi saamiseks:","text":"<ul> <li>Docker Community - foorumid</li> <li>Stack Overflow - k\u00fcsimused ja vastused</li> <li>Docker Documentation - ametlik dokumentatsioon</li> </ul>"},{"location":"docker_orchestration/lab/#praktikaks","title":"\ud83d\udd27 Praktikaks:","text":"<ul> <li>Docker Compose Best Practices - tootmiskeskkonna n\u00f5uded</li> <li>Docker Compose Networking - v\u00f5rgu konfiguratsioon</li> <li>Docker Compose Environment Variables - keskkonnamuutujad</li> </ul>"},{"location":"docker_orchestration/lecture/","title":"\ud83d\udcda N\u00e4dal 21: Docker Compose ja Orchestration","text":"<p>Kestus: 4 tundi Teemad: Docker Compose p\u00f5hialused, Lihtsad multi-container rakendused, Keskkondade haldamine, Alternatiivide tutvustus</p>"},{"location":"docker_orchestration/lecture/#opivaljundid","title":"\ud83c\udfaf \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast seda n\u00e4dalat oskate: - Kirjutada lihtsaid Docker Compose faile - p\u00f5hilised teenused ja nende seosed - K\u00e4ivitada multi-container rakendusi - \u00fche k\u00e4suga kogu rakendus - M\u00f5ista p\u00f5him\u00f5tteid - miks orkestreerimine vajalik - Tutvuda alternatiividega - teada, et Kubernetes pole ainus valik - Kasutada dokumentatsiooni - oskus leida abi ja n\u00e4iteid</p>"},{"location":"docker_orchestration/lecture/#loeng-211-docker-compose-overview-12-min","title":"\ud83d\udcd6 Loeng 21.1: Docker Compose Overview (12 min)","text":""},{"location":"docker_orchestration/lecture/#tere-tulemast-orkestreerimise-maailma","title":"Tere tulemast orkestreerimise maailma!","text":"<p>Tere tagasi! Eelmisel n\u00e4dalal \u00f5ppisime \u00fcksikute container'ite haldamist. T\u00e4na astume j\u00e4rgmisele tasemele - \u00f5pime mitme container'i korraga haldamist, teenuste orkestreerimist ja production-ready s\u00fcsteemide ehitamist.</p>"},{"location":"docker_orchestration/lecture/#mis-on-orkestreerimine-ja-miks-see-vajalik","title":"Mis on orkestreerimine ja miks see vajalik?","text":"<p>Orkestreerimine t\u00e4hendab mitme container'i koordineerimist, et need koos t\u00f6\u00f6taksid kui \u00fcks rakendus. Kujutage ette orkestrit - iga muusik (container) m\u00e4ngib oma instrumenti, aga dirigent (orkestreerija) koordineerib k\u00f5iki, et nad koos ilusalt m\u00e4ngiks.</p> <pre><code>graph TB\n    subgraph \"\ud83c\udfb5 Orkester (Rakendus)\"\n        Conductor[\ud83c\udfbc Dirigent&lt;br/&gt;Orkestreerija]\n        Violin[\ud83c\udfbb Viul&lt;br/&gt;Frontend]\n        Piano[\ud83c\udfb9 Klaver&lt;br/&gt;Backend]\n        Drums[\ud83e\udd41 Trummid&lt;br/&gt;Database]\n        Bass[\ud83c\udfb8 Bass&lt;br/&gt;Cache]\n    end\n\n    Conductor --&gt; Violin\n    Conductor --&gt; Piano\n    Conductor --&gt; Drums\n    Conductor --&gt; Bass\n\n    Violin --&gt; Piano\n    Piano --&gt; Drums\n    Piano --&gt; Bass\n\n    style Conductor fill:#ff9999\n    style Violin fill:#99ccff\n    style Piano fill:#99ff99\n    style Drums fill:#ffcc99\n    style Bass fill:#cc99ff</code></pre> <p>Miks orkestreerimine on oluline? - Keerukad rakendused - t\u00e4nap\u00e4eva web rakendused koosnevad mitmest komponendist - S\u00f5ltuvused - erinevad teenused s\u00f5ltuvad \u00fcksteisest - Skaleerimine - vajadus k\u00e4ivitada mitu koopiat samast teenusest - Turvalisus - erinevate teenuste isoleerimine</p>"},{"location":"docker_orchestration/lecture/#reaalne-probleem-web-rakenduse-kaivitamine","title":"Reaalne probleem: Web rakenduse k\u00e4ivitamine","text":"<p>Kujutage ette, et teil on t\u00e4nap\u00e4evane web rakendus:</p> <pre><code>graph TB\n    subgraph \"\ud83c\udf10 T\u00e4nap\u00e4evane Web Rakendus\"\n        User[\ud83d\udc64 Kasutaja]\n\n        subgraph \"Frontend Layer\"\n            React[\u269b\ufe0f React App&lt;br/&gt;Kasutajaliides]\n            Vue[\ud83d\udc9a Vue App&lt;br/&gt;Kasutajaliides]\n            Angular[\ud83c\udd70\ufe0f Angular App&lt;br/&gt;Kasutajaliides]\n        end\n\n        subgraph \"Backend Layer\"\n            NodeAPI[\ud83d\udfe2 Node.js API&lt;br/&gt;\u00c4riloogika]\n            PythonAPI[\ud83d\udc0d Python API&lt;br/&gt;\u00c4riloogika]\n            JavaAPI[\u2615 Java API&lt;br/&gt;\u00c4riloogika]\n        end\n\n        subgraph \"Data Layer\"\n            Postgres[\ud83d\udc18 PostgreSQL&lt;br/&gt;Andmebaas]\n            MySQL[\ud83d\udc2c MySQL&lt;br/&gt;Andmebaas]\n            Redis[\ud83d\udd34 Redis&lt;br/&gt;Cache]\n        end\n\n        subgraph \"Infrastructure\"\n            Nginx[\ud83c\udf10 Nginx&lt;br/&gt;Load Balancer]\n        end\n    end\n\n    User --&gt; Nginx\n    Nginx --&gt; React\n    Nginx --&gt; Vue\n    Nginx --&gt; Angular\n\n    React --&gt; NodeAPI\n    Vue --&gt; PythonAPI\n    Angular --&gt; JavaAPI\n\n    NodeAPI --&gt; Postgres\n    PythonAPI --&gt; MySQL\n    JavaAPI --&gt; Redis\n\n    style User fill:#ffcc99\n    style Nginx fill:#ff9999\n    style React fill:#99ccff\n    style Vue fill:#99ff99\n    style Angular fill:#ffcc99\n    style NodeAPI fill:#99ccff\n    style PythonAPI fill:#99ff99\n    style JavaAPI fill:#ffcc99\n    style Postgres fill:#cc99ff\n    style MySQL fill:#cc99ff\n    style Redis fill:#ff6666</code></pre> <p>Ilma orkestreerimise t\u00f6\u00f6riistata peate k\u00e4ivitama k\u00f5ik need komponendid k\u00e4sitsi:</p>"},{"location":"docker_orchestration/lecture/#probleem-ilma-composeita","title":"Probleem ilma Compose'ita","text":"<pre><code># Ilma Compose'ita peate k\u00e4ivitama:\n\n# 1. Database - andmete salvestamine\ndocker run -d \\\n  --name myapp-db \\\n  -e POSTGRES_PASSWORD=secret \\\n  -e POSTGRES_DB=myapp \\\n  -v myapp_db_data:/var/lib/postgresql/data \\\n  postgres:13\n\n# 2. Redis cache - kiire andmete juurdep\u00e4\u00e4s\ndocker run -d \\\n  --name myapp-redis \\\n  -v myapp_redis_data:/data \\\n  redis:alpine\n\n# 3. Backend API - \u00e4riloogika ja andmete t\u00f6\u00f6tlemine\ndocker run -d \\\n  --name myapp-api \\\n  --link myapp-db:db \\\n  --link myapp-redis:redis \\\n  -e DATABASE_URL=postgres://postgres:secret@db:5432/myapp \\\n  -e REDIS_URL=redis://redis:6379 \\\n  myapp/api:latest\n\n# 4. Frontend - kasutajaliides\ndocker run -d \\\n  --name myapp-web \\\n  --link myapp-api:api \\\n  -p 80:80 \\\n  -e API_URL=http://api:3000 \\\n  myapp/web:latest\n\n# 5. Nginx reverse proxy - koormuse jaotus ja SSL\ndocker run -d \\\n  --name myapp-nginx \\\n  --link myapp-web:web \\\n  --link myapp-api:api \\\n  -p 443:443 \\\n  -v ./nginx.conf:/etc/nginx/nginx.conf \\\n  nginx:alpine\n</code></pre> <p>Mida iga k\u00e4sk teeb? - <code>docker run -d</code> - k\u00e4ivitab container taustal (detached mode) - <code>--name</code> - annab container'ile nime, et seda hiljem leida - <code>-e</code> - seadistab keskkonnamuutujad (environment variables) - <code>-v</code> - seob hosti kausta container'iga (volume) - <code>--link</code> - loob v\u00f5rgu\u00fchenduse teiste container'itega - <code>-p</code> - avab pordid v\u00e4lismaailmale</p> <p>Probleemid k\u00e4sitsi k\u00e4ivitamisega:</p> <pre><code>graph LR\n    subgraph \"\ud83e\udd2f Keeruline protsess\"\n        Step1[1. Database&lt;br/&gt;docker run -d --name...]\n        Step2[2. Redis&lt;br/&gt;docker run -d --name...]\n        Step3[3. Backend&lt;br/&gt;docker run -d --name...]\n        Step4[4. Frontend&lt;br/&gt;docker run -d --name...]\n        Step5[5. Nginx&lt;br/&gt;docker run -d --name...]\n    end\n\n    Step1 --&gt; Step2\n    Step2 --&gt; Step3\n    Step3 --&gt; Step4\n    Step4 --&gt; Step5\n\n    subgraph \"\u274c Probleemid\"\n        P1[\ud83d\udd17 Dependency Hell&lt;br/&gt;\u00d5ige j\u00e4rjekord?]\n        P2[\ud83d\udeab Raske peatada&lt;br/&gt;5 eraldi k\u00e4sku]\n        P3[\ud83d\udcdd Ei reprodutseeritav&lt;br/&gt;Erinevad keskkonnad]\n        P4[\ud83d\udd27 Raske debug&lt;br/&gt;Hajutatud logid]\n        P5[\u23f0 Aega n\u00f5udev&lt;br/&gt;Iga kord sama]\n        P6[\ud83d\udc65 Raske jagada&lt;br/&gt;Kolleegid ei tea]\n    end\n\n    style Step1 fill:#ffcccc\n    style Step2 fill:#ffcccc\n    style Step3 fill:#ffcccc\n    style Step4 fill:#ffcccc\n    style Step5 fill:#ffcccc\n    style P1 fill:#ff9999\n    style P2 fill:#ff9999\n    style P3 fill:#ff9999\n    style P4 fill:#ff9999\n    style P5 fill:#ff9999\n    style P6 fill:#ff9999</code></pre> <p>\ud83e\udd2f Keeruline meelde j\u00e4tta - 5 erinevat k\u00e4sku, iga\u00fchel oma parameetrid \ud83d\udd17 Dependency hell - peate teadma \u00f5iget j\u00e4rjekorda (db \u2192 redis \u2192 api \u2192 web \u2192 nginx) \ud83d\udeab Raske peatada - peate peatama 5 eraldi container'it k\u00e4sitsi \ud83d\udcdd Ei ole reprodutseeritav - erinevad keskkonnad, erinevad seaded \ud83d\udd27 Raske debuggida - logid on hajutatud erinevatesse container'itesse \u23f0 Aega n\u00f5udev - iga kord sama protsess uuesti \ud83d\udc65 Raske jagada - teie kolleegid ei tea, milliseid k\u00e4ske kasutada</p>"},{"location":"docker_orchestration/lecture/#docker-compose-lahendus","title":"Docker Compose lahendus","text":"<p>Docker Compose on t\u00f6\u00f6riist, mis v\u00f5imaldab kirjeldada kogu rakenduse konfiguratsiooni \u00fches failis. See on nagu \"retsept\" - kirjeldate, milliseid komponente vajate ja kuidas need omavahel seotud on.</p> <p>Miks Docker Compose on parem? - \u00dcks fail - kogu konfiguratsioon \u00fches kohas - Deklaratiivne - kirjeldate, mida tahate, mitte kuidas seda teha - Reprodutseeritav - sama tulemus igal masinal - Lihtne jagada - faili saate jagada kolleegidega - Automaatne j\u00e4rjekord - Compose teab, mis j\u00e4rjekorras k\u00e4ivitada</p> <p>Sama rakendus Docker Compose'iga:</p> <pre><code>graph TB\n    subgraph \"\ud83d\udcc4 docker-compose.yml struktuur\"\n        Version[\ud83d\udccb version: '3.8'&lt;br/&gt;Compose versioon]\n        Services[\ud83d\udce6 services:&lt;br/&gt;K\u00f5ik teenused]\n        Volumes[\ud83d\udcbe volumes:&lt;br/&gt;P\u00fcsivad andmed]\n    end\n\n    subgraph \"\ud83d\udd27 Teenused\"\n        DB[\ud83d\uddc4\ufe0f db&lt;br/&gt;PostgreSQL]\n        Redis[\ud83d\udd34 redis&lt;br/&gt;Cache]\n        API[\ud83d\udd27 api&lt;br/&gt;Backend]\n        Web[\ud83c\udf10 web&lt;br/&gt;Frontend]\n        Nginx[\u2696\ufe0f nginx&lt;br/&gt;Load Balancer]\n    end\n\n    Services --&gt; DB\n    Services --&gt; Redis\n    Services --&gt; API\n    Services --&gt; Web\n    Services --&gt; Nginx\n\n    DB --&gt; Volumes\n    Redis --&gt; Volumes\n\n    style Version fill:#ffcc99\n    style Services fill:#99ccff\n    style Volumes fill:#99ff99\n    style DB fill:#cc99ff\n    style Redis fill:#ff6666\n    style API fill:#99ccff\n    style Web fill:#99ff99\n    style Nginx fill:#ff9999</code></pre> <pre><code># docker-compose.yml\n# See fail kirjeldab kogu rakenduse struktuuri\n\nversion: '3.8'  # Compose faili versioon\n\nservices:  # K\u00f5ik teenused (container'id)\n  # Database teenus - andmete salvestamine\n  db:\n    image: postgres:13  # Millist image'i kasutada\n    environment:  # Keskkonnamuutujad\n      POSTGRES_PASSWORD: secret\n      POSTGRES_DB: myapp\n    volumes:  # P\u00fcsivad andmed\n      - db_data:/var/lib/postgresql/data\n\n  # Cache teenus - kiire andmete juurdep\u00e4\u00e4s\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n\n  # Backend API - \u00e4riloogika ja andmete t\u00f6\u00f6tlemine\n  api:\n    image: myapp/api:latest\n    environment:\n      DATABASE_URL: postgres://postgres:secret@db:5432/myapp\n      REDIS_URL: redis://redis:6379\n    depends_on:  # S\u00f5ltuvused - mis teenused peavad k\u00e4ivituma enne\n      - db\n      - redis\n\n  # Frontend - kasutajaliides\n  web:\n    image: myapp/web:latest\n    environment:\n      API_URL: http://api:3000\n    depends_on:\n      - api\n\n  # Load balancer - koormuse jaotus ja SSL\n  nginx:\n    image: nginx:alpine\n    ports:  # Avab pordid v\u00e4lismaailmale\n      - \"443:443\"\n    volumes:  # Seob konfiguratsioonifaili\n      - ./nginx.conf:/etc/nginx/nginx.conf\n    depends_on:\n      - web\n      - api\n\nvolumes:  # P\u00fcsivad andmed, mis s\u00e4ilivad container'ite vahel\n  db_data:\n  redis_data:\n</code></pre> <p>Mida iga osa teeb?</p> <pre><code>graph LR\n    subgraph \"\ud83d\udccb Docker Compose faili osad\"\n        Version[\ud83d\udccb version&lt;br/&gt;Compose versioon&lt;br/&gt;3.8+]\n        Services[\ud83d\udce6 services&lt;br/&gt;K\u00f5ik teenused&lt;br/&gt;container'id]\n        Image[\ud83d\udc33 image&lt;br/&gt;Docker image&lt;br/&gt;postgres:13]\n        Env[\ud83c\udf0d environment&lt;br/&gt;Keskkonnamuutujad&lt;br/&gt;POSTGRES_PASSWORD]\n        Vol[\ud83d\udcbe volumes&lt;br/&gt;P\u00fcsivad andmed&lt;br/&gt;db_data]\n        Depends[\ud83d\udd17 depends_on&lt;br/&gt;S\u00f5ltuvused&lt;br/&gt;db, redis]\n        Ports[\ud83c\udf10 ports&lt;br/&gt;Pordid&lt;br/&gt;80:80]\n    end\n\n    Services --&gt; Image\n    Services --&gt; Env\n    Services --&gt; Vol\n    Services --&gt; Depends\n    Services --&gt; Ports\n\n    style Version fill:#ffcc99\n    style Services fill:#99ccff\n    style Image fill:#99ff99\n    style Env fill:#ffcc99\n    style Vol fill:#99ff99\n    style Depends fill:#ffcc99\n    style Ports fill:#99ff99</code></pre> <ul> <li><code>version</code> - Compose faili versioon (kasuta alati 3.8+)</li> <li><code>services</code> - k\u00f5ik teenused, mida rakendus vajab</li> <li><code>image</code> - millist Docker image'i kasutada</li> <li><code>environment</code> - keskkonnamuutujad (nagu <code>-e</code> k\u00e4sus)</li> <li><code>volumes</code> - p\u00fcsivad andmed (nagu <code>-v</code> k\u00e4sus)</li> <li><code>depends_on</code> - s\u00f5ltuvused (mis teenus k\u00e4ivitub enne)</li> <li><code>ports</code> - avab pordid (nagu <code>-p</code> k\u00e4sus)</li> </ul> <p>Kasu v\u00f5rreldes k\u00e4sitsi k\u00e4ivitamisega:</p> <pre><code>graph LR\n    subgraph \"\u2705 Docker Compose lahendus\"\n        ComposeFile[\ud83d\udcc4 docker-compose.yml&lt;br/&gt;\u00dcks fail]\n        OneCommand[\ud83d\ude80 docker-compose up&lt;br/&gt;\u00dcks k\u00e4sk]\n        AutoOrder[\ud83d\udd04 Automaatne j\u00e4rjekord&lt;br/&gt;depends_on]\n        EasyStop[\u23f9\ufe0f docker-compose down&lt;br/&gt;Lihtne peatamine]\n    end\n\n    subgraph \"\u2705 Eelised\"\n        E1[\ud83d\udcdd Reprodutseeritav&lt;br/&gt;Sama igal masinal]\n        E2[\ud83d\udcca Keskendatud logid&lt;br/&gt;docker-compose logs]\n        E3[\ud83d\udd27 Lihtne debug&lt;br/&gt;logs -f reaalajas]\n        E4[\u26a1 Kiire iteratsioon&lt;br/&gt;restart teenuseid]\n        E5[\ud83d\udcda Version control&lt;br/&gt;Git'i lisada]\n    end\n\n    ComposeFile --&gt; OneCommand\n    OneCommand --&gt; AutoOrder\n    AutoOrder --&gt; EasyStop\n\n    style ComposeFile fill:#ccffcc\n    style OneCommand fill:#ccffcc\n    style AutoOrder fill:#ccffcc\n    style EasyStop fill:#ccffcc\n    style E1 fill:#99ff99\n    style E2 fill:#99ff99\n    style E3 fill:#99ff99\n    style E4 fill:#99ff99\n    style E5 fill:#99ff99</code></pre> <p>\u2705 \u00dcks k\u00e4sk - <code>docker-compose up</code> vs 5 eraldi k\u00e4sku \u2705 Automaatne j\u00e4rjekord - <code>depends_on</code> teeb kindlaks, mis k\u00e4ivitub enne \u2705 Lihtne peatamine - <code>docker-compose down</code> peatab k\u00f5ik korraga \u2705 Reprodutseeritav - sama tulemus igal masinal, igal arendajal \u2705 Keskendatud logid - <code>docker-compose logs</code> n\u00e4itab k\u00f5iki logisid \u2705 Lihtne debug - <code>docker-compose logs -f</code> j\u00e4lgib logisid reaalajas \u2705 Kiire iteratsioon - <code>docker-compose restart</code> taask\u00e4ivitab teenuse \u2705 Version control - faili saate Git'i lisada ja jagada</p>"},{"location":"docker_orchestration/lecture/#docker-compose-pohimotted","title":"Docker Compose p\u00f5him\u00f5tted","text":""},{"location":"docker_orchestration/lecture/#1-deklaratiivne-konfiguratsioon","title":"1. Deklaratiivne konfiguratsioon","text":"<p>Sa kirjeldad, mida tahad, mitte kuidas seda saavutada. See on nagu restorani men\u00fc\u00fc - sa \u00fctled, mida tahad s\u00fc\u00fca, mitte kuidas seda valmistada.</p> <pre><code>graph LR\n    subgraph \"\ud83c\udf7d\ufe0f Restorani analoogia\"\n        Menu[\ud83d\udccb Men\u00fc\u00fc&lt;br/&gt;\"Tahan pitsa\"]\n        Kitchen[\ud83d\udc68\u200d\ud83c\udf73 K\u00f6\u00f6k&lt;br/&gt;Teab kuidas valmistada]\n        Food[\ud83c\udf55 Pitsa&lt;br/&gt;Valmis toit]\n    end\n\n    subgraph \"\ud83d\udc33 Docker Compose\"\n        YAML[\ud83d\udcc4 docker-compose.yml&lt;br/&gt;\"Tahan PostgreSQL\"]\n        Compose[\u2699\ufe0f Compose&lt;br/&gt;Teab kuidas k\u00e4ivitada]\n        Container[\ud83d\udc18 PostgreSQL&lt;br/&gt;K\u00e4ivitatud andmebaas]\n    end\n\n    Menu --&gt; Kitchen\n    Kitchen --&gt; Food\n\n    YAML --&gt; Compose\n    Compose --&gt; Container\n\n    style Menu fill:#ffcc99\n    style Kitchen fill:#99ccff\n    style Food fill:#99ff99\n    style YAML fill:#ffcc99\n    style Compose fill:#99ccff\n    style Container fill:#99ff99</code></pre> <p>N\u00e4ide: <pre><code># Sa \u00fctled: \"Tahan PostgreSQL andmebaasi\"\ndb:\n  image: postgres:13\n  environment:\n    POSTGRES_PASSWORD: secret\n</code></pre> Compose teeb: K\u00e4ivitab PostgreSQL container'i, seadistab parooli, loob andmebaasi</p>"},{"location":"docker_orchestration/lecture/#2-teenused-services","title":"2. Teenused (Services)","text":"<p>Iga konteiner on \"teenus\" - tal on nimi ja roll. Teenused on nagu restorani osakonnad - k\u00f6\u00f6k, teenindus, kassa.</p> <pre><code>graph TB\n    subgraph \"\ud83c\udfea Restorani osakonnad\"\n        Kitchen[\ud83d\udc68\u200d\ud83c\udf73 K\u00f6\u00f6k&lt;br/&gt;Valmistab toitu]\n        Service[\ud83d\udc69\u200d\ud83d\udcbc Teenindus&lt;br/&gt;V\u00f5tab tellimused]\n        Cashier[\ud83d\udcb0 Kassa&lt;br/&gt;Maksab arve]\n    end\n\n    subgraph \"\ud83d\udc33 Docker teenused\"\n        DB[\ud83d\uddc4\ufe0f db&lt;br/&gt;Andmebaas]\n        API[\ud83d\udd27 api&lt;br/&gt;API server]\n        Web[\ud83c\udf10 web&lt;br/&gt;Veebileht]\n    end\n\n    Service --&gt; Kitchen\n    Kitchen --&gt; Cashier\n\n    Web --&gt; API\n    API --&gt; DB\n\n    style Kitchen fill:#ffcc99\n    style Service fill:#99ccff\n    style Cashier fill:#99ff99\n    style DB fill:#ffcc99\n    style API fill:#99ccff\n    style Web fill:#99ff99</code></pre> <p>N\u00e4ide: <pre><code>services:\n  db:      # Teenuse nimi - andmebaas\n  api:     # Teenuse nimi - API server\n  web:     # Teenuse nimi - veebileht\n</code></pre></p>"},{"location":"docker_orchestration/lecture/#3-vorgud-ja-andmete-jagamine","title":"3. V\u00f5rgud ja andmete jagamine","text":"<p>Compose loob automaatselt v\u00f5rgu, kus k\u00f5ik teenused saavad omavahel suhelda. See on nagu restorani sisev\u00f5rk - k\u00f6\u00f6k saab suhelda teenindusega.</p> <pre><code>graph TB\n    subgraph \"\ud83c\udfea Restorani sisev\u00f5rk\"\n        Kitchen[\ud83d\udc68\u200d\ud83c\udf73 K\u00f6\u00f6k&lt;br/&gt;192.168.1.10]\n        Service[\ud83d\udc69\u200d\ud83d\udcbc Teenindus&lt;br/&gt;192.168.1.11]\n        Cashier[\ud83d\udcb0 Kassa&lt;br/&gt;192.168.1.12]\n    end\n\n    subgraph \"\ud83d\udc33 Docker v\u00f5rk\"\n        Web[\ud83c\udf10 web&lt;br/&gt;web:3000]\n        API[\ud83d\udd27 api&lt;br/&gt;api:5000]\n        DB[\ud83d\uddc4\ufe0f db&lt;br/&gt;db:5432]\n    end\n\n    Kitchen -.-&gt;|\"Suhtleb\"| Service\n    Service -.-&gt;|\"Suhtleb\"| Cashier\n\n    Web -.-&gt;|\"web:3000\"| API\n    API -.-&gt;|\"db:5432\"| DB\n\n    style Kitchen fill:#ffcc99\n    style Service fill:#99ccff\n    style Cashier fill:#99ff99\n    style Web fill:#ffcc99\n    style API fill:#99ccff\n    style DB fill:#99ff99</code></pre> <p>Automaatne v\u00f5rk: - K\u00f5ik teenused samas v\u00f5rgus - Teenused saavad \u00fcksteist leida nime j\u00e4rgi - N\u00e4iteks: <code>db:5432</code> \u00fchendub andmebaasi teenusega</p>"},{"location":"docker_orchestration/lecture/#pohilised-moisted-ja-protsessid","title":"\ud83d\udd0d P\u00f5hilised m\u00f5isted ja protsessid","text":""},{"location":"docker_orchestration/lecture/#kust-tulevad-docker-imageid","title":"Kust tulevad Docker image'id?","text":"<pre><code>graph LR\n    subgraph \"\ud83d\udce6 Image allikad\"\n        DockerHub[\ud83d\udc33 Docker Hub&lt;br/&gt;docker.io]\n        Private[\ud83c\udfe2 Private Registry&lt;br/&gt;company.com/registry]\n        Local[\ud83d\udcbb Kohalikud image'id&lt;br/&gt;docker build]\n    end\n\n    subgraph \"\u2b07\ufe0f Allalaadimine\"\n        Pull[\ud83d\udce5 docker pull&lt;br/&gt;Allalaadimine]\n        Build[\ud83d\udd28 docker build&lt;br/&gt;Ehitus]\n    end\n\n    DockerHub --&gt; Pull\n    Private --&gt; Pull\n    Local --&gt; Build\n\n    style DockerHub fill:#99ccff\n    style Private fill:#ffcc99\n    style Local fill:#99ff99\n    style Pull fill:#ccccff\n    style Build fill:#ccccff</code></pre> <p>Docker Hub - avalik pood, kust saad alla laadida valmis image'id - <code>docker pull nginx</code> - laeb alla nginx image'i - <code>docker pull postgres:13</code> - laeb alla PostgreSQL versiooni 13</p> <p>Private Registry - ettev\u00f5tte oma image'ite pood - <code>docker pull company.com/myapp:latest</code></p> <p>Kohalik ehitus - teed ise image'i - <code>docker build -t myapp .</code> - ehitad image'i kohalikult</p>"},{"location":"docker_orchestration/lecture/#kuidas-imageid-ehitatakse","title":"Kuidas image'id ehitatakse?","text":"<pre><code>graph TB\n    subgraph \"\ud83d\udd28 Image ehitus\"\n        Dockerfile[\ud83d\udcc4 Dockerfile&lt;br/&gt;\"Retsept\"]\n        Build[\ud83d\udd28 docker build&lt;br/&gt;Ehitus]\n        Image[\ud83d\udce6 Image&lt;br/&gt;Valmis pakett]\n    end\n\n    subgraph \"\ud83d\udccb Dockerfile sisu\"\n        Base[\ud83d\udc27 Base Image&lt;br/&gt;Ubuntu, Alpine]\n        Copy[\ud83d\udccb COPY&lt;br/&gt;Failide kopeerimine]\n        Install[\ud83d\udce6 RUN&lt;br/&gt;Paketite installimine]\n        Expose[\ud83c\udf10 EXPOSE&lt;br/&gt;Pordi avamine]\n        CMD[\u25b6\ufe0f CMD&lt;br/&gt;K\u00e4ivitamisk\u00e4sk]\n    end\n\n    Dockerfile --&gt; Build\n    Build --&gt; Image\n\n    Base --&gt; Copy\n    Copy --&gt; Install\n    Install --&gt; Expose\n    Expose --&gt; CMD\n\n    style Dockerfile fill:#ffcc99\n    style Build fill:#99ccff\n    style Image fill:#99ff99\n    style Base fill:#ccccff\n    style Copy fill:#ccccff\n    style Install fill:#ccccff\n    style Expose fill:#ccccff\n    style CMD fill:#ccccff</code></pre> <p>Dockerfile - \"retsept\" image'i jaoks: <pre><code># Base image - millest alustada\nFROM node:16-alpine\n\n# T\u00f6\u00f6kataloog\nWORKDIR /app\n\n# Kopeeri failid\nCOPY package*.json ./\nRUN npm install\n\n# Kopeeri rakenduse failid\nCOPY . .\n\n# Ava port\nEXPOSE 3000\n\n# K\u00e4ivitamisk\u00e4sk\nCMD [\"npm\", \"start\"]\n</code></pre></p>"},{"location":"docker_orchestration/lecture/#millest-koosneb-docker-image","title":"Millest koosneb Docker image?","text":"<pre><code>graph TB\n    subgraph \"\ud83d\udce6 Docker Image struktuur\"\n        Layer1[\ud83d\udccb Layer 1&lt;br/&gt;Base Image&lt;br/&gt;Ubuntu/Alpine]\n        Layer2[\ud83d\udccb Layer 2&lt;br/&gt;S\u00fcsteemi paketid&lt;br/&gt;apt install]\n        Layer3[\ud83d\udccb Layer 3&lt;br/&gt;Rakenduse failid&lt;br/&gt;COPY .]\n        Layer4[\ud83d\udccb Layer 4&lt;br/&gt;Konfiguratsioon&lt;br/&gt;ENV, EXPOSE]\n    end\n\n    Layer1 --&gt; Layer2\n    Layer2 --&gt; Layer3\n    Layer3 --&gt; Layer4\n\n    style Layer1 fill:#ffcccc\n    style Layer2 fill:#ffcccc\n    style Layer3 fill:#ccffcc\n    style Layer4 fill:#ccffcc</code></pre> <p>Image koosneb kihtidest (layers): - Base layer - operatsioonis\u00fcsteem (Ubuntu, Alpine) - System layer - s\u00fcsteemi paketid ja t\u00f6\u00f6riistad - Application layer - sinu rakenduse failid - Config layer - keskkonnamuutujad ja seaded</p>"},{"location":"docker_orchestration/lecture/#kuidas-containerid-tootavad","title":"Kuidas container'id t\u00f6\u00f6tavad?","text":"<pre><code>graph LR\n    subgraph \"\ud83d\udc33 Container eluts\u00fckkel\"\n        Image[\ud83d\udce6 Image&lt;br/&gt;Staatiline fail]\n        Container[\ud83d\udce6 Container&lt;br/&gt;K\u00e4ivitatud protsess]\n        Running[\u25b6\ufe0f Running&lt;br/&gt;T\u00f6\u00f6tav rakendus]\n        Stopped[\u23f9\ufe0f Stopped&lt;br/&gt;Peatatud]\n        Removed[\ud83d\uddd1\ufe0f Removed&lt;br/&gt;Kustutatud]\n    end\n\n    Image --&gt; Container\n    Container --&gt; Running\n    Running --&gt; Stopped\n    Stopped --&gt; Container\n    Stopped --&gt; Removed\n\n    style Image fill:#ffcc99\n    style Container fill:#99ccff\n    style Running fill:#99ff99\n    style Stopped fill:#ffcc99\n    style Removed fill:#ff9999</code></pre> <p>Container eluts\u00fckkel: 1. Image - staatiline fail (nagu ZIP) 2. Container - k\u00e4ivitatud image (nagu programm) 3. Running - t\u00f6\u00f6tav rakendus 4. Stopped - peatatud, aga alles 5. Removed - kustutatud</p>"},{"location":"docker_orchestration/lecture/#pohikasud","title":"P\u00f5hik\u00e4sud","text":"<p>Docker Compose'iga on k\u00f5ik lihtne - ainult m\u00f5ni p\u00f5hik\u00e4sk, mida peate teadma:</p> <pre><code>graph LR\n    subgraph \"\ud83d\ude80 K\u00e4ivitamine\"\n        Up[\ud83d\udcc8 docker-compose up&lt;br/&gt;K\u00e4ivita k\u00f5ik]\n        UpD[\ud83d\udcc8 docker-compose up -d&lt;br/&gt;Taustal]\n        Build[\ud83d\udd28 docker-compose build&lt;br/&gt;Ehita image]\n        BuildUp[\ud83d\udd28 docker-compose up --build&lt;br/&gt;Ehita ja k\u00e4ivita]\n    end\n\n    subgraph \"\u23f9\ufe0f Peatamine\"\n        Down[\ud83d\udcc9 docker-compose down&lt;br/&gt;Peata k\u00f5ik]\n        Restart[\ud83d\udd04 docker-compose restart&lt;br/&gt;Taask\u00e4ivita]\n    end\n\n    subgraph \"\ud83d\udcca Info\"\n        PS[\ud83d\udccb docker-compose ps&lt;br/&gt;Staatust]\n        Logs[\ud83d\udcdd docker-compose logs&lt;br/&gt;Logid]\n        LogsF[\ud83d\udcdd docker-compose logs -f&lt;br/&gt;Reaalajas]\n    end\n\n    Up --&gt; Down\n    UpD --&gt; Down\n    Build --&gt; BuildUp\n    Restart --&gt; Up\n\n    style Up fill:#ccffcc\n    style UpD fill:#ccffcc\n    style Build fill:#ccffcc\n    style BuildUp fill:#ccffcc\n    style Down fill:#ffcccc\n    style Restart fill:#ffcccc\n    style PS fill:#ccccff\n    style Logs fill:#ccccff\n    style LogsF fill:#ccccff</code></pre> <pre><code># K\u00e4ivita k\u00f5ik teenused (n\u00e4ete logisid)\ndocker-compose up\n\n# K\u00e4ivita taustal (detached mode - ei n\u00e4e logisid)\ndocker-compose up -d\n\n# Peata ja eemalda k\u00f5ik teenused\ndocker-compose down\n\n# Vaata teenuste staatust\ndocker-compose ps\n\n# Vaata konkreetse teenuse logisid\ndocker-compose logs web\n\n# J\u00e4lgi logisid reaalajas (nagu tail -f)\ndocker-compose logs -f\n\n# Taask\u00e4ivita konkreetne teenus\ndocker-compose restart api\n\n# Ehita image uuesti (kui muutsite Dockerfile'i)\ndocker-compose build\n\n# Ehita ja k\u00e4ivita uuesti\ndocker-compose up --build\n</code></pre> <p>Praktiline n\u00e4ide: <pre><code># 1. K\u00e4ivita rakendus\ndocker-compose up -d\n\n# 2. Vaata, kas k\u00f5ik t\u00f6\u00f6tab\ndocker-compose ps\n\n# 3. Vaata logisid, kui midagi ei t\u00f6\u00f6ta\ndocker-compose logs -f\n\n# 4. Peata rakendus\ndocker-compose down\n</code></pre></p>"},{"location":"docker_orchestration/lecture/#loeng-212-multi-service-applications-15-min","title":"\ud83d\udcd6 Loeng 21.2: Multi-service Applications (15 min)","text":""},{"location":"docker_orchestration/lecture/#teenuste-tuubid-ja-rollid","title":"Teenuste t\u00fc\u00fcbid ja rollid","text":""},{"location":"docker_orchestration/lecture/#web-application-stack","title":"Web Application Stack","text":"<pre><code>version: '3.8'\n\nservices:\n  # Frontend - kasutajaliides\n  frontend:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./frontend:/usr/share/nginx/html\n    depends_on:\n      - backend\n\n  # Backend - API server\n  backend:\n    build: ./backend\n    environment:\n      - DATABASE_URL=postgres://user:pass@db:5432/app\n      - REDIS_URL=redis://cache:6379\n    depends_on:\n      - db\n      - cache\n\n  # Database - andmete salvestamine\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=app\n      - POSTGRES_USER=user\n      - POSTGRES_PASSWORD=pass\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  # Cache - kiire andmete juurdep\u00e4\u00e4s\n  cache:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  postgres_data:\n  redis_data:\n</code></pre>"},{"location":"docker_orchestration/lecture/#dependency-management","title":"Dependency Management","text":""},{"location":"docker_orchestration/lecture/#depends_on-teenuste-jarjekord","title":"depends_on - teenuste j\u00e4rjekord","text":"<pre><code>services:\n  app:\n    image: myapp:latest\n    depends_on:\n      - db\n      - redis\n      - elasticsearch\n\n  db:\n    image: postgres:13\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:alpine\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 3s\n      retries: 5\n</code></pre>"},{"location":"docker_orchestration/lecture/#networking","title":"Networking","text":""},{"location":"docker_orchestration/lecture/#default-network","title":"Default Network","text":"<p>Compose loob automaatselt v\u00f5rgu, kus teenused saavad omavahel suhelda teenuse nimede abil.</p> <pre><code>services:\n  web:\n    image: nginx\n    # Saab \u00fchenduda db teenusega: db:5432\n\n  db:\n    image: postgres\n    # Teenuse nimi 'db' on automaatselt DNS-is\n</code></pre>"},{"location":"docker_orchestration/lecture/#custom-networks","title":"Custom Networks","text":"<pre><code>services:\n  web:\n    image: nginx\n    networks:\n      - frontend\n      - backend\n\n  api:\n    image: myapp/api\n    networks:\n      - backend\n\n  db:\n    image: postgres\n    networks:\n      - backend\n\nnetworks:\n  frontend:\n    driver: bridge\n  backend:\n    driver: bridge\n    internal: true  # Ainult sisemine v\u00f5rk\n</code></pre>"},{"location":"docker_orchestration/lecture/#loeng-213-lihtne-orkestreerimine-5-min","title":"\ud83d\udcd6 Loeng 21.3: Lihtne orkestreerimine (5 min)","text":""},{"location":"docker_orchestration/lecture/#miks-docker-compose-on-piisav","title":"Miks Docker Compose on piisav?","text":"<p>Docker Compose on lihtne ja piisav enamiku rakenduste jaoks. \u00c4ra keeruta lihtsaid asju keeruliseks!</p>"},{"location":"docker_orchestration/lecture/#millal-vajad-midagi-keerukamat","title":"Millal vajad midagi keerukamat?","text":"<p>Docker Compose sobib, kui: - Sul on v\u00e4ike kuni keskmine rakendus - K\u00f5ik teenused jooksevad \u00fchel masinal - Sul pole vaja automaatset skaleerimist - Tahad lihtsat ja kiiret setup'i</p> <p>Vajad midagi keerukamat, kui: - Sul on palju masinaid (cluster) - Vajad automaatset skaleerimist - Sul on v\u00e4ga suur rakendus - Vajad k\u00f5rget k\u00e4ttesaadavust</p>"},{"location":"docker_orchestration/lecture/#lihtne-soovitus","title":"Lihtne soovitus","text":"<pre><code>graph LR\n    subgraph \"\ud83c\udfaf Alusta siit\"\n        Simple[\ud83d\udc33 Docker Compose&lt;br/&gt;Lihtne ja piisav]\n        Complex[\u2638\ufe0f Kubernetes&lt;br/&gt;Keeruline, aga v\u00f5imas]\n    end\n\n    Simple --&gt;|\"Kui vajad rohkem\"| Complex\n\n    style Simple fill:#99ff99\n    style Complex fill:#ff9999</code></pre> <p>\u00d5ppimise j\u00e4rjekord: 1. Docker Compose - alusta siit 2. Kubernetes - kui vajad rohkem 3. Alternatiivid - kui K8s pole \u00f5ige valik</p> <p>Lihtne reegel: \u00c4ra kasuta Kubernetes'i, kui Docker Compose t\u00f6\u00f6tab!</p>"},{"location":"docker_orchestration/lecture/#loeng-214-environment-management-10-min","title":"\ud83d\udcd6 Loeng 21.4: Environment Management (10 min)","text":""},{"location":"docker_orchestration/lecture/#environment-specific-configurations","title":"Environment-specific configurations","text":""},{"location":"docker_orchestration/lecture/#development-vs-production","title":"Development vs Production","text":"<pre><code># docker-compose.yml (base)\nversion: '3.8'\n\nservices:\n  web:\n    image: nginx:alpine\n    ports:\n      - \"${WEB_PORT:-80}:80\"\n    environment:\n      - NODE_ENV=${NODE_ENV:-development}\n      - DEBUG=${DEBUG:-true}\n    volumes:\n      - ./src:/app/src:ro\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=${DB_NAME:-app}\n      - POSTGRES_USER=${DB_USER:-user}\n      - POSTGRES_PASSWORD=${DB_PASSWORD:-pass}\n</code></pre>"},{"location":"docker_orchestration/lecture/#environment-files","title":"Environment Files","text":"<pre><code># .env.development\nWEB_PORT=3000\nNODE_ENV=development\nDEBUG=true\nDB_NAME=app_dev\nDB_USER=dev_user\nDB_PASSWORD=dev_pass\n\n# .env.production\nWEB_PORT=80\nNODE_ENV=production\nDEBUG=false\nDB_NAME=app_prod\nDB_USER=prod_user\nDB_PASSWORD=prod_pass\n</code></pre>"},{"location":"docker_orchestration/lecture/#environment-specific-compose-files","title":"Environment-specific Compose Files","text":"<pre><code># docker-compose.override.yml (development)\nversion: '3.8'\n\nservices:\n  web:\n    volumes:\n      - ./src:/app/src:ro\n      - ./logs:/app/logs\n    environment:\n      - DEBUG=true\n      - LOG_LEVEL=debug\n\n  db:\n    ports:\n      - \"5432:5432\"  # Expose for debugging\n</code></pre> <pre><code># docker-compose.prod.yml (production)\nversion: '3.8'\n\nservices:\n  web:\n    restart: unless-stopped\n    environment:\n      - DEBUG=false\n      - LOG_LEVEL=warn\n    deploy:\n      replicas: 3\n\n  db:\n    restart: unless-stopped\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n</code></pre>"},{"location":"docker_orchestration/lecture/#kasutamine-erinevates-keskkondades","title":"Kasutamine erinevates keskkondades","text":"<pre><code># Development\ndocker-compose up\n\n# Production\ndocker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d\n\n# Staging\ndocker-compose -f docker-compose.yml -f docker-compose.staging.yml up -d\n</code></pre>"},{"location":"docker_orchestration/lecture/#loeng-215-kubernetes-introduction-15-min","title":"\ud83d\udcd6 Loeng 21.5: Kubernetes Introduction (15 min)","text":""},{"location":"docker_orchestration/lecture/#miks-kubernetes","title":"Miks Kubernetes?","text":""},{"location":"docker_orchestration/lecture/#docker-compose-piirangud","title":"Docker Compose piirangud","text":"<ul> <li>Single host - ainult \u00fchel masinal</li> <li>No auto-scaling - k\u00e4sitsi skaleerimine</li> <li>Limited orchestration - lihtne orkestreerimine</li> <li>No self-healing - k\u00e4sitsi taask\u00e4ivitamine</li> </ul>"},{"location":"docker_orchestration/lecture/#kubernetes-eelised","title":"Kubernetes eelised","text":"<ul> <li>Multi-host - mitmel masinal</li> <li>Auto-scaling - automaatne skaleerimine</li> <li>Self-healing - automaatne taask\u00e4ivitamine</li> <li>Load balancing - automaatne koormuse jaotus</li> <li>Rolling updates - katkestusteta uuendused</li> </ul>"},{"location":"docker_orchestration/lecture/#kubernetes-pohikomponendid","title":"Kubernetes p\u00f5hikomponendid","text":""},{"location":"docker_orchestration/lecture/#pod","title":"Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: web-pod\nspec:\n  containers:\n  - name: web\n    image: nginx:alpine\n    ports:\n    - containerPort: 80\n</code></pre>"},{"location":"docker_orchestration/lecture/#deployment","title":"Deployment","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: web\n        image: nginx:alpine\n        ports:\n        - containerPort: 80\n</code></pre>"},{"location":"docker_orchestration/lecture/#service","title":"Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: web-service\nspec:\n  selector:\n    app: web\n  ports:\n  - port: 80\n    targetPort: 80\n  type: LoadBalancer\n</code></pre>"},{"location":"docker_orchestration/lecture/#minikube-local-kubernetes","title":"Minikube - Local Kubernetes","text":"<pre><code># Install Minikube\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# Start cluster\nminikube start\n\n# Deploy application\nkubectl apply -f deployment.yaml\n\n# Access application\nminikube service web-service\n</code></pre>"},{"location":"docker_orchestration/lecture/#docker-compose-vs-kubernetes","title":"Docker Compose vs Kubernetes","text":"<pre><code>graph LR\n    subgraph \"\ud83d\udc33 Docker Compose\"\n        Compose[\ud83d\udc33 Docker Compose&lt;br/&gt;\u2022 Lihtne&lt;br/&gt;\u2022 \u00dcks host&lt;br/&gt;\u2022 K\u00e4sitsi skaleerimine&lt;br/&gt;\u2022 Madal \u00f5ppimisk\u00f5ver&lt;br/&gt;\u2022 Arendus]\n    end\n\n    subgraph \"\u2638\ufe0f Kubernetes\"\n        K8s[\u2638\ufe0f Kubernetes&lt;br/&gt;\u2022 Keeruline&lt;br/&gt;\u2022 Mitmed hostid&lt;br/&gt;\u2022 Automaatne skaleerimine&lt;br/&gt;\u2022 K\u00f5rge \u00f5ppimisk\u00f5ver&lt;br/&gt;\u2022 Tootmine]\n    end\n\n    Compose -.-&gt;|\"J\u00e4rgmine samm\"| K8s\n\n    style Compose fill:#99ccff\n    style K8s fill:#ff9999</code></pre> Feature Docker Compose Kubernetes Complexity Lihtne Keeruline Hosts Single Multiple Scaling Manual Auto Learning curve Madal K\u00f5rge Use case Development Production"},{"location":"docker_orchestration/lecture/#kokkuvote","title":"\ud83c\udfaf Kokkuv\u00f5te","text":"<p>P\u00e4rast seda n\u00e4dalat oskate:</p> <p>\u2705 Docker Compose - multi-container rakenduste haldamine \u2705 Environment management - erinevate keskkondade konfigureerimine \u2705 Podman alternatives - rootless container orkestreerimine \u2705 Kubernetes basics - production-ready orkestreerimise alused \u2705 Best practices - turvaline ja skaleeritav arhitektuur  </p>"},{"location":"docker_orchestration/lecture/#praktiline-soovitus","title":"\ud83c\udfaf Praktiline soovitus:","text":"<p>Alusta lihtsast: 1. Docker Compose - lihtsate rakenduste jaoks 2. Kubernetes - kui vajad rohkem funktsionaalsust 3. Alternatiivid - kui K8s on liiga keeruline</p> <p>\u00d5ppimise j\u00e4rjekord: - N\u00e4dal 21: Docker Compose p\u00f5hialused - J\u00e4rgmised n\u00e4dalad: Kubernetes s\u00fcgavamalt - Tulevikus: Alternatiivide tutvustus</p> <p>J\u00e4rgmine samm: Laboris praktiseerime lihtsa rakenduse juurutamist!</p>"},{"location":"docker_orchestration/lecture/#lihtne-mote-ara-jargi-hupe","title":"\ud83e\udd14 Lihtne m\u00f5te: \u00c4ra j\u00e4rgi h\u00fcpe","text":""},{"location":"docker_orchestration/lecture/#miks-see-oluline-on","title":"Miks see oluline on?","text":"<p>Oleme \u00f5ppinud Docker Compose'i ja orkestreerimist, aga on oluline m\u00f5ista: lihtne on parem.</p>"},{"location":"docker_orchestration/lecture/#lihtne-vs-keeruline","title":"Lihtne vs keeruline","text":"<pre><code>graph LR\n    subgraph \"\ud83c\udfd7\ufe0f Keeruline\"\n        Micro[\ud83d\udd27 Mikroteenused&lt;br/&gt;Palju v\u00e4ikseid osi]\n        K8s[\u2638\ufe0f Kubernetes&lt;br/&gt;Keeruline setup]\n        Complex[\ud83e\udd2f Raske debugida&lt;br/&gt;Palju asju hallata]\n    end\n\n    subgraph \"\ud83d\uddff Lihtne\"\n        Mono[\ud83c\udfe2 \u00dcks rakendus&lt;br/&gt;K\u00f5ik koos]\n        Compose[\ud83d\udc33 Docker Compose&lt;br/&gt;Lihtne setup]\n        Simple[\ud83d\ude0c Lihtne debugida&lt;br/&gt;V\u00e4he asju hallata]\n    end\n\n    Micro --&gt; Complex\n    K8s --&gt; Complex\n    Mono --&gt; Simple\n    Compose --&gt; Simple\n\n    style Micro fill:#ffcccc\n    style K8s fill:#ffcccc\n    style Complex fill:#ff9999\n    style Mono fill:#ccffcc\n    style Compose fill:#ccffcc\n    style Simple fill:#99ff99</code></pre>"},{"location":"docker_orchestration/lecture/#lihtne-opetus","title":"Lihtne \u00f5petus","text":"<p>Alusta lihtsast: - \u00dcks rakendus, \u00fcks andmebaas - Docker Compose lihtsateks asjadeks - Lisa keerukust ainult siis, kui vajad</p> <p>\u00c4ra j\u00e4rgi h\u00fcpe: - Mikroteenused pole alati parem - Kubernetes pole alati vajalik - Lihtne on parem kui keeruline</p>"},{"location":"docker_orchestration/lecture/#loppmote","title":"L\u00f5ppm\u00f5te","text":"<p>Vali see, mis t\u00f6\u00f6tab sinu jaoks. M\u00f5nikord on lihtne lahendus parim lahendus.</p>"},{"location":"docker_orchestration/lecture/#lisaressursid-ja-dokumentatsioon","title":"\ud83d\udcda Lisaressursid ja dokumentatsioon","text":""},{"location":"docker_orchestration/lecture/#oppimiseks","title":"\ud83c\udf93 \u00d5ppimiseks:","text":"<ul> <li>Docker Compose Documentation - ametlik dokumentatsioon</li> <li>Docker Compose Quickstart - kiire algus</li> <li>Docker Compose Examples - palju n\u00e4iteid</li> </ul>"},{"location":"docker_orchestration/lecture/#praktikaks","title":"\ud83d\udd27 Praktikaks:","text":"<ul> <li>Docker Compose Reference - k\u00f5ik v\u00f5imalikud seaded</li> <li>Docker Compose Best Practices - tootmiskeskkonna n\u00f5uded</li> <li>Docker Compose Networking - v\u00f5rgu konfiguratsioon</li> </ul>"},{"location":"docker_orchestration/lecture/#abi-saamiseks","title":"\ud83c\udd98 Abi saamiseks:","text":"<ul> <li>Docker Community - foorumid</li> <li>Stack Overflow - k\u00fcsimused ja vastused</li> <li>Docker Hub - valmis image'id</li> </ul>"},{"location":"docker_orchestration/lecture/#alternatiivide-kohta","title":"\ud83d\udcd6 Alternatiivide kohta:","text":"<ul> <li>Podman Compose - rootless alternatiiv</li> <li>Kubernetes Documentation - kui vajate rohkem</li> <li>Minikube - kohalik Kubernetes</li> </ul>"},{"location":"docker_orchestration/lecture/#lihtsate-lahenduste-kohta","title":"\ud83e\udd14 Lihtsate lahenduste kohta:","text":"<ul> <li>Start Simple - Alusta lihtsast</li> <li>Docker Compose Best Practices - Tootmiskeskkonna n\u00f5uded</li> </ul>"},{"location":"docker_orchestration/lecture/#rohkem-lugemist-orkestreerimise-kohta","title":"\ud83d\udcda Rohkem lugemist orkestreerimise kohta:","text":"<ul> <li>16 Most Useful Container Orchestration Tools in 2025 - \u00dclevaade erinevatest orkestreerimise t\u00f6\u00f6riistadest</li> </ul>"},{"location":"git_version_control/homework/","title":"N\u00e4dal 9 Kodut\u00f6\u00f6: Git Projekti Portfolio","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Demonstreerida Git'i ja GitHub'i oskusi Aeg: 2 tundi praktilist t\u00f6\u00f6d</p>"},{"location":"git_version_control/homework/#ulesande-kirjeldus","title":"\ud83c\udfaf \u00dclesande Kirjeldus","text":"<p>Looge lihtne projekt, mis demonstreerib k\u00f5iki Git'i ja GitHub'i peamisi oskusi. Fookus on Git workflow'l, mitte koodi keerukusel.</p>"},{"location":"git_version_control/homework/#oluline-oige-git-flow","title":"\ud83d\udd04 OLULINE: \u00d5ige Git Flow","text":"<pre><code>main (toodang)        \u25cf\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25cf\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25cf\n                       \\         \\         \\  \ndevelop (test)          \u25cf\u2500\u2500\u2500\u2500\u2500\u25cf\u2500\u2500\u2500\u25cf\u2500\u2500\u2500\u2500\u2500\u25cf\u2500\u2500\u2500\u25cf\n                         \\     \\ /     /\nfeature branch'id        \u25cf\u2500\u2500\u2500\u2500\u2500\u25cf\u2500\u2500\u2500\u2500\u2500\u25cf\n</code></pre> <p>ALATI j\u00e4rgige: feature \u2192 develop \u2192 main</p> <p>MITTE KUNAGI: feature \u2192 main</p>"},{"location":"git_version_control/homework/#juhend","title":"\ud83d\ude80 Juhend","text":""},{"location":"git_version_control/homework/#samm-1-repository-loomine-20-min","title":"Samm 1: Repository Loomine (20 min)","text":"<ol> <li>GitHub'is looge uus repository</li> <li>Nimi: <code>its-git-demo</code> (v\u00f5i sarnane)</li> <li> <p>Public, README, MIT license</p> </li> <li> <p>Kloonige repository <pre><code>git clone https://github.com/teie-nimi/its-git-demo.git\ncd its-git-demo\n</code></pre></p> </li> <li> <p>Looge p\u00f5hilised failid</p> </li> <li>Muutke README.md</li> <li> <p>Looge .gitignore: <code>echo \"*.log\\n*.tmp\" &gt; .gitignore</code></p> </li> <li> <p>Esimene commit <pre><code>git add .\ngit commit -m \"Initial commit\"\ngit push origin main\n</code></pre></p> </li> </ol>"},{"location":"git_version_control/homework/#samm-2-lihtne-script-25-min","title":"Samm 2: Lihtne Script (25 min)","text":"<ol> <li>Looge develop branch</li> <li>Minge main branch'ilt develop branch'ile</li> <li> <p>Push'ige develop branch GitHub'i</p> </li> <li> <p>Looge feature branch</p> </li> <li>Develop branch'ilt looge uus branch, n\u00e4iteks \"feature/system-info\"</li> <li> <p>Vahetage sellele branch'ile</p> </li> <li> <p>Kirjutage lihtne script</p> </li> <li>Looge bash script fail (n\u00e4iteks system_info.sh)</li> <li>Kopeerige see kood: <pre><code>#!/bin/bash\necho \"=== System Information ===\"\necho \"Date: $(date)\"\necho \"User: $(whoami)\"\necho \"Current directory: $(pwd)\"\necho \"Home directory: $HOME\"\necho \"\"\necho \"=== Disk Usage ===\"\ndf -h | head -5\necho \"\"\necho \"=== Memory Info ===\"\nfree -h 2&gt;/dev/null || echo \"Memory info not available\"\necho \"\"\necho \"Script completed successfully!\"\n</code></pre></li> <li>Tehke script k\u00e4ivitatavaks: <code>chmod +x system_info.sh</code></li> <li> <p>Testige script'i: <code>./system_info.sh</code></p> </li> <li> <p>Looge dokumentatsioon</p> </li> <li>Looge USAGE.md fail</li> <li> <p>Kopeerige see sisu: <pre><code># Usage Guide\n\n## System Info Script\n\n### Purpose\nShows basic system information.\n\n### Usage\n```bash\n./system_info.sh\n</code></pre></p> <p>### Output  Script displays:  - Current date and time  - Current user name  - Current directory path  - Disk usage information  - Memory information</p> <p>### Requirements  - Bash shell  - Unix/Linux system  ```</p> </li> <li> <p>Seadistage GitHub Actions</p> </li> <li>Looge <code>.github/workflows</code> kaust</li> <li> <p>Looge test.yml fail:    <pre><code>name: Test\non: [push, pull_request]\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v4\n    - run: |\n        bash -n system_info.sh\n        chmod +x system_info.sh\n        ./system_info.sh\n</code></pre></p> </li> <li> <p>Commit ja push k\u00f5ik muudatused</p> </li> <li>Staging area selgitus: Git'is on 3 ala:<ul> <li>Working Directory (teie failid)</li> <li>Staging Area (failid valmis commit'iks) \u2b05\ufe0f SIIN</li> <li>Repository (commit'itud failid)</li> </ul> </li> <li>Lisage k\u00f5ik failid staging area'le: <code>git add .</code></li> <li>Vaadake olekut: <code>git status</code> (rohelised failid on staging area's)</li> <li>Tehke commit selge s\u00f5numiga: <code>git commit -m \"feat: add system info script and docs\"</code></li> <li>Push'ige feature branch GitHub'i: <code>git push origin feature/system-info</code></li> </ol>"},{"location":"git_version_control/homework/#samm-3-github-features-35-min","title":"Samm 3: GitHub Features (35 min)","text":"<ol> <li>Looge Issues GitHub'is</li> <li>Issue #1: \"Add system info script\" - m\u00e4rgistage label'iga \"enhancement\"</li> <li> <p>Issue #2: \"Improve documentation\" - m\u00e4rgistage label'iga \"documentation\"</p> </li> <li> <p>Tehke Pull Request</p> </li> <li>GitHub'is looge PR: feature/system-info \u2192 develop</li> <li>OLULINE: PR PEAB minema develop branch'i, MITTE main'i</li> <li>Kirjutage hea pealkiri ja kirjeldus</li> <li>Mainige, et see lahendab Issue #1 (\"Closes #1\")</li> <li> <p>Merge'ige PR (ise endale)</p> </li> <li> <p>Cleanup p\u00e4rast PR merge'it</p> </li> <li>Minge develop branch'ile: <code>git checkout develop</code></li> <li>Pull'ige muudatused: <code>git pull origin develop</code></li> <li>Kustutage feature branch: <code>git branch -d feature/system-info</code></li> <li> <p>Kustutage remote feature branch: <code>git push origin --delete feature/system-info</code></p> </li> <li> <p>Testige GitHub Actions</p> </li> <li>Vaadake GitHub'is Actions tab'is</li> <li>Veenduge, et workflow t\u00f6\u00f6tab</li> <li>Kui ei t\u00f6\u00f6ta, parandage vead</li> </ol>"},{"location":"git_version_control/homework/#samm-4-git-advanced-features-25-min","title":"Samm 4: Git Advanced Features (25 min)","text":"<ol> <li>Looge tahtlikult merge conflict</li> <li>Minge develop branch'ile: <code>git checkout develop</code></li> <li>Muutke README.md faili (lisage rida l\u00f5ppu): \"Develop branch versioon\"</li> <li> <p>Commit'ige: <code>git commit -am \"docs: update from develop\"</code></p> </li> <li> <p>Minge main branch'ile: <code>git checkout main</code> </p> </li> <li>Muutke README.md SAMA KOHTA teisiti: \"Main branch versioon\"</li> <li> <p>Commit'ige: <code>git commit -am \"docs: update from main\"</code></p> </li> <li> <p>N\u00fc\u00fcd merge develop \u2192 main: <code>git merge develop</code></p> </li> <li> <p>Git \u00fctleb konflikt! \u2705</p> </li> <li> <p>Lahendage merge conflict</p> </li> <li>Avage README.md ja n\u00e4ete konflikti m\u00e4rke</li> <li>Konflikti n\u00e4ide: <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nMain branch versioon\n=======\nDevelop branch versioon\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; develop\n</code></pre></li> <li>Otsustage, kumba versiooni hoida v\u00f5i kombineerige</li> <li>Eemaldage konflikti m\u00e4rgid (&lt;&lt;&lt;&lt;, ====, &gt;&gt;&gt;&gt;)</li> <li>Lisage fail staging area'le</li> <li> <p>L\u00f5petage merge commit'iga</p> </li> <li> <p>N\u00e4idake rebase kasutamist</p> </li> <li>Looge uus feature branch develop'ist: <code>git checkout -b feature/rebase-demo</code></li> <li>Tehke seal m\u00f5ni muudatus ja commit</li> <li>Kasutage git rebase k\u00e4sku main branch'i peale: <code>git rebase main</code></li> <li> <p>Merge'ige muudatus develop'i</p> </li> <li> <p>T\u00c4HTIS: Merge develop \u2192 main (toodangusse)</p> </li> <li>Kui develop on valmis: <code>git checkout main</code></li> <li>Merge develop: <code>git merge develop</code></li> <li> <p>Push toodangusse: <code>git push origin main</code></p> </li> <li> <p>Looge tagged release'd</p> </li> <li>Tag'ige praegune main versioon v1.0.0: <code>git tag v1.0.0</code></li> <li>Push'ige tag'id GitHub'i: <code>git push origin v1.0.0</code></li> <li>GitHub'is looge Release v1.0.0 tag'i p\u00f5hjal</li> </ol>"},{"location":"git_version_control/homework/#samm-5-finalize-15-min","title":"Samm 5: Finalize (15 min)","text":"<ol> <li>Uuendage README.md</li> <li> <p>Kopeerige see sisu README.md faili: <pre><code># Git Demo Project\n\nLihtne projekt Git ja GitHub oskuste demonstreerimiseks.\n\n## Eesm\u00e4rk\nSee projekt n\u00e4itab:\n- Git branching ja merging\n- GitHub collaboration\n- Automatiseeritud testimine\n- Dokumentatsiooni haldus\n\n## Git Oskused\n- \u2705 Repository seadistamine\n- \u2705 Feature branch workflow\n- \u2705 Merge conflict lahendamine\n- \u2705 Pull Request'id\n- \u2705 GitHub Actions\n- \u2705 Tagged release'id\n\n## Failid\n- `system_info.sh` - S\u00fcsteemi info script\n- `USAGE.md` - Kasutamise juhend\n- `.github/workflows/test.yml` - Automaatne testimine\n\n## Kasutamine\n```bash\n./system_info.sh\n</code></pre></p> <p>See on \u00f5ppeprojekt Git workflow demonstreerimiseks.  ```</p> </li> <li> <p>Tehke teine release</p> </li> <li>Commit'ige README muudatused develop branch'is</li> <li>Merge develop \u2192 main</li> <li>Tag'ige versioon v1.1.0</li> <li> <p>Push'ige k\u00f5ik muudatused ja tag'id</p> </li> <li> <p>L\u00f5plik kontroll</p> </li> <li>Veenduge, et GitHub'is on n\u00e4ha:<ul> <li>V\u00e4hemalt 10 commit'i</li> <li>Mitu branch'i</li> <li>Issues ja PR</li> <li>GitHub Actions t\u00f6\u00f6tab</li> <li>2 tag'i/release'i</li> </ul> </li> </ol>"},{"location":"git_version_control/lab/","title":"Git Version Control Lab: Git &amp; GitHub Actions","text":"<p>Kestus: 2 tundi Eesm\u00e4rk: Praktiliselt harjutada k\u00f5iki Git'i peamisi funktsioone</p>"},{"location":"git_version_control/lab/#samm-1-git-basics-ja-kohalik-kasutamine-45-min","title":"\ud83c\udfaf Samm 1: Git Basics ja Kohalik Kasutamine (45 min)","text":""},{"location":"git_version_control/lab/#harjutus-11-git-setup-ja-esimene-repository-15-min","title":"Harjutus 1.1: Git Setup ja Esimene Repository (15 min)","text":"<p>Seadistage Git: <pre><code># Kontrollige, kas Git on installeeritud\ngit --version\n\n# Seadistage kasutajainfo (kasutage oma andmeid)\ngit config --global user.name \"Teie Nimi\"\ngit config --global user.email \"teie.email@example.com\"\n\n# Kontrollige seadistusi\ngit config --list\n\n# Seadistage editor (valikuline)\ngit config --global core.editor \"code --wait\"  # VS Code\n</code></pre></p> <p>Looge esimene repository: <pre><code># Looge kaust\nmkdir git-practice-lab\ncd git-practice-lab\n\n# Algatage Git repository\ngit init\n\n# Kontrollige olukorda\ngit status\n\n# Looge esimene fail\necho \"# Git Practice Lab\" &gt; README.md\necho \"See on minu Git harjutuste projekt.\" &gt;&gt; README.md\n\n# Tehke esimene commit\ngit add README.md\ngit status\ngit commit -m \"Esimene commit: lisa README\"\n\n# Vaadake ajalugu\ngit log\ngit log --oneline\n</code></pre></p> <p>Kontrollpunkt: Teil peaks olema Git repository \u00fche commit'iga.</p>"},{"location":"git_version_control/lab/#harjutus-12-pohiline-git-workflow-15-min","title":"Harjutus 1.2: P\u00f5hiline Git Workflow (15 min)","text":"<p>Looge ja muutke faile: <pre><code># Looge Python script\ncat &gt; calculator.py &lt;&lt; 'EOF'\ndef add(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n\nif __name__ == \"__main__\":\n    print(\"Calculator: 2 + 3 =\", add(2, 3))\nEOF\n\n# Kontrollige olukorda\ngit status\n\n# Lisage fail ja tehke commit\ngit add calculator.py\ngit status\ngit commit -m \"Lisa lihtne kalkulaator\"\n\n# Muutke faili\necho \"\" &gt;&gt; calculator.py\necho \"def multiply(a, b):\" &gt;&gt; calculator.py\necho \"    return a * b\" &gt;&gt; calculator.py\n\n# Vaadake muudatusi\ngit diff\ngit status\n\n# Commit muudatused\ngit add calculator.py\ngit commit -m \"Lisa korrutamise funktsioon\"\n</code></pre></p> <p>Harjutage erinevaid Git k\u00e4ske: <pre><code># Vaadake commit'ide ajalugu\ngit log --oneline --graph\n\n# Vaadake konkreetse commit'i detaile\ngit show HEAD\ngit show HEAD~1\n\n# Looge veel faile\necho \"print('Tere, Git!')\" &gt; hello.py\necho \"*.pyc\" &gt; .gitignore\necho \"__pycache__/\" &gt;&gt; .gitignore\n\n# Lisage k\u00f5ik korraga\ngit add .\ngit status\ngit commit -m \"Lisa hello script ja gitignore\"\n</code></pre></p> <p>Kontrollpunkt: Teil peaks olema 3-4 commit'i erinevate failidega.</p>"},{"location":"git_version_control/lab/#harjutus-13-advanced-git-operations-15-min","title":"Harjutus 1.3: Advanced Git Operations (15 min)","text":"<p>Staging area vahele j\u00e4tmine: <pre><code># Muutke calculator.py\necho \"\" &gt;&gt; calculator.py\necho \"def divide(a, b):\" &gt;&gt; calculator.py\necho \"    if b != 0:\" &gt;&gt; calculator.py\necho \"        return a / b\" &gt;&gt; calculator.py\necho \"    return 'Error: Division by zero'\" &gt;&gt; calculator.py\n\n# Commit otse ilma git add'ita\ngit commit -am \"Lisa jagamise funktsioon\"\n\n# Vaadake erinevusi\ngit diff HEAD~1\ngit show --stat HEAD\n</code></pre></p> <p>Failide kustutamine ja \u00fcmbernimetamine: <pre><code># Looge ajutine fail\necho \"Ajutine sisu\" &gt; temp.txt\ngit add temp.txt\ngit commit -m \"Lisa ajutine fail\"\n\n# Kustutage fail\ngit rm temp.txt\ngit status\ngit commit -m \"Kustuta ajutine fail\"\n\n# Nimetage fail \u00fcmber\ngit mv hello.py greeting.py\ngit status\ngit commit -m \"Nimeta hello.py \u00fcmber greeting.py\"\n</code></pre></p> <p>Muudatuste tagasiv\u00f5tmine: <pre><code># Tehke m\u00f5ni muudatus\necho \"Vigane kood\" &gt;&gt; calculator.py\n\n# Vaadake muudatust\ngit diff\n\n# V\u00f5tke muudatus tagasi\ngit checkout -- calculator.py\n\n# Kontrollige\ngit status\n\n# Tehke muudatus ja lisage staging'u\necho \"Veel \u00fcks muudatus\" &gt;&gt; calculator.py\ngit add calculator.py\n\n# Eemaldage staging'st\ngit reset HEAD calculator.py\ngit status\n\n# T\u00fchistage t\u00f6\u00f6kausta muudatus\ngit checkout -- calculator.py\n</code></pre></p> <p>Kontrollpunkt: Oskate faile kustutada, \u00fcmbernimetada ja muudatusi t\u00fchistada.</p>"},{"location":"git_version_control/lab/#samm-2-branching-ja-merging-45-min","title":"\ud83c\udfaf Samm 2: Branching ja Merging (45 min)","text":""},{"location":"git_version_control/lab/#harjutus-21-harude-loomine-ja-haldamine-20-min","title":"Harjutus 2.1: Harude Loomine ja Haldamine (20 min)","text":"<p>Looge uus branch: <pre><code># Vaadake praeguseid branch'e\ngit branch\n\n# Looge uus branch\ngit branch feature/advanced-math\n\n# Vahetage branch'i\ngit checkout feature/advanced-math\n\n# V\u00f5i tehke m\u00f5lemad koos\ngit checkout -b feature/string-utils\n\n# Kontrollige, kus olete\ngit branch\n</code></pre></p> <p>Arendage eri branch'ides: <pre><code># Olge feature/string-utils branch'is\ncat &gt; string_utils.py &lt;&lt; 'EOF'\ndef reverse_string(text):\n    return text[::-1]\n\ndef count_words(text):\n    return len(text.split())\n\ndef capitalize_words(text):\n    return ' '.join(word.capitalize() for word in text.split())\n\nif __name__ == \"__main__\":\n    test_text = \"tere git maailm\"\n    print(\"Original:\", test_text)\n    print(\"Reversed:\", reverse_string(test_text))\n    print(\"Word count:\", count_words(test_text))\n    print(\"Capitalized:\", capitalize_words(test_text))\nEOF\n\ngit add string_utils.py\ngit commit -m \"Lisa string utiliitide moodul\"\n\n# Minge teise branch'i\ngit checkout feature/advanced-math\n\ncat &gt; advanced_math.py &lt;&lt; 'EOF'\nimport math\n\ndef power(base, exponent):\n    return base ** exponent\n\ndef square_root(number):\n    return math.sqrt(number)\n\ndef factorial(n):\n    if n &lt;= 1:\n        return 1\n    return n * factorial(n - 1)\n\nif __name__ == \"__main__\":\n    print(\"2^3 =\", power(2, 3))\n    print(\"sqrt(16) =\", square_root(16))\n    print(\"5! =\", factorial(5))\nEOF\n\ngit add advanced_math.py\ngit commit -m \"Lisa t\u00e4psema matemaatika moodul\"\n\n# Vaadake branch'ide ajalugu\ngit log --oneline --graph --all\n</code></pre></p> <p>Kontrollpunkt: Teil on kaks feature branch'i erinevate failidega.</p>"},{"location":"git_version_control/lab/#harjutus-22-branchide-merging-15-min","title":"Harjutus 2.2: Branch'ide Merging (15 min)","text":"<p>Merge esimene branch main'i: <pre><code># Minge main branch'i\ngit checkout main\n\n# Merge string-utils\ngit merge feature/string-utils\n\n# Vaadake tulemust\ngit log --oneline --graph\nls -la\n\n# Testage merged koodi\npython3 string_utils.py\n</code></pre></p> <p>Merge teine branch: <pre><code># Merge advanced-math\ngit merge feature/advanced-math\n\n# Vaadake tulemust\ngit log --oneline --graph --all\nls -la\n\n# Testage\npython3 advanced_math.py\n</code></pre></p> <p>Kontrollpunkt: M\u00f5lemad feature'id on main'is merge'itud.</p>"},{"location":"git_version_control/lab/#harjutus-23-merge-conflicts-10-min","title":"Harjutus 2.3: Merge Conflicts (10 min)","text":"<p>Looge konflikt: <pre><code># Looge kaks branch'i, mis muudavad sama faili\ngit checkout -b fix/calculator-output\n\n# Muutke calculator.py\nsed -i 's/print(\"Calculator: 2 + 3 =\", add(2, 3))/print(\"Kalkulaator: 2 + 3 =\", add(2, 3))/' calculator.py\n\ngit add calculator.py\ngit commit -m \"Muuda v\u00e4ljund eestikeelseks\"\n\n# Minge main'i ja tehke konfliktne muudatus\ngit checkout main\n\n# Muutke sama rida teisiti\nsed -i 's/print(\"Calculator: 2 + 3 =\", add(2, 3))/print(\"CALC RESULT: 2 + 3 =\", add(2, 3))/' calculator.py\n\ngit add calculator.py\ngit commit -m \"Muuda v\u00e4ljund l\u00fchemaks\"\n\n# Proovige merge'ida - konflikt!\ngit merge fix/calculator-output\n</code></pre></p> <p>Lahendage konflikt: <pre><code># Vaadake konfliktset faili\ncat calculator.py\n\n# Redigeerige k\u00e4sitsi v\u00f5i kasutage merge tool'i\n# Eemaldage konfliktim\u00e4rgid ja valige \u00f5ige versioon\n\n# N\u00e4iteks j\u00e4tke eestikeelne versioon:\ncat &gt; calculator.py &lt;&lt; 'EOF'\ndef add(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n\ndef multiply(a, b):\n    return a * b\n\ndef divide(a, b):\n    if b != 0:\n        return a / b\n    return 'Error: Division by zero'\n\nif __name__ == \"__main__\":\n    print(\"Kalkulaator: 2 + 3 =\", add(2, 3))\nEOF\n\n# L\u00f5petage merge\ngit add calculator.py\ngit status\ngit commit\n\n# Vaadake tulemust\ngit log --oneline --graph\n</code></pre></p> <p>Kontrollpunkt: Olete edukalt merge konflikti lahendanud.</p>"},{"location":"git_version_control/lab/#samm-3-github-ja-remote-repositories-45-min","title":"\ud83c\udfaf Samm 3: GitHub ja Remote Repositories (45 min)","text":""},{"location":"git_version_control/lab/#harjutus-31-github-setup-ja-ssh-15-min","title":"Harjutus 3.1: GitHub Setup ja SSH (15 min)","text":"<p>SSH v\u00f5tmete seadistamine: <pre><code># Kontrollige, kas SSH v\u00f5tmed on olemas\nls -la ~/.ssh/\n\n# Kui pole, looge uued (kasutage oma email'i)\nssh-keygen -t ed25519 -C \"teie.email@example.com\"\n\n# K\u00e4ivitage SSH agent\neval \"$(ssh-agent -s)\"\n\n# Lisage v\u00f5ti agendile\nssh-add ~/.ssh/id_ed25519\n\n# Kopeerige avalik v\u00f5ti\ncat ~/.ssh/id_ed25519.pub\n</code></pre></p> <p>GitHub'is: 1. Minge Settings \u2192 SSH and GPG keys 2. Click \"New SSH key\" 3. Kleepige avalik v\u00f5ti 4. Save</p> <p>Testuge SSH \u00fchendust: <pre><code>ssh -T git@github.com\n</code></pre></p> <p>Kontrollpunkt: SSH \u00fchendus GitHub'iga t\u00f6\u00f6tab.</p>"},{"location":"git_version_control/lab/#harjutus-32-remote-repository-ja-collaboration-20-min","title":"Harjutus 3.2: Remote Repository ja Collaboration (20 min)","text":"<p>GitHub'is looge uus repository: 1. Click \"New repository\" 2. Nimi: <code>git-practice-lab</code> 3. Public repository 4. \u00c4RA lisa README (meil on juba) 5. Create repository</p> <p>\u00dchendage kohalik repo GitHub'iga: <pre><code># Lisage remote\ngit remote add origin git@github.com:TEIE-KASUTAJANIMI/git-practice-lab.git\n\n# Kontrollige remote'e\ngit remote -v\n\n# Push'ige esimest korda\ngit push -u origin main\n\n# Push'ige k\u00f5ik branch'id\ngit push origin feature/advanced-math\ngit push origin fix/calculator-output\n</code></pre></p> <p>Pull/Push workflow: <pre><code># Simuleerige meeskonnat\u00f6\u00f6d\n# GitHub'is tehke muudatus otse veebi kaudu:\n# 1. Avage README.md\n# 2. Lisage rida \"Muudatus GitHub'is\"\n# 3. Commit directly to main\n\n# Kohalikult pull'ige muudatus\ngit pull origin main\n\n# Tehke kohalik muudatus\necho \"\" &gt;&gt; README.md\necho \"Kohalik muudatus\" &gt;&gt; README.md\n\ngit add README.md\ngit commit -m \"Lisa kohalik muudatus\"\n\n# Push'ige\ngit push origin main\n</code></pre></p> <p>Kontrollpunkt: Kohalik ja remote repository on s\u00fcnkroniseeritud.</p>"},{"location":"git_version_control/lab/#harjutus-33-pull-requests-10-min","title":"Harjutus 3.3: Pull Requests (10 min)","text":"<p>Looge uus feature: <pre><code># Looge uus branch\ngit checkout -b feature/documentation\n\n# Looge dokumentatsioon\ncat &gt; USAGE.md &lt;&lt; 'EOF'\n# Git Practice Lab Kasutamine\n\n## Failide kirjeldus\n\n- `calculator.py` - P\u00f5hilised matemaatilised operatsioonid\n- `advanced_math.py` - T\u00e4psemad matemaatikafunktsioonid  \n- `string_utils.py` - Stringide t\u00f6\u00f6tlemise utiliidid\n- `greeting.py` - Lihtne tervitusprogramm\n\n## Kasutamine\n\n```bash\npython3 calculator.py\npython3 advanced_math.py\npython3 string_utils.py\npython3 greeting.py\n</code></pre></p>"},{"location":"git_version_control/lab/#arendamine","title":"Arendamine","text":"<ol> <li>Fork'ige repository</li> <li>Looge feature branch</li> <li>Tehke muudatused</li> <li>Looge Pull Request EOF</li> </ol> <p>git add USAGE.md git commit -m \"Lisa kasutamise dokumentatsioon\"</p>"},{"location":"git_version_control/lab/#pushige-branch","title":"Push'ige branch","text":"<p>git push origin feature/documentation <pre><code>**GitHub'is looge Pull Request:**\n1. Minge oma repository lehele\n2. Click \"Compare &amp; pull request\"\n3. Kirjutage hea pealkiri ja kirjeldus\n4. Create pull request\n5. Merge pull request\n6. Delete branch\n\n**Kohalikult puhastage:**\n```bash\ngit checkout main\ngit pull origin main\ngit branch -d feature/documentation\ngit push origin --delete feature/documentation\n</code></pre></p> <p>Kontrollpunkt: Olete edukalt teinud Pull Request'i workflow.</p>"},{"location":"git_version_control/lab/#samm-4-advanced-git-features-15-min","title":"\ud83c\udfaf Samm 4: Advanced Git Features (15 min)","text":""},{"location":"git_version_control/lab/#harjutus-41-git-rebase-ja-history-cleanup","title":"Harjutus 4.1: Git Rebase ja History Cleanup","text":"<p>Interactive Rebase: <pre><code># Looge mitu v\u00e4ikest commit'i\necho \"# TODO\" &gt;&gt; TODO.md\ngit add TODO.md\ngit commit -m \"Lisa TODO fail\"\n\necho \"- Lisa testid\" &gt;&gt; TODO.md\ngit add TODO.md\ngit commit -m \"Lisa esimene \u00fclesanne\"\n\necho \"- Paranda dokumentatsiooni\" &gt;&gt; TODO.md\ngit add TODO.md\ngit commit -m \"Lisa teine \u00fclesanne\"\n\necho \"- Optimiseeri kood\" &gt;&gt; TODO.md\ngit add TODO.md\ngit commit -m \"Lisa kolmas \u00fclesanne\"\n\n# Vaadake ajalugu\ngit log --oneline -5\n\n# \u00dchendage viimased 4 commit'i \u00fcheks\ngit rebase -i HEAD~4\n\n# Editor avaneb - muutke:\n# pick \u2192 squash (v\u00f5i s) viimastel 3 real\n# J\u00e4tke esimene \"pick\"\n\n# Salvestage ja sulgege editor\n# Uus editor commit s\u00f5numiga - redigeerige vajadusel\n</code></pre></p>"},{"location":"git_version_control/lab/#harjutus-42-git-stash","title":"Harjutus 4.2: Git Stash","text":"<pre><code># Alustage muudatusi\necho \"Pooleli t\u00f6\u00f6\" &gt;&gt; calculator.py\n\n# Aga vajate kiiresti minna teise branch'i\ngit stash\n\n# Kontrollige olukorda\ngit status\n\n# Minge teise branch'i, tehke t\u00f6\u00f6d\ngit checkout feature/advanced-math\necho \"Kiire parandus\" &gt;&gt; advanced_math.py\ngit add advanced_math.py\ngit commit -m \"Kiire parandus advanced math'is\"\n\n# Minge tagasi ja taastage stash\ngit checkout main\ngit stash pop\n\n# L\u00f5petage t\u00f6\u00f6\ngit add calculator.py\ngit commit -m \"L\u00f5peta pooleli t\u00f6\u00f6\"\n</code></pre>"},{"location":"git_version_control/lab/#harjutus-43-cherry-pick","title":"Harjutus 4.3: Cherry-pick","text":"<pre><code># Oletame, et feature branch'is on hea commit, mida tahate main'is\ngit log --oneline feature/advanced-math\n\n# V\u00f5tke konkreetne commit main'i (kasutage \u00f5iget hash'i)\ngit cherry-pick COMMIT-HASH\n\n# Vaadake tulemust\ngit log --oneline -3\n</code></pre> <p>Kontrollpunkt: Oskate kasutada Git'i t\u00e4psemaid funktsioone.</p>"},{"location":"git_version_control/lab/#kokkuvote-ja-kontrolljaarati-10-min","title":"\ud83c\udfaf Kokkuv\u00f5te ja Kontrolljaarati (10 min)","text":""},{"location":"git_version_control/lab/#loplik-kontroll","title":"L\u00f5plik kontroll","text":"<p>Kontrollige oma oskusi: <pre><code># 1. Repository struktuur\nls -la\ngit log --oneline --graph -10\n\n# 2. Remote'id\ngit remote -v\n\n# 3. Branch'id\ngit branch -a\n\n# 4. Viimased commit'id\ngit log --oneline -5\n\n# 5. Git config\ngit config --list | grep user\n</code></pre></p>"},{"location":"git_version_control/lab/#mida-te-nuud-oskate","title":"Mida te n\u00fc\u00fcd oskate:","text":"<ul> <li>Git'i seadistamine ja p\u00f5hik\u00e4sud</li> <li>Staging area kasutamine</li> <li>Branch'ide loomine ja merge'imine</li> <li>Merge konfliktide lahendamine</li> <li>SSH seadistamine GitHub'iga</li> <li>Remote repository workflow</li> <li>Pull Request'ide tegemine</li> <li>Advanced Git features (rebase, stash, cherry-pick)</li> </ul>"},{"location":"git_version_control/lab/#jargmised-sammud","title":"J\u00e4rgmised sammud:","text":"<ol> <li>Harjutage iga p\u00e4ev - Git on nagu jalgrattas\u00f5it</li> <li>Liituge open source projektidega - tehke PR'e</li> <li>Seadistage Git aliases - kiiremaks t\u00f6\u00f6tamiseks</li> <li>\u00d5ppige Git GUI t\u00f6\u00f6riistu - GitKraken, SourceTree</li> <li>Uurige GitHub Actions - CI/CD automatiseerimine</li> </ol>"},{"location":"git_version_control/lab/#git-aliases-boonusulesanne","title":"Git Aliases (boonus\u00fclesanne):","text":"<pre><code># Kasulikud aliased\ngit config --global alias.st status\ngit config --global alias.co checkout  \ngit config --global alias.br branch\ngit config --global alias.ci commit\ngit config --global alias.unstage 'reset HEAD --'\ngit config --global alias.last 'log -1 HEAD'\ngit config --global alias.visual '!gitk'\ngit config --global alias.lg 'log --oneline --graph --all'\n\n# Testage\ngit st\ngit lg\n</code></pre> <p>\ud83c\udf89 \u00d5nnitleme! Olete l\u00e4binud Git'i p\u00f5hilise v\u00e4lja\u00f5ppe.</p>"},{"location":"git_version_control/lab/#boonusulesanded-juba-giti-oskajatele","title":"\ud83d\ude80 BOONUS\u00dcLESANDED (juba Git'i oskajatele)","text":""},{"location":"git_version_control/lab/#samm-b1-advanced-git-features-30-min","title":"Samm B1: Advanced Git Features (30 min)","text":""},{"location":"git_version_control/lab/#interactive-rebase-commitide-uhendamine","title":"Interactive Rebase - Commit'ide \u00dchendamine","text":"<pre><code># Looge mitu v\u00e4ikest commiti\necho \"Feature 1\" &gt; feature1.txt &amp;&amp; git add . &amp;&amp; git commit -m \"Add feature 1\"\necho \"Feature 2\" &gt; feature2.txt &amp;&amp; git add . &amp;&amp; git commit -m \"Add feature 2\" \necho \"Fix typo\" &gt;&gt; feature1.txt &amp;&amp; git add . &amp;&amp; git commit -m \"Fix typo in feature 1\"\n\n# Interactive rebase - \u00fchendage commitid\ngit rebase -i HEAD~3\n# Muutke \"pick\" -&gt; \"squash\" kahel viimasel real\n# Salvestage ja sulgege editor\n</code></pre>"},{"location":"git_version_control/lab/#cherry-pick-ja-advanced-stash","title":"Cherry-pick ja Advanced Stash","text":"<pre><code># Stash koos metadata'ga\necho \"Pooleli t\u00f6\u00f6\" &gt; wip.txt\ngit add .\ngit stash push -m \"WIP: new authentication feature\"\n\n# Cherry-pick - kopeerige konkreetne commit\ngit log --oneline -5  # Leidke commit hash\ngit cherry-pick &lt;commit-hash&gt;\n\n# Stash management\ngit stash list\ngit stash show stash@{0}\ngit stash pop  # v\u00f5i git stash apply\n</code></pre>"},{"location":"git_version_control/lab/#advanced-log-ja-blame","title":"Advanced Log ja Blame","text":"<pre><code># Graafiline commit history\ngit log --graph --pretty=format:'%h -%d %s (%cr) &lt;%an&gt;' --abbrev-commit --all\n\n# Failispetsiifilised muutused\ngit log --follow -p -- filename.txt\n\n# Blame - kes kirjutas millise rea\ngit blame README.md\ngit blame -L 10,20 README.md  # Ainult read 10-20\n\n# Commit range'ide v\u00f5rdlus\ngit diff main..feature-branch\ngit log main..feature-branch --oneline\n</code></pre>"},{"location":"git_version_control/lab/#samm-b2-git-hooks-ja-workflow-automation-25-min","title":"Samm B2: Git Hooks ja Workflow Automation (25 min)","text":""},{"location":"git_version_control/lab/#pre-commit-hook-automaatne-kvaliteedikontroll","title":"Pre-commit Hook (automaatne kvaliteedikontroll)","text":"<pre><code># Looge pre-commit hook\nmkdir -p .git/hooks\ncat &gt; .git/hooks/pre-commit &lt;&lt; 'EOF'\n#!/bin/bash\necho \"\ud83d\udd0d Kontrollime koodi enne commit'i...\"\n\n# Kontrolli, et ei commitita suuri faile\nfind . -size +1M -type f -exec ls -lh {} \\; | grep -E '\\.(jpg|png|gif|mp4|zip)$' \nif [ $? -eq 0 ]; then\n  echo \"\u274c Suured failid leitud! Kasutage Git LFS.\"\n  exit 1\nfi\n\n# Kontrolli, et ei ole debug koodi\ngrep -r \"console.log\\|debugger\\|TODO\" --include=\"*.js\" .\nif [ $? -eq 0 ]; then\n  echo \"\u26a0\ufe0f  Debug kood leitud! Kas olete kindel?\"\n  echo \"J\u00e4tkamiseks vajutage Enter, katkestamiseks Ctrl+C\"\n  read\nfi\n\necho \"\u2705 Pre-commit kontroll OK!\"\nEOF\n\nchmod +x .git/hooks/pre-commit\n\n# Testige hook'i\necho \"console.log('test')\" &gt; debug.js\ngit add debug.js\ngit commit -m \"Test hook\" # Hook k\u00fcsib kinnitust\n</code></pre>"},{"location":"git_version_control/lab/#post-merge-hook-automaatne-cleanup","title":"Post-merge Hook (automaatne cleanup)","text":"<pre><code>cat &gt; .git/hooks/post-merge &lt;&lt; 'EOF'\n#!/bin/bash\necho \"\ud83e\uddf9 Post-merge cleanup...\"\n\n# Kustuta vanale branch'id\ngit branch --merged | grep -v \"\\*\\|main\\|master\" | xargs -n 1 git branch -d\n\n# Update dependencies kui package.json muutus\nif [ -f package.json ] &amp;&amp; git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD | grep -q \"package.json\"; then\n  echo \"\ud83d\udce6 package.json muutus, updatein dependencies...\"\n  npm install\nfi\n\necho \"\u2705 Post-merge cleanup l\u00f5petatud!\"\nEOF\n\nchmod +x .git/hooks/post-merge\n</code></pre>"},{"location":"git_version_control/lab/#samm-b3-git-submodules-ja-worktrees-20-min","title":"Samm B3: Git Submodules ja Worktrees (20 min)","text":""},{"location":"git_version_control/lab/#submodules-dependency-management","title":"Submodules - Dependency Management","text":"<pre><code># Lisa library submodule'ina\ngit submodule add https://github.com/lodash/lodash.git vendor/lodash\ngit commit -m \"Add lodash as submodule\"\n\n# Clone repo koos submodule'itega\ngit clone --recursive &lt;your-repo-url&gt;\n\n# Update submodule'id\ngit submodule update --remote --merge\n\n# Eemalda submodule\ngit submodule deinit vendor/lodash\ngit rm vendor/lodash\n</code></pre>"},{"location":"git_version_control/lab/#worktrees-parallel-development","title":"Worktrees - Parallel Development","text":"<pre><code># Loo worktree uue feature jaoks\ngit worktree add ../feature-payment feature/payment\ncd ../feature-payment\n# N\u00fc\u00fcd saate t\u00f6\u00f6data samaaegselt main ja feature branch'idega\n\n# List worktrees\ngit worktree list\n\n# Remove worktree\ncd ../git-practice-lab\ngit worktree remove ../feature-payment\n</code></pre>"},{"location":"git_version_control/lab/#samm-b4-advanced-git-performance-15-min","title":"Samm B4: Advanced Git Performance (15 min)","text":""},{"location":"git_version_control/lab/#git-lfs-large-file-storage","title":"Git LFS - Large File Storage","text":"<pre><code># Installi Git LFS\ngit lfs install\n\n# Track suured failid\ngit lfs track \"*.png\"\ngit lfs track \"*.jpg\"\ngit lfs track \"*.pdf\"\ngit add .gitattributes\n\n# Test LFS\necho \"Large file content\" &gt; large-file.png\ngit add large-file.png\ngit commit -m \"Add large file with LFS\"\n</code></pre>"},{"location":"git_version_control/lab/#repository-optimization","title":"Repository Optimization","text":"<pre><code># Cleanup unreachable objects\ngit gc --aggressive --prune=now\n\n# Shallow clone performance'iks\ngit clone --depth 1 &lt;repo-url&gt; quick-clone\n\n# Partial clone (Git 2.19+)\ngit clone --filter=blob:none &lt;repo-url&gt; partial-clone\n</code></pre>"},{"location":"git_version_control/lab/#samm-b5-expert-level-debugging-25-min","title":"Samm B5: Expert Level Debugging (25 min)","text":""},{"location":"git_version_control/lab/#git-bisect-bug-hunt","title":"Git Bisect - Bug Hunt","text":"<pre><code># Simuleerige bug'i otsimist\n# Looge 10 commiti, millest \u00fcks on \"broken\"\nfor i in {1..10}; do\n  if [ $i -eq 7 ]; then\n    echo \"broken code\" &gt; app.js\n  else\n    echo \"good code $i\" &gt; app.js\n  fi\n  git add app.js\n  git commit -m \"Version $i\"\ndone\n\n# Kasuta bisect bug'i leidmiseks\ngit bisect start\ngit bisect bad HEAD\ngit bisect good HEAD~10\n\n# Test iga commit (Git pakub)\nwhile true; do\n  if grep -q \"broken\" app.js; then\n    git bisect bad\n  else\n    git bisect good\n  fi\n  # J\u00e4tka kuni Git leiab probleemse commiti\ndone\n\ngit bisect reset\n</code></pre>"},{"location":"git_version_control/lab/#custom-git-commands","title":"Custom Git Commands","text":"<pre><code># Looge custom Git command\nmkdir -p ~/.local/bin\ncat &gt; ~/.local/bin/git-summary &lt;&lt; 'EOF'\n#!/bin/bash\necho \"\ud83d\udcca Repository Summary:\"\necho \"=====================\"\necho \"\ud83d\udccd Current branch: $(git branch --show-current)\"\necho \"\ud83d\udcc8 Total commits: $(git rev-list --count HEAD)\"\necho \"\ud83d\udc65 Contributors: $(git log --format='%an' | sort -u | wc -l)\"\necho \"\u23f0 Last commit: $(git log -1 --format='%cr')\"\necho \"\ud83d\udcdd Lines of code:\"\ngit ls-files | xargs wc -l | tail -1\necho \"\ud83c\udf3f Branches:\"\ngit branch -a | head -5\nEOF\n\nchmod +x ~/.local/bin/git-summary\n\n# Kasutage: git summary\nexport PATH=\"$HOME/.local/bin:$PATH\"\ngit summary\n</code></pre>"},{"location":"git_version_control/lab/#advanced-conflict-resolution","title":"Advanced Conflict Resolution","text":"<pre><code># Seadista merge tool\ngit config --global merge.tool vimdiff\n# v\u00f5i\ngit config --global merge.tool code\n\n# 3-way merge conflicts\ngit config --global mergetool.keepBackup false\n\n# Resolve konflikti merge tool'iga\n# (simuleerige konflikti ja kasutage)\ngit mergetool\n</code></pre>"},{"location":"git_version_control/lab/#samm-b6-git-flow-ja-release-management-20-min","title":"Samm B6: Git Flow ja Release Management (20 min)","text":"<pre><code># Git Flow setup (kui installitud)\ngit flow init\n\n# Feature development\ngit flow feature start user-authentication\necho \"auth code\" &gt; auth.js\ngit add auth.js &amp;&amp; git commit -m \"Add authentication\"\ngit flow feature finish user-authentication\n\n# Release management\ngit flow release start v1.0.0\necho \"1.0.0\" &gt; VERSION\ngit add VERSION &amp;&amp; git commit -m \"Version bump to 1.0.0\"\ngit flow release finish v1.0.0\n\n# Hotfix\ngit flow hotfix start critical-security-fix\necho \"security fix\" &gt; security.patch\ngit add security.patch &amp;&amp; git commit -m \"Security fix\"\ngit flow hotfix finish critical-security-fix\n</code></pre>"},{"location":"git_version_control/lab/#samm-b7-git-best-practices-enforcement-15-min","title":"Samm B7: Git Best Practices Enforcement (15 min)","text":"<pre><code># Conventional commits hook\ncat &gt; .git/hooks/commit-msg &lt;&lt; 'EOF'\n#!/bin/bash\ncommit_regex='^(feat|fix|docs|style|refactor|test|chore)(\\(.+\\))?: .{1,50}'\n\nif ! grep -qE \"$commit_regex\" \"$1\"; then\n    echo \"\u274c Invalid commit message format!\"\n    echo \"Use: type(scope): description\"\n    echo \"Types: feat, fix, docs, style, refactor, test, chore\"\n    echo \"Example: feat(auth): add user login functionality\"\n    exit 1\nfi\nEOF\n\nchmod +x .git/hooks/commit-msg\n\n# Test conventional commits\ngit commit -m \"feat(auth): add user authentication\"\ngit commit -m \"fix: resolve login bug\"\n</code></pre>"},{"location":"git_version_control/lab/#labi-esitamine","title":"\ud83d\udcdd Lab'i esitamine","text":"<p>Esitage j\u00e4rgmine GitHub repository link: - Repository nimi: <code>git-practice-lab</code> - Peab sisaldama k\u00f5iki harjutuste faile - Clean Git history n\u00e4htav - V\u00e4hemalt \u00fcks Pull Request tehtud ja merge'itud</p> <p>Hindamiskriteeriumid: - Repository \u00f5igesti seadistatud (20%) - K\u00f5ik harjutused tehtud (50%) - Clean Git history (20%) - Pull Request workflow (10%)</p> <p>Lab koostatud Git t\u00f6\u00f6stuse parimate praktikate p\u00f5hjal</p>"},{"location":"git_version_control/reading_materials/","title":"\ud83d\udcda Week 9: Git Reading Materials (Homework Task 2)","text":"<p>Estimated Reading Time: 2-3 hours Due: Before next class session</p>"},{"location":"git_version_control/reading_materials/#required-reading-15-hours","title":"\ud83d\udcd6 Required Reading (1.5 hours)","text":""},{"location":"git_version_control/reading_materials/#1-git-history-and-evolution-30-min","title":"1. Git History and Evolution (30 min)","text":"<p>Source: Git Documentation &amp; History</p> <p>Key Topics: - Linus Torvalds and the creation of Git - Why Git was needed for Linux kernel development - Git vs other version control systems (SVN, Mercurial) - The distributed nature of Git</p> <p>Reading Questions: - What problem was Git created to solve? - How does Git's distributed nature differ from centralized VCS? - Why did Linus Torvalds choose the name \"Git\"?</p>"},{"location":"git_version_control/reading_materials/#2-git-internals-deep-dive-45-min","title":"2. Git Internals Deep Dive (45 min)","text":"<p>Source: Git Internals Documentation</p> <p>Key Topics: - Git's object model (blobs, trees, commits, tags) - How Git stores data (content-addressable storage) - The .git directory structure - Git's three-stage architecture (working directory, staging area, repository)</p> <p>Reading Questions: - What are the four main object types in Git? - How does Git achieve content-addressable storage? - What happens when you run <code>git add</code> vs <code>git commit</code>?</p>"},{"location":"git_version_control/reading_materials/#3-advanced-branching-strategies-30-min","title":"3. Advanced Branching Strategies (30 min)","text":"<p>Source: Git Flow, GitHub Flow Documentation</p> <p>Key Topics: - Git Flow vs GitHub Flow - Feature branch workflow - Release management strategies - Hotfix procedures</p> <p>Reading Questions: - What are the main differences between Git Flow and GitHub Flow? - When would you use a hotfix branch? - How do you decide which branching strategy to use?</p>"},{"location":"git_version_control/reading_materials/#optional-reading-1-hour","title":"\ud83d\udcda Optional Reading (1 hour)","text":""},{"location":"git_version_control/reading_materials/#4-git-best-practices-30-min","title":"4. Git Best Practices (30 min)","text":"<p>Source: Industry Standards &amp; Git Documentation</p> <p>Key Topics: - Commit message conventions - Branch naming conventions - When to commit vs when to stash - Code review best practices</p>"},{"location":"git_version_control/reading_materials/#5-git-tools-and-ecosystem-30-min","title":"5. Git Tools and Ecosystem (30 min)","text":"<p>Source: Git Tools Documentation</p> <p>Key Topics: - Git GUI tools (GitKraken, SourceTree, GitHub Desktop) - Git hosting platforms (GitHub, GitLab, Bitbucket) - Git hooks and automation - Git aliases and productivity tips</p>"},{"location":"git_version_control/reading_materials/#reference-materials-keep-handy","title":"\ud83d\udccb Reference Materials (Keep Handy)","text":""},{"location":"git_version_control/reading_materials/#git-command-quick-reference","title":"Git Command Quick Reference","text":"<pre><code># Basic workflow\ngit status                    # Check repository status\ngit add &lt;file&gt;               # Stage changes\ngit commit -m \"message\"      # Commit staged changes\ngit push origin &lt;branch&gt;     # Push to remote\n\n# Branching\ngit branch &lt;name&gt;            # Create new branch\ngit checkout &lt;branch&gt;        # Switch to branch\ngit merge &lt;branch&gt;           # Merge branch into current\ngit rebase &lt;branch&gt;          # Rebase current on branch\n\n# History and inspection\ngit log --oneline           # Compact commit history\ngit diff                    # Show unstaged changes\ngit diff --staged           # Show staged changes\ngit show &lt;commit&gt;           # Show commit details\n</code></pre>"},{"location":"git_version_control/reading_materials/#common-git-scenarios","title":"Common Git Scenarios","text":"<pre><code># Undo last commit (keep changes)\ngit reset --soft HEAD~1\n\n# Undo last commit (discard changes)\ngit reset --hard HEAD~1\n\n# Create and switch to new branch\ngit checkout -b feature/new-feature\n\n# Stash changes temporarily\ngit stash\ngit stash pop\n\n# View remote repositories\ngit remote -v\n</code></pre>"},{"location":"git_version_control/reading_materials/#reading-reflection-assignment","title":"\ud83c\udfaf Reading Reflection Assignment","text":"<p>After completing the reading, please submit a brief reflection (200-300 words) covering:</p> <ol> <li>Key Insights: What was the most surprising or important thing you learned?</li> <li>Questions: What concepts are still unclear or need more explanation?</li> <li>Application: How do you think this knowledge will help in your automation work?</li> <li>Further Learning: What Git topics would you like to explore more?</li> </ol> <p>Submission Format: Add to your GitHub repository as <code>git_reading_reflection.md</code></p>"},{"location":"git_version_control/reading_materials/#additional-resources","title":"\ud83d\udd17 Additional Resources","text":"<ul> <li>Git Documentation</li> <li>GitHub Guides</li> <li>Git Flow Model</li> <li>GitHub Flow</li> </ul>"},{"location":"git_version_control/reading_materials/#notes-for-next-class","title":"\ud83d\udcdd Notes for Next Class","text":"<p>Come prepared with: - Questions from your reading - Any Git scenarios you'd like to practice - Ideas for your final Git project</p>"},{"location":"git_version_control/examples/git_apply_changes/","title":"Git Apply - Lihtne Juhend","text":"<p>Kestus: 15 minutit Eesm\u00e4rk: \u00d5ppida rakendama lihtsaid muudatusi patch failidest</p>"},{"location":"git_version_control/examples/git_apply_changes/#mis-on-patch","title":"\ud83d\udcd6 Mis on Patch?","text":"<p>Patch on fail, mis sisaldab muudatuste kirjeldust. Seda saab kasutada, et rakendada muudatusi olemasolevatele failidele.</p> <p>Lihtne n\u00e4ide: - Sul on fail <code>app.py</code> - Keegi teine teeb muudatusi ja saadab sulle patch faili - Sa rakendad patch'i ja sinu fail uueneb automaatselt</p>"},{"location":"git_version_control/examples/git_apply_changes/#patchid-ja-versioonihaldus","title":"\ud83d\udcd6 Patch'id ja Versioonihaldus","text":""},{"location":"git_version_control/examples/git_apply_changes/#miks-kasutame-patche","title":"Miks kasutame patch'e?","text":"<p>Versioonihalduse kontekstis: - Bug fix'id - kiire paranduste rakendamine - Code review'de j\u00e4rel - muudatuste tegemine vastavalt tagasisidele - Meeskonnat\u00f6\u00f6 - teiste arendajate muudatuste lisamine - Backup - muudatuste salvestamine enne commit'i</p>"},{"location":"git_version_control/examples/git_apply_changes/#patch-vs-git","title":"Patch vs Git","text":"Meetod Eelised Puudused Patch fail Lihtne, ei vaja Git'i Ei salvesta ajalugu Git commit T\u00e4ielik ajalugu N\u00f5uab Git'i <p>Millal kasutada patch'e: - Kiire paranduste tegemine - Kui pole Git'i kasutuses - Muudatuste jagamine e-mailiga - Backup enne suuri muudatusi</p>"},{"location":"git_version_control/examples/git_apply_changes/#kuidas-rakendada-patchi","title":"\ud83d\udcd6 Kuidas Rakendada Patch'i?","text":""},{"location":"git_version_control/examples/git_apply_changes/#kaks-lihtsat-viisi","title":"Kaks Lihtsat Viisi","text":""},{"location":"git_version_control/examples/git_apply_changes/#1-kasuta-patch-kasku-lihtsam","title":"1. Kasuta <code>patch</code> k\u00e4sku (lihtsam)","text":"<pre><code>patch failinimi.py &lt; muudatused.diff\n</code></pre>"},{"location":"git_version_control/examples/git_apply_changes/#2-kasuta-git-apply-kasku-git-projektides","title":"2. Kasuta <code>git apply</code> k\u00e4sku (Git projektides)","text":"<pre><code>git apply muudatused.patch\n</code></pre>"},{"location":"git_version_control/examples/git_apply_changes/#praktiline-naide","title":"\ud83d\udcd6 Praktiline N\u00e4ide","text":""},{"location":"git_version_control/examples/git_apply_changes/#samm-1-sul-on-fail-cpu_usagepy","title":"Samm 1: Sul on fail <code>cpu_usage.py</code>","text":"<pre><code>#!/usr/bin/env python3\n\nimport psutil\n\ndef check_cpu_usage(percent):\n    usage = psutil.cpu_percent()\n    return usage &lt; percent\n\nif not check_cpu_usage(75):\n    print(\"ERROR! CPU is overloaded\")\nelse:\n    print(\"Everything ok\")\n</code></pre>"},{"location":"git_version_control/examples/git_apply_changes/#samm-2-saad-patch-faili-cpu_usagediff","title":"Samm 2: Saad patch faili <code>cpu_usage.diff</code>","text":"<pre><code>--- cpu_usage.py    2019-06-23 08:16:04.666457429 -0700\n+++ cpu_usage_fixed.py  2019-06-23 08:15:37.534370071 -0700\n@@ -2,7 +2,8 @@\n import psutil\n\n def check_cpu_usage(percent):\n-    usage = psutil.cpu_percent()\n+    usage = psutil.cpu_percent(1)\n+    print(\"DEBUG: usage: {}\".format(usage))\n     return usage &lt; percent\n\n if not check_cpu_usage(75):\n</code></pre>"},{"location":"git_version_control/examples/git_apply_changes/#samm-3-rakenda-patch","title":"Samm 3: Rakenda patch","text":"<pre><code>patch cpu_usage.py &lt; cpu_usage.diff\n</code></pre> <p>Vastus: <code>patching file cpu_usage.py</code></p>"},{"location":"git_version_control/examples/git_apply_changes/#samm-4-kontrolli-tulemust","title":"Samm 4: Kontrolli tulemust","text":"<pre><code>cat cpu_usage.py\n</code></pre> <p>Tulemus: <pre><code>#!/usr/bin/env python3\n\nimport psutil\n\ndef check_cpu_usage(percent):\n    usage = psutil.cpu_percent(1)\n    print(\"DEBUG: usage: {}\".format(usage))\n    return usage &lt; percent\n\nif not check_cpu_usage(75):\n    print(\"ERROR! CPU is overloaded\")\nelse:\n    print(\"Everything ok\")\n</code></pre></p> <p>Mida juhtus? - Lisati parameeter <code>1</code> funktsiooni sisse - Lisati debug v\u00e4ljund - Fail uuenes automaatselt!</p>"},{"location":"git_version_control/examples/git_apply_changes/#lihtne-harjutus","title":"\ud83d\udcd6 Lihtne Harjutus","text":""},{"location":"git_version_control/examples/git_apply_changes/#proovi-ise","title":"Proovi Ise!","text":"<p>Samm 1: Loo fail <code>hello.py</code> <pre><code>def greet(name):\n    print(\"Hello, \" + name)\n</code></pre></p> <p>Samm 2: Loo patch fail <code>hello_fix.patch</code> <pre><code>--- hello.py    2023-12-01 10:00:00 +0000\n+++ hello_fixed.py  2023-12-01 10:01:00 +0000\n@@ -1,2 +1,3 @@\n def greet(name):\n-    print(\"Hello, \" + name)\n+    print(\"Hello, \" + name + \"!\")\n+    print(\"How are you?\")\n</code></pre></p> <p>Samm 3: Rakenda patch <pre><code>patch hello.py &lt; hello_fix.patch\n</code></pre></p> <p>Samm 4: Kontrolli tulemust <pre><code>cat hello.py\n</code></pre></p>"},{"location":"git_version_control/examples/git_apply_changes/#kasulikud-kasud","title":"\ud83d\udcd6 Kasulikud K\u00e4sud","text":"<pre><code># Lihtne patch rakendamine\npatch fail.py &lt; muudatused.diff\n\n# Git projektides\ngit apply muudatused.patch\n\n# Kontrolli patch'i enne rakendamist\ngit apply --check muudatused.patch\n</code></pre>"},{"location":"git_version_control/examples/git_apply_changes/#kokkuvote","title":"\ud83d\udcd6 Kokkuv\u00f5te","text":""},{"location":"git_version_control/examples/git_apply_changes/#mida-oppisid","title":"Mida \u00f5ppisid?","text":"<ul> <li>Mis on patch fail</li> <li>Kuidas rakendada lihtsaid muudatusi</li> <li>Kaks viisi patch'i rakendamiseks</li> <li>Praktiline n\u00e4ide CPU kasutuse kohta</li> </ul>"},{"location":"git_version_control/examples/git_apply_changes/#jargmised-sammud","title":"J\u00e4rgmised Sammud","text":"<p>Kui oled valmis keerukamate asjade jaoks: - Lugeda diff v\u00e4ljundit (vaata <code>git_diff_examples.md</code>) - Lahendada konflikte - Kasutada git am ja muid t\u00e4psemaid t\u00f6\u00f6riistu</p>"},{"location":"git_version_control/examples/git_apply_changes/#versioonihalduse-jargmised-sammud","title":"Versioonihalduse J\u00e4rgmised Sammud","text":"<p>P\u00e4rast patch'ide \u00f5ppimist: - Git commit'id - muudatuste salvestamine ajalukku - Git branch'id - paralleelsete arendusliinide haldamine - Git merge - harude \u00fchendamine - Pull Request'id - meeskonnat\u00f6\u00f6 GitHub'is</p> <p>Patch'i rakendamine on lihtne ja kasulik oskus versioonihalduses!</p> <p>Materjal p\u00f5hineb Git'i ametlikul dokumentatsioonil</p>"},{"location":"git_version_control/examples/git_diff_examples/","title":"Git Diff ja Diff V\u00e4ljundi Lugemine","text":"<p>Kestus: 30 minutit Eesm\u00e4rk: \u00d5ppida lugema diff v\u00e4ljundit ja m\u00f5istma, mida iga s\u00fcmbol t\u00e4hendab</p>"},{"location":"git_version_control/examples/git_diff_examples/#sissejuhatus-diffi-lugemisse","title":"\ud83d\udcd6 Sissejuhatus Diff'i Lugemisse","text":"<p>Diff on t\u00f6\u00f6riist, mis n\u00e4itab failide vahelisi erinevusi. Git kasutab sama formaati, mis Unix/Linux <code>diff</code> k\u00e4sk.</p>"},{"location":"git_version_control/examples/git_diff_examples/#miks-on-oluline-diffi-lugeda","title":"Miks on oluline diff'i lugeda?","text":"<ul> <li>Code Review - m\u00f5ista, mida teised arendajad muutsid</li> <li>Debugging - leida, mis muutus ja tekitas vea</li> <li>Version Control - j\u00e4lgida koodi ajalugu</li> <li>Merge Conflicts - lahendada konflikte</li> </ul>"},{"location":"git_version_control/examples/git_diff_examples/#diff-valjundi-formaat","title":"\ud83d\udcd6 Diff V\u00e4ljundi Formaat","text":""},{"location":"git_version_control/examples/git_diff_examples/#pohiline-struktuur","title":"P\u00f5hiline Struktuur","text":"<pre><code>@@ -algusrida,read +algusrida,read @@\n- eemaldatud rida\n+ lisatud rida\n  muutmata rida\n</code></pre>"},{"location":"git_version_control/examples/git_diff_examples/#sumbolite-tahendused","title":"S\u00fcmbolite T\u00e4hendused","text":"S\u00fcmbol T\u00e4hendus N\u00e4ide <code>-</code> Eemaldatud rida <code>- vana_kood = True</code> <code>+</code> Lisatud rida <code>+ uus_kood = False</code> <code></code> (t\u00fchi) Muutmata rida <code>print(\"tere\")</code> <code>@@</code> Kontekst marker <code>@@ -5,3 +5,4 @@</code>"},{"location":"git_version_control/examples/git_diff_examples/#praktilised-naited","title":"\ud83d\udcd6 Praktilised N\u00e4ited","text":""},{"location":"git_version_control/examples/git_diff_examples/#naide-1-lihtne-rida-muutmine","title":"N\u00e4ide 1: Lihtne Rida Muutmine","text":"<p>Fail 1 (rearrange1.py): <pre><code>#!/usr/bin/env python3\nimport re\n\ndef rearrange_name(name):\n    result = re.search(r\"^([\\w .]*), ([\\w .]*)$\", name)\n    if result == None:\n        return name\n    return \"{} {}\".format(result[2], result[1])\n</code></pre></p> <p>Fail 2 (rearrange2.py): <pre><code>#!/usr/bin/env python3\nimport re\n\ndef rearrange_name(name):\n    result = re.search(r\"^([\\w .-]*), ([\\w .-]*)$\", name)\n    if result == None:\n        return name\n    return \"{} {}\".format(result[2], result[1])\n</code></pre></p> <p>Diff v\u00e4ljund: <pre><code>$ diff rearrange1.py rearrange2.py\n</code></pre></p> <pre><code>6c6\n&lt;     result = re.search(r\"^([\\w .]*), ([\\w .]*)$\", name)\n---\n&gt;     result = re.search(r\"^([\\w .-]*), ([\\w .-]*)$\", name)\n</code></pre> <p>Selgitus: - <code>6c6</code> = rida 6 esimeses failis muudeti rida 6 teises failis - <code>&lt;</code> = esimese faili sisu (eemaldatud) - <code>---</code> = eraldaja - <code>&gt;</code> = teise faili sisu (lisatud) - Muutus: lisati <code>-</code> s\u00fcmbol regex'i <code>[\\w .-]</code> sisse</p>"},{"location":"git_version_control/examples/git_diff_examples/#naide-2-mitme-rea-muutmine","title":"N\u00e4ide 2: Mitme Rea Muutmine","text":"<p>Fail 1 (validations1.py): <pre><code>def validate_user(username, minlen):\n    assert type(username) == str, \"username must be a string\"\n    if minlen &lt; 1:\n        raise ValueError(\"minlen must be at least 1\")\n\n    if len(username) &lt; minlen:\n        return False\n    if not username.isalnum():\n        return False\n    return True\n</code></pre></p> <p>Fail 2 (validations2.py): <pre><code>def validate_user(username, minlen):\n    if type(username) != str:\n        raise TypeError(\"username must be a string\")\n    if minlen &lt; 1:\n        raise ValueError(\"minlen must be at least 1\")\n\n    if len(username) &lt; minlen:\n        return False\n    if not username.isalnum():\n        return False\n    # Usernames can't begin with a number\n    if username[0].isnumeric():\n        return False\n    return True\n</code></pre></p> <p>Diff v\u00e4ljund: <pre><code>$ diff validations1.py validations2.py\n</code></pre></p> <pre><code>5c5,6\n&lt;   assert (type(username) == str), \"username must be a string\"\n--\n&gt;   if type(username != str: \n&gt;       raise TypeError(\"username must be a string\"\n\n11a13,15\n&gt;       return False\n&gt;   # Usernames can't begin with a number\n&gt;   if username[0].isnumeric():\n</code></pre> <p>Selgitus: - <code>5c5,6</code> = rida 5 muudeti ridadeks 5-6 - <code>11a13,15</code> = p\u00e4rast rida 11 lisati read 13-15 - <code>assert</code> asendati <code>if</code> kontrolliga - Lisati uus kontroll kasutajanime alguse kohta</p>"},{"location":"git_version_control/examples/git_diff_examples/#naide-3-unified-diff-formaat-u","title":"N\u00e4ide 3: Unified Diff Formaat (-u)","text":"<p>Sama diff unified formaadis: <pre><code>$ diff -u validations1.py validations2.py\n</code></pre></p> <pre><code>--- validations1.py 2019-06-06 14:28:49.639209499 +0200\n+++ validations2.py 2019-06-06 14:30:48.019360890 +0200\n@@ -2,7 +2,8 @@\n\n def validate_user(username, minlen):\n-    assert type(username) == str, \"username must be a string\"\n+    if type(username) != str:\n+        raise TypeError(\"username must be a string\")\n     if minlen &lt; 1:\n         raise ValueError(\"minlen must be at least 1\")\n\n@@ -10,5 +11,8 @@\n         return False\n     if not username.isalnum():\n         return False\n+    # Usernames can't begin with a number\n+    if username[0].isnumeric():\n+        return False\n     return True\n</code></pre> <p>Selgitus: - <code>---</code> ja <code>+++</code> = failide nimed ja ajam\u00e4rgid - <code>@@ -2,7 +2,8 @@</code> = kontekst: 7 rida esimesest failist, 8 rida teisest - <code>-</code> ja <code>+</code> = eemaldatud ja lisatud read - T\u00fchjad read = kontekst (muutmata)</p>"},{"location":"git_version_control/examples/git_diff_examples/#git-diff-naited","title":"\ud83d\udcd6 Git Diff N\u00e4ited","text":""},{"location":"git_version_control/examples/git_diff_examples/#git-diff-tookausta-vs-staging","title":"Git Diff T\u00f6\u00f6kausta vs Staging","text":"<pre><code>$ git diff\n</code></pre> <pre><code>diff --git a/app.py b/app.py\nindex a1b2c3d..e4f5g6h 100644\n--- a/app.py\n+++ b/app.py\n@@ -10,7 +10,7 @@ def main():\n     print(\"Tere maailm!\")\n\n     # Lisa uus funktsioon\n-    old_function()\n+    new_function()\n\n     return 0\n</code></pre> <p>Selgitus: - <code>diff --git</code> = Git'i diff formaat - <code>index a1b2c3d..e4f5g6h</code> = Git'i sisemised hash'id - <code>100644</code> = faili \u00f5igused - <code>a/app.py</code> ja <code>b/app.py</code> = v\u00f5rdlusfailid</p>"},{"location":"git_version_control/examples/git_diff_examples/#git-diff-staging-vs-commit","title":"Git Diff Staging vs Commit","text":"<pre><code>$ git diff --staged\n</code></pre> <pre><code>diff --git a/config.py b/config.py\nindex f7g8h9i..j1k2l3m 100644\n--- a/config.py\n+++ b/config.py\n@@ -5,6 +5,7 @@\n DATABASE_URL = \"postgresql://localhost/mydb\"\n DEBUG = True\n LOG_LEVEL = \"INFO\"\n+API_KEY = \"secret123\"\n\n # Server settings\n PORT = 8000\n</code></pre> <p>Selgitus: - <code>--staged</code> = v\u00f5rdleb staging area'ga viimase commit'iga - Lisati uus rida <code>API_KEY = \"secret123\"</code></p>"},{"location":"git_version_control/examples/git_diff_examples/#git-diff-kahe-commiti-vahel","title":"Git Diff Kahe Commit'i Vahel","text":"<pre><code>$ git diff HEAD~1 HEAD\n</code></pre> <pre><code>diff --git a/main.py b/main.py\nindex x1y2z3a..b4c5d6e 100644\n--- a/main.py\n+++ b/main.py\n@@ -15,8 +15,9 @@ def process_data(data):\n     for item in data:\n         if item.is_valid():\n             processed.append(item)\n-        else:\n-            print(f\"Invalid item: {item}\")\n+        elif item.has_warning():\n+            print(f\"Warning for item: {item}\")\n+            processed.append(item)\n     return processed\n</code></pre> <p>Selgitus: - <code>HEAD~1</code> = eelmine commit - <code>HEAD</code> = praegune commit - Muudeti <code>else</code> tingimus <code>elif</code> tingimuseks</p>"},{"location":"git_version_control/examples/git_diff_examples/#diffi-lugemise-sammud","title":"\ud83d\udcd6 Diff'i Lugemise Sammud","text":""},{"location":"git_version_control/examples/git_diff_examples/#1-vaata-konteksti","title":"1. Vaata Konteksti","text":"<p><pre><code>@@ -5,3 +5,4 @@\n</code></pre> - Mitu rida on muudetud? - Millised read on kontekstis?</p>"},{"location":"git_version_control/examples/git_diff_examples/#2-tuvasta-muudatuste-tuubid","title":"2. Tuvasta Muudatuste T\u00fc\u00fcbid","text":"<ul> <li>Eemaldamine (<code>-</code>): vana kood</li> <li>Lisamine (<code>+</code>): uus kood</li> <li>Kontekst (t\u00fchi): muutmata read</li> </ul>"},{"location":"git_version_control/examples/git_diff_examples/#3-moista-loogikat","title":"3. M\u00f5ista Loogikat","text":"<ul> <li>Miks tehti muudatus?</li> <li>Kas on breaking change?</li> <li>Kas on bug fix v\u00f5i feature?</li> </ul>"},{"location":"git_version_control/examples/git_diff_examples/#4-kontrolli-jargnevust","title":"4. Kontrolli J\u00e4rgnevust","text":"<ul> <li>Kas k\u00f5ik muudatused on seotud?</li> <li>Kas on puuduvaid muudatusi?</li> </ul>"},{"location":"git_version_control/examples/git_diff_examples/#harjutused","title":"\ud83d\udcd6 Harjutused","text":""},{"location":"git_version_control/examples/git_diff_examples/#harjutus-1-loe-diffi","title":"Harjutus 1: Loe Diff'i","text":"<pre><code>$ git diff\n</code></pre> <pre><code>diff --git a/utils.py b/utils.py\nindex a1b2c3d..e4f5g6h 100644\n--- a/utils.py\n+++ b/utils.py\n@@ -20,5 +20,6 @@ def format_name(first, last):\n     if not first or not last:\n         return \"Unknown\"\n-    return f\"{first} {last}\"\n+    return f\"{first.capitalize()} {last.capitalize()}\"\n</code></pre> <p>K\u00fcsimused: 1. Mida muudeti? 2. Miks tehti muudatus? 3. Kas on breaking change?</p>"},{"location":"git_version_control/examples/git_diff_examples/#harjutus-2-analuusi-suuremat-diffi","title":"Harjutus 2: Anal\u00fc\u00fcsi Suuremat Diff'i","text":"<pre><code>$ git diff HEAD~2\n</code></pre> <pre><code>diff --git a/app.py b/app.py\nindex x1y2z3a..b4c5d6e 100644\n--- a/app.py\n+++ b/app.py\n@@ -10,12 +10,15 @@ def main():\n     config = load_config()\n\n-    if config.debug:\n-        print(\"Debug mode enabled\")\n-    \n     try:\n         app = create_app(config)\n+        if config.debug:\n+            print(\"Debug mode enabled\")\n+            app.debug = True\n+        \n         app.run(host='0.0.0.0', port=config.port)\n+    except Exception as e:\n+        print(f\"Error starting app: {e}\")\n+        return 1\n\n     return 0\n</code></pre> <p>K\u00fcsimused: 1. Mitu muudatust tehti? 2. Millised on peamised muudatused? 3. Kas on lisatud error handling?</p>"},{"location":"git_version_control/examples/git_diff_examples/#kasulikud-diff-kasud","title":"\ud83d\udcd6 Kasulikud Diff K\u00e4sud","text":""},{"location":"git_version_control/examples/git_diff_examples/#git-diff-variandid","title":"Git Diff Variandid","text":"<pre><code># T\u00f6\u00f6kausta vs staging\ngit diff\n\n# Staging vs viimane commit\ngit diff --staged\n\n# T\u00f6\u00f6kausta vs viimane commit\ngit diff HEAD\n\n# Kahe commit'i vahel\ngit diff commit1..commit2\n\n# Kahe branch'i vahel\ngit diff main..feature\n\n# Konkreetse faili muudatused\ngit diff -- app.py\n\n# Word-level diff (s\u00f5nade tasemel)\ngit diff --word-diff\n\n# Side-by-side diff\ngit diff --side-by-side\n</code></pre>"},{"location":"git_version_control/examples/git_diff_examples/#regulaar-diff-kasud","title":"Regulaar Diff K\u00e4sud","text":"<pre><code># Unified diff\ndiff -u fail1.txt fail2.txt\n\n# Context diff (3 rida konteksti)\ndiff -c fail1.txt fail2.txt\n\n# Ignore whitespace\ndiff -w fail1.txt fail2.txt\n\n# Ignore case\ndiff -i fail1.txt fail2.txt\n\n# Recursive diff kaustadele\ndiff -r kaust1/ kaust2/\n</code></pre>"},{"location":"git_version_control/examples/git_diff_examples/#kokkuvote","title":"\ud83d\udcd6 Kokkuv\u00f5te","text":""},{"location":"git_version_control/examples/git_diff_examples/#olulised-punktid","title":"Olulised Punktid","text":"<ol> <li>Diff formaat on standardne Unix/Linux maailmas</li> <li>Git diff kasutab sama formaati</li> <li>S\u00fcmbolid <code>-</code>, <code>+</code>, <code></code> on v\u00f5tmed lugemiseks</li> <li>Kontekst aitab m\u00f5ista muudatuste t\u00e4hendust</li> <li>Unified diff (-u) on k\u00f5ige loetavam</li> </ol>"},{"location":"git_version_control/examples/git_diff_examples/#parimad-praktikad","title":"Parimad Praktikad","text":"<ul> <li>Alusta kontekstist - vaata @@ rida</li> <li>Tuvasta muudatuste t\u00fc\u00fcbid - lisamine/eemaldamine</li> <li>M\u00f5ista loogikat - miks tehti muudatus</li> <li>Kontrolli j\u00e4rgnevust - kas k\u00f5ik on seotud</li> <li>Kasuta graafilisi t\u00f6\u00f6riistu - vajaduse korral</li> </ul>"},{"location":"git_version_control/examples/git_diff_examples/#jargmised-sammud","title":"J\u00e4rgmised Sammud","text":"<p>P\u00e4rast seda materjali peaksite oskama: - Lugeda diff v\u00e4ljundit - M\u00f5ista muudatuste t\u00e4hendust - Anal\u00fc\u00fcsida koodi muudatusi - Kasutada erinevaid diff k\u00e4ske - Teha code review'e</p> <p>Harjutage diff'i lugemist iga p\u00e4ev - see on oluline oskus arendaja karj\u00e4\u00e4ris!</p> <p>Materjal p\u00f5hineb Unix diff standarditel ja Git'i dokumentatsioonil</p>"},{"location":"git_version_control/reference/git_commands_reference/","title":"Git K\u00e4sud - Viide","text":""},{"location":"git_version_control/reference/git_commands_reference/#pohilised-kasud","title":"\ud83d\udccb P\u00f5hilised K\u00e4sud","text":""},{"location":"git_version_control/reference/git_commands_reference/#seadistamine","title":"Seadistamine","text":"<pre><code>git config --global user.name \"Teie Nimi\"\ngit config --global user.email \"teie.email@example.com\"\ngit config --list\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#repository-loomine","title":"Repository Loomine","text":"<pre><code>git init                    # Uue repo loomine\ngit clone URL               # Olemasoleva repo kopeerimine\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#pohiline-toovoog","title":"P\u00f5hiline T\u00f6\u00f6voog","text":"<pre><code>git status                  # Vaata olekut\ngit add .                   # Lisa k\u00f5ik muudatused\ngit commit -m \"S\u00f5num\"       # Salvesta muudatused\ngit push origin main        # Saada muudatused\ngit pull origin main        # V\u00f5ta uusimad muudatused\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#info-ja-ajalugu","title":"\ud83d\udcca Info ja Ajalugu","text":""},{"location":"git_version_control/reference/git_commands_reference/#muudatuste-vaatamine","title":"Muudatuste Vaatamine","text":"<pre><code>git diff                    # T\u00f6\u00f6kausta vs staging\ngit diff --staged           # Staging vs viimane commit\ngit diff HEAD~1             # Viimase commit'iga v\u00f5rdlus\ngit show                    # Viimane commit\ngit show commit-hash        # Konkreetne commit\ngit show --stat             # Statistika koos\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#ajaloo-vaatamine","title":"Ajaloo Vaatamine","text":"<pre><code>git log --oneline          # Kompaktne vaade\ngit log --graph            # Visuaalne harudemudel  \ngit log --author=\"Nimi\"    # Konkreetse autori commit'id\ngit blame fail.txt         # Kes millise rea muutis\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#harude-branches-haldamine","title":"\ud83c\udf3f Harude (Branches) Haldamine","text":""},{"location":"git_version_control/reference/git_commands_reference/#harude-loomine-ja-vahetamine","title":"Harude Loomine ja Vahetamine","text":"<pre><code>git branch                  # Vaata harusid\ngit branch -v               # Koos viimase commit'iga\ngit branch -a               # K\u00f5ik harud (ka remote)\ngit branch funktsioon-login # Loo uus haru\ngit checkout -b funktsioon-login  # Loo ja vaheta haru\ngit checkout main          # Vaheta main harule\ngit switch -c funktsioon-login  # Uuem s\u00fcntaks\ngit switch main            # Uuem s\u00fcntaks\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#harude-uhendamine","title":"Harude \u00dchendamine","text":"<pre><code>git merge branch-nimi       # \u00dchenda haru\ngit merge --no-ff branch-nimi  # Merge ilma fast-forward'ta\ngit merge --abort          # Katkesta merge\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#rebase","title":"Rebase","text":"<pre><code>git rebase origin/main      # Rebase kohalikud commit'id\ngit rebase -i origin/main   # Interaktiivne rebase\ngit rebase -i HEAD~3        # Viimased 3 commit'i\ngit rebase --abort          # Katkesta rebase\ngit rebase --continue       # J\u00e4tka p\u00e4rast konfliktide lahendamist\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#kaugrepositooriumid-remote","title":"\ud83c\udf10 Kaugrepositooriumid (Remote)","text":""},{"location":"git_version_control/reference/git_commands_reference/#remoteide-haldamine","title":"Remote'ide Haldamine","text":"<pre><code>git remote -v              # Vaata remote'ide URL'e\ngit remote show origin     # Remote'i info\ngit remote add origin URL  # Lisa remote\ngit remote rename origin upstream  # Nimetage remote \u00fcmber\ngit remote remove old-remote      # Eemalda remote\ngit remote set-url origin uus-url # Muuda URL'i\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#fetch-ja-pull","title":"Fetch ja Pull","text":"<pre><code>git fetch origin           # Too info serverist\ngit fetch origin main      # Konkreetse haru info\ngit fetch --all            # K\u00f5igi remote'ide info\ngit pull origin main       # Fetch + merge\ngit pull --rebase origin main  # Rebase pull\ngit pull --ff-only origin main # Ainult fast-forward\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#push","title":"Push","text":"<pre><code>git push origin main       # Saada muudatused\ngit push -u origin main    # Esimene kord (tracking)\ngit push origin funktsioon-login  # Uue haru saatmine\ngit push origin --delete funktsioon-login  # Haru kustutamine\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#failide-haldamine","title":"\ud83d\udd27 Failide Haldamine","text":""},{"location":"git_version_control/reference/git_commands_reference/#failide-lisamine-ja-eemaldamine","title":"Failide Lisamine ja Eemaldamine","text":"<pre><code>git add failinimi.txt      # Lisa konkreetne fail\ngit add .                  # Lisa k\u00f5ik muudatused\ngit rm failinimi.txt       # Kustuta fail Git'ist ja s\u00fcsteemist\ngit rm --cached failinimi.txt  # Kustuta ainult Git'ist\ngit mv vana.txt uus.txt    # Nimetage fail \u00fcmber\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#muudatuste-tagasivotmine","title":"Muudatuste Tagasiv\u00f5tmine","text":"<pre><code>git checkout -- failinimi.txt  # Taasta fail viimase commit'i olekusse\ngit checkout -- .              # Taasta k\u00f5ik failid\ngit reset HEAD failinimi.txt   # Eemalda fail staging'ust\ngit reset HEAD                 # Eemalda k\u00f5ik failid staging'ust\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#commitide-haldamine","title":"\ud83d\udd04 Commit'ide Haldamine","text":""},{"location":"git_version_control/reference/git_commands_reference/#commitide-muutmine","title":"Commit'ide Muutmine","text":"<pre><code>git commit --amend -m \"Uus s\u00f5num\"  # Muuda viimast commit'i\ngit commit --amend --no-edit       # Lisa faile viimase commit'i\ngit commit -am \"S\u00f5num\"             # Lisa ja commit k\u00f5ik muudetud failid\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#commitide-tagasivotmine","title":"Commit'ide Tagasiv\u00f5tmine","text":"<pre><code>git revert commit-hash      # Turvaline tagasiv\u00f5tmine (loob uue commit'i)\ngit revert commit1..commit2 # Mitme commit'i tagasiv\u00f5tmine\ngit reset --soft HEAD~1     # J\u00e4tab muudatused staging'u\ngit reset --mixed HEAD~1    # J\u00e4tab muudatused t\u00f6\u00f6kausta\ngit reset --hard HEAD~1     # Kustutab muudatused t\u00e4ielikult\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#commitide-identifitseerimine","title":"Commit'ide Identifitseerimine","text":"<pre><code>git show HEAD               # Viimane commit\ngit show HEAD~1             # Eelmine commit\ngit show HEAD~2             # Kaks commit'i tagasi\ngit show branch-name^       # Eelmine commit\ngit show branch-name~3      # Kolm commit'i tagasi\ngit show a1b2c3d            # L\u00fchike hash\ngit show v1.0.0             # Tag\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#ajutine-salvestamine-stash","title":"\ud83d\udce6 Ajutine Salvestamine (Stash)","text":"<pre><code>git stash                   # Salvesta muudatused ajutiselt\ngit stash pop              # Taasta salvestatud muudatused\ngit stash list             # Vaata stash'e\ngit stash apply stash@{0}  # Taasta konkreetne stash\ngit stash drop stash@{0}   # Kustuta stash\ngit stash clear            # Kustuta k\u00f5ik stash'ed\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#otsimine-ja-filtreerimine","title":"\ud83d\udd0d Otsimine ja Filtreerimine","text":"<pre><code>git log --grep=\"s\u00f5na\"      # Otsi commit'ides\ngit log -S \"s\u00f5na\"          # Otsi muudatuste sisus\ngit log --since=\"2023-01-01\"  # Filtreeri kuup\u00e4eva j\u00e4rgi\ngit log --until=\"2023-12-31\"  # Filtreeri kuup\u00e4eva j\u00e4rgi\ngit log --author=\"Nimi\"    # Filtreeri autori j\u00e4rgi\ngit log --oneline -10      # Viimased 10 commit'i\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#tagid","title":"\ud83c\udff7\ufe0f Tag'id","text":"<pre><code>git tag v1.0.0             # Loo tag\ngit tag -a v1.0.0 -m \"S\u00f5num\"  # Annotated tag\ngit tag -l                 # Vaata tag'e\ngit show v1.0.0            # Vaata tag'i info\ngit push origin v1.0.0     # Saada tag\ngit push origin --tags     # Saada k\u00f5ik tag'id\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#konfliktide-lahendamine","title":"\ud83d\udd27 Konfliktide Lahendamine","text":"<pre><code>git status                 # N\u00e4itab konfliktilisi faile\ngit diff                   # N\u00e4itab konfliktide detaile\ngit mergetool              # Avab graafilise lahendaja\ngit add konfliktne-fail.txt # P\u00e4rast konfliktide lahendamist\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#aliasid-ja-konfiguratsioon","title":"\ud83d\udccb Alias'id ja Konfiguratsioon","text":""},{"location":"git_version_control/reference/git_commands_reference/#kasulikud-aliasid","title":"Kasulikud Alias'id","text":"<pre><code># Lisa need git config'u\ngit config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.br branch\ngit config --global alias.ci commit\ngit config --global alias.unstage 'reset HEAD --'\ngit config --global alias.last 'log -1 HEAD'\ngit config --global alias.visual '!gitk'\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#kasutamine","title":"Kasutamine","text":"<pre><code>git st                     # git status\ngit co main               # git checkout main\ngit br                    # git branch\ngit ci -m \"s\u00f5num\"        # git commit -m \"s\u00f5num\"\ngit unstage fail.txt     # git reset HEAD -- fail.txt\n</code></pre>"},{"location":"git_version_control/reference/git_commands_reference/#hoiatused-ja-nouanded","title":"\ud83d\udea8 Hoiatused ja N\u00f5uanded","text":""},{"location":"git_version_control/reference/git_commands_reference/#ara-tee-kunagi","title":"\u00c4ra tee kunagi:","text":"<ul> <li><code>git push --force</code> shared branch'ides</li> <li><code>git reset --hard</code> salvestamata muudatustega</li> <li><code>git clean -fd</code> ilma kontrollimata</li> <li>Commit'i saladusi (API keys, paroolid)</li> </ul>"},{"location":"git_version_control/reference/git_commands_reference/#kasuta-alati","title":"Kasuta alati:","text":"<ul> <li><code>git push --force-with-lease</code> force push'i asemel</li> <li><code>git status</code> enne keerulisi operatsioone</li> <li>Selgeid commit s\u00f5numeid</li> <li><code>.gitignore</code> faili</li> </ul>"},{"location":"git_version_control/reference/git_commands_reference/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":"<ul> <li>Git'i ametlik dokumentatsioon</li> <li>Git'i visuaalne \u00f5petus</li> <li>Git'i cheatsheet</li> <li>Git'i branching model</li> </ul> <p>See viide sisaldab k\u00f5ige populaarsemaid ja kasulikumaid Git k\u00e4ske. T\u00e4psem info leiad Git'i ametlikust dokumentatsioonist.</p>"},{"location":"git_version_control/reference/vscode/","title":"VS Code Seadistamise Juhend","text":""},{"location":"git_version_control/reference/vscode/#mis-on-ide-integrated-development-environment","title":"Mis on IDE (Integrated Development Environment)?","text":"<p>IDE on integreeritud arenduskeskkond - \u00fcks programm, mis sisaldab k\u00f5iki arendamiseks vajalikke t\u00f6\u00f6riistu:</p>"},{"location":"git_version_control/reference/vscode/#traditsiooniline-vs-ide-toovoog","title":"Traditsiooniline vs IDE T\u00f6\u00f6voog","text":"Traditsioooniline IDE (VS Code) Notepad koodi kirjutamiseks Code Editor - syntax highlighting Command line kompileerimiseks Integrated Terminal - k\u00e4sud sama aknas Eraldi FTP klient failide \u00fcleslaadimiseks Remote Extensions - otse\u00fchendus Git bash versioonihalduseks Source Control - Git integreeritud Veebilehtisja vigade otsimiseks Debugging - breakpointid, watches"},{"location":"git_version_control/reference/vscode/#ide-vs-code-editor-vs-text-editor","title":"IDE vs Code Editor vs Text Editor","text":"T\u00fc\u00fcp N\u00e4ited Eelised Puudused Text Editor Notepad, gedit Kiire, lihtne Pole programmeerimisfunktsioone Code Editor VS Code, Sublime Kerge, laiendatav Vajab seadistamist IDE IntelliJ, Eclipse K\u00f5ik kaasas Raske, aeglane <p>VS Code on h\u00fcbriid - Code Editor, mida saab laienduste abil IDE-ks muuta!</p>"},{"location":"git_version_control/reference/vscode/#miks-vs-code-devops-ile","title":"Miks VS Code DevOps-ile?","text":"<ul> <li>Kerge ja kiire - k\u00e4ivitub sekundiga</li> <li>Laiendatav - lisa ainult see, mida vajad</li> <li>Multi-language - Python, YAML, JSON, Bash, Dockerfile</li> <li>Remote-first - loodud serveritega t\u00f6\u00f6tamiseks</li> <li>Git-centered - versioonihaldus on s\u00fcvuti integreeritud</li> </ul>"},{"location":"git_version_control/reference/vscode/#1-vs-code-installimine","title":"1. VS Code Installimine","text":""},{"location":"git_version_control/reference/vscode/#windows","title":"Windows","text":"<p><pre><code>winget install Microsoft.VisualStudioCode\n</code></pre> V\u00f5i lae alla: https://code.visualstudio.com</p>"},{"location":"git_version_control/reference/vscode/#macos","title":"macOS","text":"<pre><code>brew install --cask visual-studio-code\n</code></pre>"},{"location":"git_version_control/reference/vscode/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code>sudo snap install code --classic\n</code></pre>"},{"location":"git_version_control/reference/vscode/#2-vajalikud-laiendused","title":"2. Vajalikud Laiendused","text":""},{"location":"git_version_control/reference/vscode/#laienduste-allikad","title":"Laienduste Allikad","text":"<ul> <li>VS Code sisene: <code>Ctrl+Shift+X</code> - p\u00f5hiline viis</li> <li>VS Marketplace: https://marketplace.visualstudio.com/ - brauseris sirvimine</li> <li>Teemade galerii: https://vscodethemes.com/ - visuaalsete teemade sirvimine</li> <li>Command line: <code>code --install-extension publisher.name</code></li> </ul>"},{"location":"git_version_control/reference/vscode/#installimisvoimalused","title":"Installimisv\u00f5imalused","text":"Meetod Kuidas kasutada Millal kasutada N\u00e4ide VS Code GUI <code>Ctrl+Shift+X</code> \u2192 otsi \u2192 Install Tavakasutus Otsi \"Prettier\" Marketplace veeb Sirvi \u2192 Install \u2192 ava VS Code Laienduste uurimine marketplace.visualstudio.com Teemade galerii Vali teema \u2192 Install \u2192 ava VS Code Visuaalse disaini valik vscodethemes.com Command line <code>code --install-extension ms-vscode-remote.remote-ssh</code> Automiseering, skriptid Bulk install VSIX fail Download .vsix \u2192 Install from VSIX Erilaiendused, beta versioonid .vsix local install"},{"location":"git_version_control/reference/vscode/#teemade-installimine","title":"Teemade Installimine","text":"<ol> <li>Mine https://vscodethemes.com/</li> <li>Sirvi visuaalselt erinevaid teemasid (Dark, Light, High Contrast)</li> <li>Kliki Install \u2192 avaneb VS Code</li> <li>Teema aktiveeritakse automaatselt</li> </ol>"},{"location":"git_version_control/reference/vscode/#minu-lemmikud-laiendused","title":"Minu lemmikud laiendused","text":"<p>Ava VS Code \u2192 Vajuta <code>Ctrl+Shift+X</code> \u2192 Paigalda j\u00e4rgmised:</p> Laienduse nimi Autor Otsingus\u00f5na Marketplace ID Kasutus Remote - SSH Microsoft \"Remote - SSH\" <code>ms-vscode-remote.remote-ssh</code> Serveritega t\u00f6\u00f6tamiseks Remote Explorer Microsoft \"Remote Explorer\" <code>ms-vscode.remote-explorer</code> Remote \u00fchenduste haldamiseks Prettier - Code formatter Prettier \"Prettier\" <code>esbenp.prettier-vscode</code> Koodi automaatseks formateerimiseks GitHub Actions GitHub \"GitHub Actions\" <code>github.vscode-github-actions</code> CI/CD t\u00f6\u00f6voogluste jaoks GitHub Codespaces GitHub \"GitHub Codespaces\" <code>github.codespaces</code> Pilve arenduskeskkonnaks indent-rainbow oderwat \"indent-rainbow\" <code>oderwat.indent-rainbow</code> Taanduste visualiseerimiseks (YAML!)"},{"location":"git_version_control/reference/vscode/#marketplace-kasutamine","title":"Marketplace Kasutamine","text":"<ol> <li>Mine https://marketplace.visualstudio.com/</li> <li>Otsi laiendust (nt \"Docker\")</li> <li>Install \u2192 avaneb VS Code automaatselt</li> <li>V\u00f5i kopeeri Marketplace ID \u2192 k\u00e4surea install</li> </ol>"},{"location":"git_version_control/reference/vscode/#7-ssh-seadistamine","title":"7. SSH Seadistamine","text":""},{"location":"git_version_control/reference/vscode/#ssh-votme-loomine","title":"SSH v\u00f5tme loomine:","text":"<pre><code>ssh-keygen -t rsa -b 4096 -C \"sinu.email@example.com\"\n</code></pre>"},{"location":"git_version_control/reference/vscode/#vs-code-ssh-config","title":"VS Code SSH config:","text":"<p>Vajuta <code>F1</code> \u2192 <code>Remote-SSH: Open Configuration File</code></p> <p>Lisa: <pre><code>Host serverinimi\n    HostName IP.aadress.v\u00f5i.domeen\n    User kasutajanimi\n    Port 22\n    IdentityFile ~/.ssh/id_rsa\n</code></pre></p>"},{"location":"git_version_control/reference/vscode/#8-pohiseadistused","title":"8. P\u00f5hiseadistused","text":"<p>Ava Settings (<code>Ctrl+,</code>) ja lisa:</p> <pre><code>{\n    \"editor.formatOnSave\": true,\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n    \"files.autoSave\": \"afterDelay\",\n    \"editor.tabSize\": 2,\n    \"editor.insertSpaces\": true,\n    \"yaml.format.enable\": true\n}\n</code></pre>"},{"location":"git_version_control/reference/vscode/#4-virtuaalmasinad-ja-uhendused","title":"4. Virtuaalmasinad ja \u00dchendused","text":""},{"location":"git_version_control/reference/vscode/#voimalikud-keskkonnad","title":"V\u00f5imalikud Keskkonnad","text":"Keskkond Installimisviis IP aadressi leidmine WSL2 (Windows) <code>wsl --install Ubuntu</code> Automaatne (localhost) Multipass <code>multipass launch --name dev</code> <code>multipass list</code> VirtualBox GUI kaudu Ubuntu ISO VM seadetest Network Docker <code>docker run -it ubuntu bash</code> <code>docker inspect container_id</code>"},{"location":"git_version_control/reference/vscode/#wsl2-uhendus-koige-lihtsam","title":"WSL2 \u00dchendus (k\u00f5ige lihtsam)","text":"<pre><code># Windows PowerShell-is\nwsl --install Ubuntu\n# Taask\u00e4ivita arvuti\n# WSL2 k\u00e4ivitub automaatselt VS Code-s Remote Explorer-is\n</code></pre>"},{"location":"git_version_control/reference/vscode/#multipass-uhendus","title":"Multipass \u00dchendus","text":"<pre><code># Masina loomine\nmultipass launch --name devserver --cpus 2 --mem 2G --disk 10G\n\n# SSH info saamine\nmultipass info devserver\n\n# VS Code config\nHost multipass-dev\n    HostName [IP multipass info k\u00e4sust]\n    User ubuntu\n    IdentityFile ~/.ssh/id_rsa\n</code></pre>"},{"location":"git_version_control/reference/vscode/#virtualbox-uhendus","title":"VirtualBox \u00dchendus","text":"<ol> <li>Loo Ubuntu VM VirtualBox-is</li> <li>Network: Bridged Adapter v\u00f5i NAT + Port Forwarding</li> <li>Ubuntu-s: <code>sudo apt install openssh-server</code></li> <li>Lisa VS Code SSH config-i</li> </ol>"},{"location":"git_version_control/reference/vscode/#5-remote-explorer-kasutamine","title":"5. Remote Explorer Kasutamine","text":""},{"location":"git_version_control/reference/vscode/#uhenduste-vaatamine","title":"\u00dchenduste Vaatamine","text":"<ol> <li>K\u00fclgriba \u2192 Remote Explorer ikoon</li> <li>SSH Targets all n\u00e4ed k\u00f5iki seadistatud \u00fchendusi  </li> <li>Kliki masina nime \u2192 Connect in New Window</li> </ol>"},{"location":"git_version_control/reference/vscode/#remote-extensions","title":"Remote Extensions","text":"<p>Remote masinas on eraldi extension store: - \u00dchenda remote masinaga - Extensions paneel n\u00e4itab \"Install in SSH: serverinimi\" - Paigalda vajalikud extensions remote masinas</p> <p>Soovitatud remote extensions: - Python, Docker, YAML - kui vaja remote masinas</p>"},{"location":"git_version_control/reference/vscode/#6-mitme-terminali-kasutamine","title":"6. Mitme Terminali Kasutamine","text":""},{"location":"git_version_control/reference/vscode/#terminal-loomine","title":"Terminal Loomine","text":"<pre><code>Ctrl+Shift+` - Uus terminal\nCtrl+` - Terminali n\u00e4itamine/peitmine\n</code></pre>"},{"location":"git_version_control/reference/vscode/#terminal-tuubid","title":"Terminal T\u00fc\u00fcbid","text":"Kiirklahv Terminal t\u00fc\u00fcp <code>Ctrl+Shift+</code> Kohalik terminal Remote aknas: <code>Ctrl+Shift+</code> Remote terminal <code>+</code> nupp terminal paneelil Lisa uus"},{"location":"git_version_control/reference/vscode/#terminali-haldamine","title":"Terminali Haldamine","text":"<ul> <li>Split Terminal: Terminal paremkl\u00f5ps \u2192 \"Split Terminal\"  </li> <li>Rename: Terminal paremkl\u00f5ps \u2192 \"Rename\"</li> <li>Kill Terminal: Terminal paremkl\u00f5ps \u2192 \"Kill Terminal\"</li> <li>Switch: <code>Ctrl+PageUp/PageDown</code> v\u00f5i dropdown men\u00fc\u00fc</li> </ul>"},{"location":"git_version_control/reference/vscode/#9-kiire-test","title":"9. Kiire Test","text":"<ol> <li>Loo uus kaust ja ava VS Code-s</li> <li>Loo fail <code>test.yaml</code>: <pre><code>server:\n  host: localhost\n  port: 8080\n  settings:\n    debug: true\n    timeout: 30\n</code></pre></li> <li>Salvesta (<code>Ctrl+S</code>) - Prettier peaks formateerima</li> <li>Vaata indent-rainbow v\u00e4rve</li> </ol>"},{"location":"git_version_control/reference/whatthecommit_guide/","title":"WhatTheCommit.com \u2013 Commit-s\u00f5numid, mis solvavad sind tagasi \ud83d\ude04","text":""},{"location":"git_version_control/reference/whatthecommit_guide/#mis-see-tegelikult-on","title":"\ud83c\udfaf Mis see tegelikult on?","text":"<p>WhatTheCommit.com on sait, mis viskab sulle suvalisi commit-s\u00f5numeid, sest sa oled ilmselt liiga laisk, et m\u00f5elda ise midagi paremat kui \u201cupdate\u201d v\u00f5i \u201casdfasdkjf\u201d.</p> <p>Kasuta seda ainult kohalikes projektides, muidu keegi vaatab su Git-ajalugu ja valandab kogemata.</p>"},{"location":"git_version_control/reference/whatthecommit_guide/#kiire-seadistus-sest-sul-on-kannatust-umbes-6-sekundiks","title":"\ud83d\ude80 Kiire Seadistus, sest sul on kannatust umbes 6 sekundiks","text":"<p>Lisa oma <code>~/.bashrc</code>-i:</p> <pre><code>alias gitcommit='git commit -m \"$(curl -s https://whatthecommit.com/index.txt)\"'\n</code></pre> <p>V\u00f5i kui sa tahad teha seda \"nagu proff\":</p> <pre><code>git config --global alias.commit-fun '!f() { git commit -m \"$(curl -s https://whatthecommit.com/index.txt)\"; }; f'\n</code></pre>"},{"location":"git_version_control/reference/whatthecommit_guide/#kuidas-see-tootab-ei-toota-see-toimib-umbes","title":"\ud83c\udfae Kuidas see t\u00f6\u00f6tab? Ei t\u00f6\u00f6ta, see toimib\u2026 umbes.","text":"<pre><code>$ git add .\n$ gitcommit\n[main a1b2c3d] i have no idea what i\u2019m doing\n 1 file changed, 1 panic attack triggered\n</code></pre>"},{"location":"git_version_control/reference/whatthecommit_guide/#moned-parlid-masinast-kes-moistab-su-hingevalu","title":"\ud83d\udcdd M\u00f5ned p\u00e4rlid masinast, kes m\u00f5istab su hingevalu","text":"<ul> <li>\u201ccommit before i break more shit\u201d \u2013 v\u00e4ga ennetav</li> <li>\u201coops, forgot to add that file\u201d \u2013 klassika</li> <li>\u201cthat last commit? oh, forget it\u201d \u2013 Git-zen</li> <li>\u201ctrust me, it\u2019s working\u201d \u2013 valede tippvorm</li> </ul>"},{"location":"git_version_control/reference/whatthecommit_guide/#mitte-kasutada-too-juures-kui-sa-tahad-tookohta-hoida","title":"\u26a0\ufe0f Mitte kasutada t\u00f6\u00f6 juures\u2026 kui sa tahad t\u00f6\u00f6kohta hoida","text":"<p>See t\u00f6\u00f6riist sobib h\u00e4sti: \u2705 Protot\u00fc\u00fcpideks \u2705 Kodukoodiks \u2705 Identiteedikriisideks \u274c Projektideks, kus keegi p\u00e4riselt loeb su commit-ajalugu</p>"},{"location":"kubernetes_overview/homework/","title":"Kubernetes Overview Kodut\u00f6\u00f6: Kohalik Container Orchestration","text":""},{"location":"kubernetes_overview/homework/#ulesande-kirjeldus","title":"\ud83c\udfaf \u00dclesande Kirjeldus","text":"<p>Projekt: \"TechShop\" E-commerce Kubernetes Deployment</p> <p>Eesm\u00e4rk: Deploy'ida lihtne e-commerce rakendus Kubernetes'i kasutades kohalikku Minikube keskkonda.</p> <p>Aeg: 2-3 tundi</p>"},{"location":"kubernetes_overview/homework/#ulesande-nouded","title":"\ud83d\udccb \u00dclesande N\u00f5uded","text":""},{"location":"kubernetes_overview/homework/#1-rakenduse-arhitektuur","title":"1. Rakenduse Arhitektuur","text":"<p>TechShop koosneb kolmest komponendist:</p> <pre><code># Arhitektuur:\nFrontend (React) \u2192 Backend (Node.js) \u2192 Database (PostgreSQL)\n     \u2193                    \u2193                    \u2193\n  nginx:alpine      node:16-alpine      postgres:13\n</code></pre>"},{"location":"kubernetes_overview/homework/#2-vajalikud-ressursid","title":"2. Vajalikud Ressursid","text":"<p>Kubernetes ressursid: - 3 Deployment'i - frontend, backend, database - 3 Service'i - frontend, backend, database - 1 ConfigMap - rakenduse konfiguratsioon - 1 Secret - andmebaasi parool - 1 PersistentVolumeClaim - andmebaasi andmete salvestamine</p>"},{"location":"kubernetes_overview/homework/#samm-1-projekti-struktuuri-loomine-30-min","title":"\ud83d\ude80 Samm 1: Projekti Struktuuri Loomine (30 min)","text":""},{"location":"kubernetes_overview/homework/#11-loo-projekt-struktuur","title":"1.1: Loo projekt struktuur","text":"<pre><code># Loo projekt kaust\nmkdir techshop-kubernetes\ncd techshop-kubernetes\n\n# Loo faili struktuur\nmkdir -p {frontend,backend,database,config}\ntouch README.md\n</code></pre>"},{"location":"kubernetes_overview/homework/#12-loo-readmemd","title":"1.2: Loo README.md","text":"<pre><code># TechShop Kubernetes Deployment\n\n## Projekt kirjeldus\nLihtne e-commerce rakendus Kubernetes'i kasutades.\n\n## Komponendid\n- Frontend: React (nginx:alpine)\n- Backend: Node.js API\n- Database: PostgreSQL\n\n## Kuidas kasutada\n1. `kubectl apply -f config/`\n2. `kubectl get all`\n3. `minikube service frontend-service`\n</code></pre>"},{"location":"kubernetes_overview/homework/#samm-2-database-setup-30-min","title":"\ud83d\udd27 Samm 2: Database Setup (30 min)","text":""},{"location":"kubernetes_overview/homework/#21-loo-postgresql-secret","title":"2.1: Loo PostgreSQL Secret","text":"<p><code>database/postgres-secret.yaml</code>: <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: postgres-secret\ntype: Opaque\ndata:\n  username: dGVjaHNob3A=  # techshop (base64)\n  password: cGFzc3dvcmQxMjM=  # password123 (base64)\n  database: dGVjaHNob3BkYg==  # techshopdb (base64)\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#22-loo-postgresql-configmap","title":"2.2: Loo PostgreSQL ConfigMap","text":"<p><code>database/postgres-config.yaml</code>: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: postgres-config\ndata:\n  POSTGRES_DB: techshopdb\n  POSTGRES_USER: techshop\n  POSTGRES_PASSWORD: password123\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#23-loo-postgresql-persistentvolumeclaim","title":"2.3: Loo PostgreSQL PersistentVolumeClaim","text":"<p><code>database/postgres-pvc.yaml</code>: <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgres-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#24-loo-postgresql-deployment","title":"2.4: Loo PostgreSQL Deployment","text":"<p><code>database/postgres-deployment.yaml</code>: <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres-deployment\n  labels:\n    app: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n      - name: postgres\n        image: postgres:13\n        ports:\n        - containerPort: 5432\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            configMapKeyRef:\n              name: postgres-config\n              key: POSTGRES_DB\n        - name: POSTGRES_USER\n          valueFrom:\n            configMapKeyRef:\n              name: postgres-config\n              key: POSTGRES_USER\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            configMapKeyRef:\n              name: postgres-config\n              key: POSTGRES_PASSWORD\n        volumeMounts:\n        - name: postgres-storage\n          mountPath: /var/lib/postgresql/data\n      volumes:\n      - name: postgres-storage\n        persistentVolumeClaim:\n          claimName: postgres-pvc\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#25-loo-postgresql-service","title":"2.5: Loo PostgreSQL Service","text":"<p><code>database/postgres-service.yaml</code>: <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: postgres-service\nspec:\n  selector:\n    app: postgres\n  ports:\n  - port: 5432\n    targetPort: 5432\n  type: ClusterIP\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#samm-3-backend-setup-45-min","title":"\ud83d\udd27 Samm 3: Backend Setup (45 min)","text":""},{"location":"kubernetes_overview/homework/#31-loo-backend-configmap","title":"3.1: Loo Backend ConfigMap","text":"<p><code>backend/backend-config.yaml</code>: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: backend-config\ndata:\n  NODE_ENV: \"development\"\n  PORT: \"3000\"\n  DATABASE_URL: \"postgresql://techshop:password123@postgres-service:5432/techshopdb\"\n  JWT_SECRET: \"development-secret\"\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#32-loo-backend-deployment","title":"3.2: Loo Backend Deployment","text":"<p><code>backend/backend-deployment.yaml</code>: <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: backend-deployment\n  labels:\n    app: backend\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: backend\n  template:\n    metadata:\n      labels:\n        app: backend\n    spec:\n      containers:\n      - name: backend\n        image: node:16-alpine\n        ports:\n        - containerPort: 3000\n        env:\n        - name: NODE_ENV\n          valueFrom:\n            configMapKeyRef:\n              name: backend-config\n              key: NODE_ENV\n        - name: PORT\n          valueFrom:\n            configMapKeyRef:\n              name: backend-config\n              key: PORT\n        - name: DATABASE_URL\n          valueFrom:\n            configMapKeyRef:\n              name: backend-config\n              key: DATABASE_URL\n        - name: JWT_SECRET\n          valueFrom:\n            configMapKeyRef:\n              name: backend-config\n              key: JWT_SECRET\n        command: [\"sh\", \"-c\"]\n        args:\n        - |\n          echo \"Starting backend server...\"\n          echo \"Database URL: $DATABASE_URL\"\n          echo \"Port: $PORT\"\n          echo \"Environment: $NODE_ENV\"\n          sleep 3600\n        resources:\n          requests:\n            memory: \"128Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 3000\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 3000\n          initialDelaySeconds: 5\n          periodSeconds: 5\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#33-loo-backend-service","title":"3.3: Loo Backend Service","text":"<p><code>backend/backend-service.yaml</code>: <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: backend-service\nspec:\n  selector:\n    app: backend\n  ports:\n  - port: 3000\n    targetPort: 3000\n  type: ClusterIP\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#samm-4-frontend-setup-30-min","title":"\ud83c\udfa8 Samm 4: Frontend Setup (30 min)","text":""},{"location":"kubernetes_overview/homework/#41-loo-frontend-configmap","title":"4.1: Loo Frontend ConfigMap","text":"<p><code>frontend/frontend-config.yaml</code>: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: frontend-config\ndata:\n  REACT_APP_API_URL: \"http://backend-service:3000\"\n  REACT_APP_ENVIRONMENT: \"development\"\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#42-loo-frontend-deployment","title":"4.2: Loo Frontend Deployment","text":"<p><code>frontend/frontend-deployment.yaml</code>: <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-deployment\n  labels:\n    app: frontend\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: frontend\n  template:\n    metadata:\n      labels:\n        app: frontend\n    spec:\n      containers:\n      - name: frontend\n        image: nginx:alpine\n        ports:\n        - containerPort: 80\n        env:\n        - name: REACT_APP_API_URL\n          valueFrom:\n            configMapKeyRef:\n              name: frontend-config\n              key: REACT_APP_API_URL\n        - name: REACT_APP_ENVIRONMENT\n          valueFrom:\n            configMapKeyRef:\n              name: frontend-config\n              key: REACT_APP_ENVIRONMENT\n        command: [\"sh\", \"-c\"]\n        args:\n        - |\n          echo \"Starting frontend server...\"\n          echo \"API URL: $REACT_APP_API_URL\"\n          echo \"Environment: $REACT_APP_ENVIRONMENT\"\n          echo \"&lt;html&gt;&lt;body&gt;&lt;h1&gt;TechShop Frontend&lt;/h1&gt;&lt;p&gt;API: $REACT_APP_API_URL&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\" &gt; /usr/share/nginx/html/index.html\n          nginx -g \"daemon off;\"\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"50m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"100m\"\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#43-loo-frontend-service","title":"4.3: Loo Frontend Service","text":"<p><code>frontend/frontend-service.yaml</code>: <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend-service\nspec:\n  selector:\n    app: frontend\n  ports:\n  - port: 80\n    targetPort: 80\n  type: NodePort\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#samm-5-deployment-ja-testimine-30-min","title":"\ud83d\ude80 Samm 5: Deployment ja Testimine (30 min)","text":""},{"location":"kubernetes_overview/homework/#51-deployi-koik-ressursid","title":"5.1: Deploy'i k\u00f5ik ressursid","text":"<pre><code># Deploy'i database\nkubectl apply -f database/\n\n# Deploy'i backend\nkubectl apply -f backend/\n\n# Deploy'i frontend\nkubectl apply -f frontend/\n\n# Vaata k\u00f5iki ressursse\nkubectl get all\n</code></pre>"},{"location":"kubernetes_overview/homework/#52-kontrolli-deploymenti","title":"5.2: Kontrolli deployment'i","text":"<pre><code># Vaata Pod'ide staatust\nkubectl get pods\n\n# Vaata Service'e\nkubectl get services\n\n# Vaata ConfigMap'e\nkubectl get configmaps\n\n# Vaata Secret'e\nkubectl get secrets\n\n# Vaata PVC'e\nkubectl get pvc\n</code></pre>"},{"location":"kubernetes_overview/homework/#53-testi-rakendust","title":"5.3: Testi rakendust","text":"<pre><code># Testi frontend'i\nminikube service frontend-service\n\n# Testi backend'i\nkubectl port-forward service/backend-service 3000:3000\n\n# Testi database'i\nkubectl exec -it $(kubectl get pods -l app=postgres -o jsonpath='{.items[0].metadata.name}') -- psql -U techshop -d techshopdb\n</code></pre>"},{"location":"kubernetes_overview/homework/#samm-6-monitoring-ja-scaling-15-min","title":"\ud83d\udcca Samm 6: Monitoring ja Scaling (15 min)","text":""},{"location":"kubernetes_overview/homework/#61-scaling","title":"6.1: Scaling","text":"<pre><code># Skaleeri frontend'i \u00fcles\nkubectl scale deployment frontend-deployment --replicas=5\n\n# Skaleeri backend'i \u00fcles\nkubectl scale deployment backend-deployment --replicas=3\n\n# Vaata tulemust\nkubectl get pods\n</code></pre>"},{"location":"kubernetes_overview/homework/#62-monitoring","title":"6.2: Monitoring","text":"<pre><code># Vaata Pod'ide log'e\nkubectl logs -l app=frontend\nkubectl logs -l app=backend\nkubectl logs -l app=postgres\n\n# Vaata ressursi kasutust\nkubectl top pods\n\n# Vaata event'e\nkubectl get events\n</code></pre>"},{"location":"kubernetes_overview/homework/#samm-7-cleanup-10-min","title":"\ud83e\uddf9 Samm 7: Cleanup (10 min)","text":"<pre><code># Kustuta k\u00f5ik ressursid\nkubectl delete -f frontend/\nkubectl delete -f backend/\nkubectl delete -f database/\n\n# Kontrolli, et k\u00f5ik on kustutatud\nkubectl get all\nkubectl get pvc\nkubectl get configmaps\nkubectl get secrets\n</code></pre>"},{"location":"kubernetes_overview/homework/#harjutus-8-bonus-ulesanded-15-min","title":"\ud83d\udcdd HARJUTUS 8: Bonus \u00dclesanded (15 min)","text":""},{"location":"kubernetes_overview/homework/#81-ingress-setup","title":"8.1: Ingress Setup","text":"<p>Loo Ingress controller ja Ingress: <pre><code># ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: techshop-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: techshop.local\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: frontend-service\n            port:\n              number: 80\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#82-horizontal-pod-autoscaler","title":"8.2: Horizontal Pod Autoscaler","text":"<p>Loo HPA backend'ile: <pre><code># hpa.yaml\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: backend-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: backend-deployment\n  minReplicas: 2\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#83-job-ja-cronjob","title":"8.3: Job ja CronJob","text":"<p>Loo backup Job: <pre><code># backup-job.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: database-backup\nspec:\n  template:\n    spec:\n      containers:\n      - name: backup\n        image: postgres:13\n        command: [\"pg_dump\"]\n        args: [\"-h\", \"postgres-service\", \"-U\", \"techshop\", \"-d\", \"techshopdb\"]\n        env:\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: postgres-secret\n              key: password\n      restartPolicy: Never\n  backoffLimit: 3\n</code></pre></p>"},{"location":"kubernetes_overview/homework/#kodutoo-kokkuvote","title":"\ud83c\udfaf Kodut\u00f6\u00f6 Kokkuv\u00f5te","text":""},{"location":"kubernetes_overview/homework/#opitud-kontseptsioonid","title":"\u00d5pitud kontseptsioonid:","text":"<ol> <li>Multi-tier application - frontend, backend, database</li> <li>Service discovery - teenuste vahelised \u00fchendused</li> <li>Configuration management - ConfigMap ja Secret'id</li> <li>Persistent storage - PVC ja PV</li> <li>Scaling - horizontal scaling</li> <li>Health checks - liveness ja readiness probe'id</li> </ol>"},{"location":"kubernetes_overview/homework/#jargmised-sammud","title":"J\u00e4rgmised sammud:","text":"<ul> <li>Lisa Ingress controller</li> <li>Seadista monitoring (Prometheus/Grafana)</li> <li>Lisa CI/CD pipeline</li> <li>Optimeeri resource kasutust</li> <li>Lisa security policies</li> </ul> <p>\ud83c\udf89 Palju \u00f5nne! Oled n\u00fc\u00fcd valmis keerukate rakenduste deploy'imiseks Kubernetes'i!</p>"},{"location":"kubernetes_overview/lab/","title":"Kubernetes Overview Lab: Container Orchestration","text":"<p>ITS-24 DevOps Automatiseerimine | 2 tundi praktiline t\u00f6\u00f6</p>"},{"location":"kubernetes_overview/lab/#samm-1-labi-eesmargid","title":"\ud83c\udfaf Samm 1: Lab'i eesm\u00e4rgid","text":"<p>P\u00e4rast laborit oskate: - Seadistada kohaliku Kubernetes keskkonna - Deploy'ida lihtsaid rakendusi - Kasutada kubectl k\u00e4sklusi - M\u00f5ista Kubernetes'i p\u00f5hikontseptsioone</p>"},{"location":"kubernetes_overview/lab/#samm-2-kohaliku-kubernetes-seadistamine-30-min","title":"\ud83d\udee0\ufe0f Samm 2: Kohaliku Kubernetes Seadistamine (30 min)","text":""},{"location":"kubernetes_overview/lab/#21-minikube-install","title":"2.1: Minikube Install","text":"<p>Kontrollige, et teil on: - Docker (juba installitud) - VirtualBox v\u00f5i Hyper-V (Windows) - V\u00e4hemalt 2GB vaba RAM</p> <p>Install Minikube: <pre><code># macOS\nbrew install minikube\n\n# Linux\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# Windows (PowerShell)\nchoco install minikube\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#22-kaivita-minikube","title":"2.2: K\u00e4ivita Minikube","text":"<pre><code># K\u00e4ivita Minikube\nminikube start\n\n# Kontrolli staatust\nminikube status\n\n# Vaata cluster info\nkubectl cluster-info\n\n# Vaata node'id\nkubectl get nodes\n</code></pre>"},{"location":"kubernetes_overview/lab/#23-install-kubectl-kui-vajalik","title":"2.3: Install kubectl (kui vajalik)","text":"<pre><code># macOS\nbrew install kubectl\n\n# Linux\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n\n# Kontrolli versiooni\nkubectl version --client\n</code></pre>"},{"location":"kubernetes_overview/lab/#samm-3-esimene-kubernetes-rakendus-45-min","title":"\ud83d\ude80 Samm 3: Esimene Kubernetes Rakendus (45 min)","text":""},{"location":"kubernetes_overview/lab/#31-lihtne-nginx-pod","title":"3.1: Lihtne Nginx Pod","text":"<p>Loo esimene Pod: <pre><code># Loo Pod\nkubectl run nginx-pod --image=nginx:latest --port=80\n\n# Vaata Pod'i staatust\nkubectl get pods\n\n# Vaata Pod'i detaile\nkubectl describe pod nginx-pod\n\n# Vaata Pod'i log'e\nkubectl logs nginx-pod\n</code></pre></p> <p>Testi Pod'i: <pre><code># Mine Pod'i sisse\nkubectl exec -it nginx-pod -- /bin/bash\n\n# Pod'i sees\ncurl localhost\nexit\n\n# V\u00f5i testi v\u00e4ljast\nkubectl port-forward nginx-pod 8080:80\n# Avage brauser: http://localhost:8080\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#32-nginx-deployment","title":"3.2: Nginx Deployment","text":"<p>Loo Deployment fail: <pre><code># nginx-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.19\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n</code></pre></p> <p>Deploy'i rakendus: <pre><code># Loo Deployment\nkubectl apply -f nginx-deployment.yaml\n\n# Vaata Deployment'i\nkubectl get deployments\n\n# Vaata Pod'e\nkubectl get pods\n\n# Vaata ReplicaSet'e\nkubectl get replicasets\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#33-nginx-service","title":"3.3: Nginx Service","text":"<p>Loo Service fail: <pre><code># nginx-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n    targetPort: 80\n  type: NodePort\n</code></pre></p> <p>Deploy'i Service: <pre><code># Loo Service\nkubectl apply -f nginx-service.yaml\n\n# Vaata Service'e\nkubectl get services\n\n# Testi Service'i\nkubectl run test-pod --image=busybox --rm -it --restart=Never -- wget -O- nginx-service\n\n# V\u00f5i kasuta Minikube\nminikube service nginx-service\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#samm-4-scaling-ja-updates-30-min","title":"\ud83d\udd27 Samm 4: Scaling ja Updates (30 min)","text":""},{"location":"kubernetes_overview/lab/#41-scaling","title":"4.1: Scaling","text":"<pre><code># Skaleeri \u00fcles\nkubectl scale deployment nginx-deployment --replicas=5\n\n# Vaata tulemust\nkubectl get pods\n\n# Skaleeri alla\nkubectl scale deployment nginx-deployment --replicas=2\n\n# Vaata tulemust\nkubectl get pods\n</code></pre>"},{"location":"kubernetes_overview/lab/#42-rolling-update","title":"4.2: Rolling Update","text":"<pre><code># Uuenda image'i\nkubectl set image deployment/nginx-deployment nginx=nginx:1.20\n\n# Vaata update'i progressi\nkubectl rollout status deployment/nginx-deployment\n\n# Vaata rollback ajalugu\nkubectl rollout history deployment/nginx-deployment\n\n# Tee rollback\nkubectl rollout undo deployment/nginx-deployment\n\n# Vaata rollback'i progressi\nkubectl rollout status deployment/nginx-deployment\n</code></pre>"},{"location":"kubernetes_overview/lab/#43-podi-kustutamine-ja-taaskaivitumine","title":"4.3: Pod'i kustutamine ja taask\u00e4ivitumine","text":"<pre><code># Vaata Pod'e\nkubectl get pods\n\n# Kustuta \u00fcks Pod\nkubectl delete pod &lt;pod-name&gt;\n\n# Vaata, kuidas uus Pod tekib automaatselt\nkubectl get pods -w\n</code></pre>"},{"location":"kubernetes_overview/lab/#samm-5-monitoring-ja-debugging-30-min","title":"\ud83d\udcca Samm 5: Monitoring ja Debugging (30 min)","text":""},{"location":"kubernetes_overview/lab/#51-pohilised-kubectl-kasud","title":"5.1: P\u00f5hilised kubectl k\u00e4sud","text":"<pre><code># Vaata k\u00f5iki ressursse\nkubectl get all\n\n# Vaata Pod'e details\nkubectl get pods -o wide\n\n# Vaata Service'e details\nkubectl get services -o wide\n\n# Vaata Deployment'i details\nkubectl describe deployment nginx-deployment\n\n# Vaata Pod'i details\nkubectl describe pod &lt;pod-name&gt;\n\n# Vaata Service'i details\nkubectl describe service nginx-service\n</code></pre>"},{"location":"kubernetes_overview/lab/#52-logide-vaatamine","title":"5.2: Log'ide vaatamine","text":"<pre><code># Vaata Pod'i log'e\nkubectl logs &lt;pod-name&gt;\n\n# J\u00e4rgi log'e reaalajas\nkubectl logs -f &lt;pod-name&gt;\n\n# Vaata k\u00f5igi Pod'ide log'e\nkubectl logs -l app=nginx\n\n# Vaata eelmisi log'e\nkubectl logs &lt;pod-name&gt; --previous\n</code></pre>"},{"location":"kubernetes_overview/lab/#53-containeri-sisse-minemine","title":"5.3: Container'i sisse minemine","text":"<pre><code># Mine Pod'i sisse\nkubectl exec -it &lt;pod-name&gt; -- /bin/bash\n\n# Pod'i sees\nls -la\nps aux\nenv\nexit\n\n# K\u00e4ivita \u00fchekordne k\u00e4sk\nkubectl exec &lt;pod-name&gt; -- ls -la\nkubectl exec &lt;pod-name&gt; -- env\n</code></pre>"},{"location":"kubernetes_overview/lab/#54-eventide-vaatamine","title":"5.4: Event'ide vaatamine","text":"<pre><code># Vaata k\u00f5iki event'e\nkubectl get events\n\n# Vaata event'e cronoloogilises j\u00e4rjekorras\nkubectl get events --sort-by='.lastTimestamp'\n\n# Vaata ainult viimaseid event'e\nkubectl get events --field-selector involvedObject.name=nginx-deployment\n</code></pre>"},{"location":"kubernetes_overview/lab/#samm-6-konfiguratsioon-ja-secretid-15-min","title":"\ud83c\udfaf Samm 6: Konfiguratsioon ja Secret'id (15 min)","text":""},{"location":"kubernetes_overview/lab/#61-configmap","title":"6.1: ConfigMap","text":"<p>Loo ConfigMap: <pre><code># app-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: \"localhost:5432\"\n  api_key: \"development-key\"\n  log_level: \"INFO\"\n  environment: \"development\"\n</code></pre></p> <p>Loo Pod ConfigMap'iga: <pre><code># app-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: config-pod\nspec:\n  containers:\n  - name: app\n    image: busybox\n    command: [\"sh\", \"-c\", \"echo $DATABASE_URL &amp;&amp; echo $LOG_LEVEL &amp;&amp; sleep 3600\"]\n    env:\n    - name: DATABASE_URL\n      valueFrom:\n        configMapKeyRef:\n          name: app-config\n          key: database_url\n    - name: LOG_LEVEL\n      valueFrom:\n        configMapKeyRef:\n          name: app-config\n          key: log_level\n</code></pre></p> <p>Deploy'i: <pre><code>kubectl apply -f app-config.yaml\nkubectl apply -f app-pod.yaml\n\n# Vaata Pod'i log'e\nkubectl logs config-pod\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#62-secret","title":"6.2: Secret","text":"<p>Loo Secret: <pre><code># Loo Secret k\u00e4surealt\nkubectl create secret generic app-secret \\\n  --from-literal=username=admin \\\n  --from-literal=password=secret123\n\n# Vaata Secret'i\nkubectl get secrets\nkubectl describe secret app-secret\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#samm-7-cleanup-10-min","title":"\ud83e\uddf9 Samm 7: Cleanup (10 min)","text":"<p>Kustuta k\u00f5ik ressursid: <pre><code># Kustuta Deployment ja Service\nkubectl delete -f nginx-deployment.yaml\nkubectl delete -f nginx-service.yaml\n\n# Kustuta ConfigMap ja Pod\nkubectl delete -f app-config.yaml\nkubectl delete -f app-pod.yaml\n\n# Kustuta Secret\nkubectl delete secret app-secret\n\n# Kustuta test Pod\nkubectl delete pod nginx-pod\n\n# Vaata, et k\u00f5ik on kustutatud\nkubectl get all\n\n# Peata Minikube\nminikube stop\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#harjutus-8-bonus-ulesanded-15-min","title":"\ud83d\udcdd HARJUTUS 8: Bonus \u00dclesanded (15 min)","text":""},{"location":"kubernetes_overview/lab/#81-multi-container-pod","title":"8.1: Multi-container Pod","text":"<p>Loo Pod kahe container'iga: <pre><code># multi-container-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: multi-container-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n  - name: sidecar\n    image: busybox\n    command: [\"sh\", \"-c\", \"while true; do echo 'Sidecar running'; sleep 30; done\"]\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#82-resource-limits","title":"8.2: Resource Limits","text":"<p>Lisa resource piirangud: <pre><code># resource-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-pod\nspec:\n  containers:\n  - name: app\n    image: nginx:latest\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#83-health-checks","title":"8.3: Health Checks","text":"<p>Lisa health check: <pre><code># health-check-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: health-check-pod\nspec:\n  containers:\n  - name: app\n    image: nginx:latest\n    livenessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 30\n      periodSeconds: 10\n    readinessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 5\n</code></pre></p>"},{"location":"kubernetes_overview/lab/#lab-kokkuvote","title":"\ud83c\udfaf Lab Kokkuv\u00f5te","text":""},{"location":"kubernetes_overview/lab/#opitud-kontseptsioonid","title":"\u00d5pitud kontseptsioonid:","text":"<ol> <li>Pod - v\u00e4ikseim Kubernetes \u00fcksus</li> <li>Deployment - rakenduse juhtimine ja scaling</li> <li>Service - networking ja load balancing</li> <li>ConfigMap - konfiguratsiooni haldamine</li> <li>Secret - kr\u00fcpteeritud andmete haldamine</li> </ol>"},{"location":"kubernetes_overview/lab/#opitud-kubectl-kasud","title":"\u00d5pitud kubectl k\u00e4sud:","text":"<ul> <li><code>kubectl get</code> - ressurside vaatamine</li> <li><code>kubectl describe</code> - detailide vaatamine</li> <li><code>kubectl logs</code> - log'ide vaatamine</li> <li><code>kubectl exec</code> - container'i sisse minemine</li> <li><code>kubectl scale</code> - scaling</li> <li><code>kubectl rollout</code> - update'id ja rollback'id</li> </ul>"},{"location":"kubernetes_overview/lab/#jargmised-sammud","title":"J\u00e4rgmised sammud:","text":"<ul> <li>\u00d5ppige Helm (package manager)</li> <li>Uurige Ingress (v\u00e4line ligip\u00e4\u00e4s)</li> <li>\u00d5ppige Persistent Volumes</li> <li>Uurige Kubernetes Dashboard</li> <li>\u00d5ppige monitoring (Prometheus/Grafana)</li> </ul> <p>\ud83c\udf89 Palju \u00f5nne! Oled n\u00fc\u00fcd valmis Kubernetes'i kasutamiseks!</p>"},{"location":"kubernetes_overview/lecture/","title":"Kubernetes Overview: Container Orchestration","text":"<p>ITS-24 DevOps Automatiseerimine | 2 tundi (\u00fclevaade)</p>"},{"location":"kubernetes_overview/lecture/#opivaljundid","title":"\ud83c\udfaf \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast loengut oskate: - M\u00f5ista Kubernetes'i p\u00f5hilisi kontseptsioone - Kasutada kubectl k\u00e4sklusi - Deploy'ida lihtsaid rakendusi - M\u00f5ista Kubernetes'i arhitektuuri</p>"},{"location":"kubernetes_overview/lecture/#loeng-261-mis-on-kubernetes-30-min","title":"\ud83d\udcd6 Loeng 26.1: Mis on Kubernetes? (30 min)","text":""},{"location":"kubernetes_overview/lecture/#miks-vajame-container-orchestration","title":"Miks vajame Container Orchestration?","text":"<p>Docker probleemid suurel skaalal: <pre><code># 1. K\u00e4sitsi container management\ndocker run -d --name web1 nginx:latest\ndocker run -d --name web2 nginx:latest\ndocker run -d --name web3 nginx:latest\n\n# 2. K\u00e4sitsi networking\ndocker network create web-network\ndocker network connect web-network web1\ndocker network connect web-network web2\n\n# 3. K\u00e4sitsi scaling\ndocker stop web1  # Kui \u00fcks container kukub\ndocker run -d --name web1-new nginx:latest\n\n# 4. K\u00e4sitsi load balancing\n# Peate ise seadistama reverse proxy\n</code></pre></p> <p>Kubernetes lahendab: - Automaatne scaling - lisab/eemaldab container'eid vastavalt koormusele - Automaatne failover - kui container kukub, taask\u00e4ivitub automaatselt - Load balancing - jaotab liiklust container'ite vahel - Service discovery - container'id leiavad \u00fcksteist automaatselt - Configuration management - keskkonnamuutujad, secret'id, config map'id</p>"},{"location":"kubernetes_overview/lecture/#kubernetes-arhitektuur","title":"\ud83c\udfd7\ufe0f Kubernetes Arhitektuur","text":""},{"location":"kubernetes_overview/lecture/#control-plane-master-node","title":"Control Plane (Master Node)","text":"<p>Kubernetes'i \"aju\" - teeb otsused:</p> <pre><code># Control Plane komponendid:\n- kube-apiserver      # API server - k\u00f5ik k\u00e4sud l\u00e4hevad siia\n- etcd                # Andmebaas - salvestab k\u00f5ik andmed\n- kube-scheduler      # Planeerija - otsustab, kuhu container'id panna\n- kube-controller-manager  # Kontroller - j\u00e4lgib ja parandab olukordi\n</code></pre>"},{"location":"kubernetes_overview/lecture/#worker-nodes","title":"Worker Nodes","text":"<p>Kus teie rakendused jooksevad:</p> <pre><code># Worker Node komponendid:\n- kubelet             # Agent - kommunikeerib Control Plane'iga\n- kube-proxy          # Networking - teenuste vahelised \u00fchendused\n- Container Runtime   # Docker/containerd - container'ite k\u00e4ivitamine\n</code></pre>"},{"location":"kubernetes_overview/lecture/#loeng-262-kubernetes-pohikontseptsioonid-40-min","title":"\ud83d\udccb Loeng 26.2: Kubernetes P\u00f5hikontseptsioonid (40 min)","text":""},{"location":"kubernetes_overview/lecture/#1-pod-vaikseim-uksus","title":"1. Pod - V\u00e4ikseim \u00fcksus","text":"<p>Pod on nagu \"logistiline \u00fcksus\" - v\u00f5ib sisaldada \u00fchte v\u00f5i mitut container'it:</p> <pre><code># Lihtne Pod\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n</code></pre> <p>Praktiline n\u00e4ide: <pre><code># Loo Pod\nkubectl run nginx-pod --image=nginx:latest --port=80\n\n# Vaata Pod'i staatust\nkubectl get pods\n\n# Vaata Pod'i detaile\nkubectl describe pod nginx-pod\n\n# Kustuta Pod\nkubectl delete pod nginx-pod\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#2-deployment-rakenduse-juhtimine","title":"2. Deployment - Rakenduse juhtimine","text":"<p>Deployment haldab Pod'e - scaling, updates, rollbacks:</p> <pre><code># Nginx Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3  # Kolm koopiat\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.19\n        ports:\n        - containerPort: 80\n</code></pre> <p>Praktiline n\u00e4ide: <pre><code># Loo Deployment\nkubectl create deployment nginx --image=nginx:latest --replicas=3\n\n# Vaata Deployment'i\nkubectl get deployments\n\n# Skaleeri \u00fcles\nkubectl scale deployment nginx --replicas=5\n\n# Uuenda image'i\nkubectl set image deployment/nginx nginx=nginx:1.20\n\n# Vaata rollback ajalugu\nkubectl rollout history deployment/nginx\n\n# Tee rollback\nkubectl rollout undo deployment/nginx\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#3-service-networking","title":"3. Service - Networking","text":"<p>Service pakub stabiilset IP ja DNS nime Pod'idele:</p> <pre><code># ClusterIP Service (vaikimisi)\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n    targetPort: 80\n  type: ClusterIP\n</code></pre> <p>Service t\u00fc\u00fcbid: - ClusterIP - sisemine ligip\u00e4\u00e4s (vaikimisi) - NodePort - ligip\u00e4\u00e4s node'ide kaudu - LoadBalancer - v\u00e4line ligip\u00e4\u00e4s (cloud provider'id) - ExternalName - DNS alias</p> <p>Praktiline n\u00e4ide: <pre><code># Loo Service\nkubectl expose deployment nginx --port=80 --target-port=80\n\n# Vaata Service'e\nkubectl get services\n\n# Testi Service'i\nkubectl run test-pod --image=busybox --rm -it --restart=Never -- wget -O- nginx-service\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#4-configmap-ja-secret-konfiguratsioon","title":"4. ConfigMap ja Secret - Konfiguratsioon","text":"<p>ConfigMap - mittekr\u00fcpteeritud konfiguratsioon:</p> <pre><code># ConfigMap\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: \"localhost:5432\"\n  api_key: \"development-key\"\n  log_level: \"INFO\"\n</code></pre> <p>Secret - kr\u00fcpteeritud andmed:</p> <pre><code># Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secret\ntype: Opaque\ndata:\n  username: YWRtaW4=  # base64 encoded\n  password: cGFzc3dvcmQ=  # base64 encoded\n</code></pre> <p>Kasutamine Pod'is: <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app\n    image: myapp:latest\n    env:\n    - name: DB_URL\n      valueFrom:\n        configMapKeyRef:\n          name: app-config\n          key: database_url\n    - name: DB_PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: app-secret\n          key: password\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#loeng-263-praktiline-kubernetes-30-min","title":"\ud83d\udee0\ufe0f Loeng 26.3: Praktiline Kubernetes (30 min)","text":""},{"location":"kubernetes_overview/lecture/#kohalik-kubernetes-setup","title":"Kohalik Kubernetes Setup","text":"<p>Minikube - kohalik Kubernetes keskkond:</p> <pre><code># Install Minikube\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# K\u00e4ivita Minikube\nminikube start\n\n# Kontrolli staatust\nkubectl cluster-info\nkubectl get nodes\n</code></pre>"},{"location":"kubernetes_overview/lecture/#lihtne-web-application","title":"Lihtne Web Application","text":"<p>1. Loo Deployment: <pre><code># web-app.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: web-app\n  template:\n    metadata:\n      labels:\n        app: web-app\n    spec:\n      containers:\n      - name: web-app\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n        env:\n        - name: ENVIRONMENT\n          value: \"development\"\n</code></pre></p> <p>2. Loo Service: <pre><code># web-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: web-service\nspec:\n  selector:\n    app: web-app\n  ports:\n  - port: 80\n    targetPort: 80\n  type: NodePort\n</code></pre></p> <p>3. Deploy'i rakendus: <pre><code># Loo ressursid\nkubectl apply -f web-app.yaml\nkubectl apply -f web-service.yaml\n\n# Vaata staatust\nkubectl get pods\nkubectl get services\n\n# Testi rakendust\nminikube service web-service\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#monitoring-ja-debugging","title":"Monitoring ja Debugging","text":"<p>P\u00f5hilised kubectl k\u00e4sud: <pre><code># Pod'ide vaatamine\nkubectl get pods\nkubectl get pods -o wide\nkubectl describe pod &lt;pod-name&gt;\n\n# Log'ide vaatamine\nkubectl logs &lt;pod-name&gt;\nkubectl logs -f &lt;pod-name&gt;  # j\u00e4rgi reaalajas\n\n# Container'i sisse minemine\nkubectl exec -it &lt;pod-name&gt; -- /bin/bash\n\n# Ressursside kasutamine\nkubectl top pods\nkubectl top nodes\n\n# Event'ide vaatamine\nkubectl get events\n</code></pre></p>"},{"location":"kubernetes_overview/lecture/#loeng-264-kubernetes-vs-docker-20-min","title":"\ud83d\udcca Loeng 26.4: Kubernetes vs Docker (20 min)","text":""},{"location":"kubernetes_overview/lecture/#vordlus","title":"V\u00f5rdlus","text":"Aspekt Docker Kubernetes Skope \u00dcksik container Container orchestration Scaling K\u00e4sitsi Automaatne Failover K\u00e4sitsi Automaatne Load Balancing K\u00e4sitsi Sisseehitatud Service Discovery K\u00e4sitsi Automaatne Configuration Environment variables ConfigMap/Secret Updates K\u00e4sitsi Rolling updates Monitoring Basic Comprehensive"},{"location":"kubernetes_overview/lecture/#millal-kasutada-mida","title":"Millal kasutada mida?","text":"<p>Docker sobib: - Arenduskeskkond - Lihtsad rakendused - Protot\u00fc\u00fcbid - \u00dcksikud serverid</p> <p>Kubernetes sobib: - Production keskkonnad - Suured rakendused - Microservices - High availability</p>"},{"location":"kubernetes_overview/lecture/#kokkuvote","title":"\ud83c\udfaf Kokkuv\u00f5te","text":""},{"location":"kubernetes_overview/lecture/#kubernetesi-eelised","title":"Kubernetes'i eelised:","text":"<p>\u2705 Automaatne scaling - vastavalt koormusele \u2705 High availability - automaatne failover \u2705 Service discovery - container'id leiavad \u00fcksteist \u2705 Configuration management - keskkonnamuutujad ja secret'id \u2705 Rolling updates - null downtime deployment'id \u2705 Resource management - CPU ja m\u00e4lu piirangud  </p>"},{"location":"kubernetes_overview/lecture/#jargmised-sammud","title":"J\u00e4rgmised sammud:","text":"<ul> <li>\u00d5ppige Helm (package manager)</li> <li>Uurige Ingress (v\u00e4line ligip\u00e4\u00e4s)</li> <li>\u00d5ppige Persistent Volumes</li> <li>Uurige Kubernetes Dashboard</li> <li>\u00d5ppige monitoring (Prometheus/Grafana)</li> </ul>"},{"location":"kubernetes_overview/lecture/#praktiline-soovitus","title":"Praktiline soovitus:","text":"<p>Alustage Docker'iga, siis liikuge Kubernetes'i juurde!</p> <p>J\u00e4rgmises osas: Praktiline lab - deploy'ime tervikliku rakenduse Kubernetes'i!</p>"},{"location":"terraform_basics/homework/","title":"\ud83d\udcdd Terraform Basics Kodut\u00f6\u00f6: Kohalik Infrastruktuur","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Terraform'i praktiline kasutamine ja Infrastructure as Code m\u00f5istmine Aeg: 2-3 tundi praktilist t\u00f6\u00f6d</p> <p>Fookus on Terraform'i ja Infrastructure as Code'i \u00f5ppimisel kohalikus keskkonnas!</p>"},{"location":"terraform_basics/homework/#projekt-kohalik-infrastruktuur-terraformiga","title":"\ud83c\udfaf Projekt: Kohalik Infrastruktuur Terraform'iga","text":""},{"location":"terraform_basics/homework/#mis-on-see-projekt","title":"Mis on see projekt?","text":"<p>Looge kohalik infrastruktuur Terraform'i abil. See on nagu \"digitaalse maja ehitamine\" kohalikus arvutis - kirjutate \u00fcles, mida soovite, ja Terraform teeb selle teie eest.</p>"},{"location":"terraform_basics/homework/#mida-te-ehitate","title":"Mida te ehitate?","text":"<p>\ud83d\udcbb Kohalik Infrastruktuur - Failid ja kaustad - projektifailide struktuur - Konfiguratsioonid - JSON ja YAML failid - Skriptid - automatiseerimise skriptid</p>"},{"location":"terraform_basics/homework/#miks-see-on-kasulik","title":"Miks see on kasulik?","text":"<ul> <li>\u00d5pite Terraform'i - praktiline kogemus</li> <li>Lihtne alustada - t\u00f6\u00f6tab kohalikus arvutis</li> <li>Reaalne projekt - failide ja konfiguratsiooni haldamine</li> <li>Taaskasutatav - sama kood t\u00f6\u00f6tab erinevates arvutites</li> </ul>"},{"location":"terraform_basics/homework/#ulesanne-1-projekti-struktuuri-loomine-20-min","title":"\ud83d\udccb \u00dclesanne 1: Projekti struktuuri loomine (20 min)","text":""},{"location":"terraform_basics/homework/#samm-1-pohifailid","title":"Samm 1: P\u00f5hifailid","text":"<p>Looge j\u00e4rgmine failide struktuur:</p> <pre><code>terraform-basics-homework/\n\u251c\u2500\u2500 main.tf          # P\u00f5hiline Terraform fail\n\u251c\u2500\u2500 variables.tf     # Muutujad\n\u251c\u2500\u2500 outputs.tf       # V\u00e4ljundid\n\u251c\u2500\u2500 terraform.tfvars # Muutujate v\u00e4\u00e4rtused\n\u2514\u2500\u2500 README.md        # Projekti kirjeldus\n</code></pre>"},{"location":"terraform_basics/homework/#samm-2-maintf-fail","title":"Samm 2: main.tf fail","text":"<pre><code>terraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n\n# Loo projekti p\u00f5hikaust\nresource \"local_directory\" \"project_root\" {\n  path = \"${path.module}/${var.project_name}\"\n}\n\n# Loo alamkaustad\nresource \"local_directory\" \"config\" {\n  path = \"${local_directory.project_root.path}/config\"\n}\n\nresource \"local_directory\" \"scripts\" {\n  path = \"${local_directory.project_root.path}/scripts\"\n}\n\nresource \"local_directory\" \"docs\" {\n  path = \"${local_directory.project_root.path}/docs\"\n}\n\n# Projekti konfiguratsioon\nresource \"local_file\" \"project_config\" {\n  content = jsonencode({\n    project_name = var.project_name\n    environment  = var.environment\n    version      = \"1.0.0\"\n    created_at   = timestamp()\n    author       = \"Terraform Student\"\n    features = [\n      \"local_file_management\",\n      \"configuration_generation\",\n      \"script_automation\"\n    ]\n  })\n  filename = \"${local_directory.config.path}/project.json\"\n}\n\n# YAML konfiguratsioon\nresource \"local_file\" \"app_config\" {\n  content = yamlencode({\n    app = {\n      name        = var.project_name\n      environment = var.environment\n      port        = 8080\n      debug       = var.environment == \"development\" ? true : false\n    }\n    database = {\n      type = \"sqlite\"\n      file = \"app.db\"\n    }\n    logging = {\n      level = var.environment == \"production\" ? \"warn\" : \"debug\"\n      file  = \"app.log\"\n    }\n  })\n  filename = \"${local_directory.config.path}/app.yaml\"\n}\n\n# K\u00e4ivitamise skript\nresource \"local_file\" \"startup_script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"======================================\"\n    echo \"Tere tulemast ${var.project_name} projekti!\"\n    echo \"======================================\"\n    echo \"Keskkond: ${var.environment}\"\n    echo \"Versioon: 1.0.0\"\n    echo \"Kuup\u00e4ev: $(date)\"\n    echo \"Kaust: $(pwd)\"\n    echo \"\"\n    echo \"Saadaolevad konfiguratsioonid:\"\n    ls -la config/\n    echo \"\"\n    echo \"Saadaolevad skriptid:\"\n    ls -la scripts/\n    echo \"======================================\"\n  EOF\n  filename        = \"${local_directory.scripts.path}/startup.sh\"\n  file_permission = \"0755\"\n}\n\n# Puhastamise skript\nresource \"local_file\" \"cleanup_script\" {\n  content = &lt;&lt;-EOF\n              #!/bin/bash\n    echo \"Puhastan ${var.project_name} projekti...\"\n    echo \"Kustutan ajutised failid...\"\n    rm -f *.tmp *.log\n    echo \"Puhastamine l\u00f5petatud!\"\n  EOF\n  filename        = \"${local_directory.scripts.path}/cleanup.sh\"\n  file_permission = \"0755\"\n}\n\n# Juhuslik ID failide jaoks\nresource \"random_id\" \"file_suffix\" {\n  byte_length = 4\n}\n\n# Loo mitu n\u00e4idisfaili\nresource \"local_file\" \"example_files\" {\n  count = var.file_count\n\n  content = &lt;&lt;-EOF\n    # N\u00e4idisfail ${count.index + 1}\n\n    Projekti nimi: ${var.project_name}\n    Keskkond: ${var.environment}\n    Faili number: ${count.index + 1}\n    Loodud: ${timestamp()}\n    Unikaalne ID: ${random_id.file_suffix.hex}\n\n    See on n\u00e4idisfail, mis demonstreerib Terraform'i v\u00f5imalusi.\n    Saate seda faili kasutada oma projektides.\n  EOF\n\n  filename = \"${local_directory.docs.path}/example_${count.index + 1}_${random_id.file_suffix.hex}.txt\"\n}\n\n# README fail\nresource \"local_file\" \"readme\" {\n  content = &lt;&lt;-EOF\n    # ${var.project_name}\n\n    ## Kirjeldus\n\n    See projekt on loodud Terraform'i abil demonstreerima Infrastructure as Code p\u00f5him\u00f5tteid.\n\n    ## Struktuuri\n\n    ```\n    ${var.project_name}/\n    \u251c\u2500\u2500 config/          # Konfiguratsioonifailid\n    \u251c\u2500\u2500 scripts/         # Skriptid\n    \u251c\u2500\u2500 docs/           # Dokumentatsioon ja n\u00e4ited\n    \u2514\u2500\u2500 README.md       # See fail\n    ```\n\n    ## Kasutamine\n\n    1. K\u00e4ivita projekt: `./scripts/startup.sh`\n    2. Vaata konfiguratsioone: `cat config/project.json`\n    3. Puhasta projekt: `./scripts/cleanup.sh`\n\n    ## Keskkond\n\n    - Keskkond: ${var.environment}\n    - Versioon: 1.0.0\n    - Loodud: ${timestamp()}\n\n    ## Terraform info\n\n    See projekt loodi kasutades:\n    - Local provider\n    - Random provider\n    - File resources\n    - Directory resources\n  EOF\n  filename = \"${local_directory.project_root.path}/README.md\"\n}\n</code></pre>"},{"location":"terraform_basics/homework/#samm-3-variablestf-fail","title":"Samm 3: variables.tf fail","text":"<pre><code>variable \"project_name\" {\n  description = \"Projekti nimi\"\n  type        = string\n  default     = \"terraform-basics-homework\"\n\n  validation {\n    condition     = length(var.project_name) &gt; 3\n    error_message = \"Projekti nimi peab olema v\u00e4hemalt 4 t\u00e4hem\u00e4rki pikk.\"\n  }\n}\n\nvariable \"environment\" {\n  description = \"Keskkonna nimi\"\n  type        = string\n  default     = \"development\"\n\n  validation {\n    condition     = contains([\"development\", \"staging\", \"production\"], var.environment)\n    error_message = \"Keskkond peab olema: development, staging v\u00f5i production.\"\n  }\n}\n\nvariable \"file_count\" {\n  description = \"Loodavate n\u00e4idisfailide arv\"\n  type        = number\n  default     = 5\n\n  validation {\n    condition     = var.file_count &gt; 0 &amp;&amp; var.file_count &lt;= 20\n    error_message = \"Failide arv peab olema vahemikus 1-20.\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/homework/#samm-4-outputstf-fail","title":"Samm 4: outputs.tf fail","text":"<pre><code>output \"project_directory\" {\n  description = \"Projekti kausta tee\"\n  value       = local_directory.project_root.path\n}\n\noutput \"project_structure\" {\n  description = \"Projekti struktuur\"\n  value = {\n    root_dir    = local_directory.project_root.path\n    config_dir  = local_directory.config.path\n    scripts_dir = local_directory.scripts.path\n    docs_dir    = local_directory.docs.path\n  }\n}\n\noutput \"created_files\" {\n  description = \"K\u00f5ik loodud failid\"\n  value = {\n    config_files = [\n      local_file.project_config.filename,\n      local_file.app_config.filename\n    ]\n    script_files = [\n      local_file.startup_script.filename,\n      local_file.cleanup_script.filename\n    ]\n    doc_files = local_file.example_files[*].filename\n    readme_file = local_file.readme.filename\n  }\n}\n\noutput \"project_summary\" {\n  description = \"Projekti kokkuv\u00f5te\"\n  value = &lt;&lt;-EOF\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n    Terraform Projekt: ${var.project_name}\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n    Keskkond: ${var.environment}\n    Failide arv: ${length(local_file.example_files) + 4}\n    Loodud: ${timestamp()}\n    Kaust: ${local_directory.project_root.path}\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n  EOF\n}\n\noutput \"next_steps\" {\n  description = \"J\u00e4rgmised sammud\"\n  value = [\n    \"1. K\u00e4ivitage: cd ${local_directory.project_root.path}\",\n    \"2. Vaadake struktuuri: tree . (v\u00f5i ls -la)\",\n    \"3. K\u00e4ivitage startup skript: ./scripts/startup.sh\",\n    \"4. Vaadake konfiguratsioonifaile: cat config/*.json\",\n    \"5. Muutke terraform.tfvars ja rakendage uuesti\"\n  ]\n}\n</code></pre>"},{"location":"terraform_basics/homework/#samm-5-terraformtfvars-fail","title":"Samm 5: terraform.tfvars fail","text":"<pre><code>project_name = \"minu-terraform-projekt\"\nenvironment  = \"development\"\nfile_count   = 3\n</code></pre>"},{"location":"terraform_basics/homework/#ulesanne-2-projekti-kaivitamine-15-min","title":"\ud83d\udccb \u00dclesanne 2: Projekti k\u00e4ivitamine (15 min)","text":""},{"location":"terraform_basics/homework/#samm-1-terraformi-initsialiseerimine","title":"Samm 1: Terraform'i initsialiseerimine","text":"<pre><code># Navigate to project directory\ncd terraform-basics-homework\n\n# Initialize Terraform\nterraform init\n</code></pre>"},{"location":"terraform_basics/homework/#samm-2-planeerimine","title":"Samm 2: Planeerimine","text":"<pre><code># See what will be created\nterraform plan\n</code></pre>"},{"location":"terraform_basics/homework/#samm-3-projekti-loomine","title":"Samm 3: Projekti loomine","text":"<pre><code># Create the infrastructure\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework/#samm-4-tulemuste-vaatamine","title":"Samm 4: Tulemuste vaatamine","text":"<pre><code># Check outputs\nterraform output\n\n# Check created files\nls -la minu-terraform-projekt/\ntree minu-terraform-projekt/  # kui tree on installitud\n</code></pre>"},{"location":"terraform_basics/homework/#ulesanne-3-eksperimenteerimine-30-min","title":"\ud83d\udccb \u00dclesanne 3: Eksperimenteerimine (30 min)","text":""},{"location":"terraform_basics/homework/#samm-1-muutujate-muutmine","title":"Samm 1: Muutujate muutmine","text":"<p>Muutke <code>terraform.tfvars</code> faili:</p> <pre><code>project_name = \"minu-uus-projekt\"\nenvironment  = \"production\"\nfile_count   = 10\n</code></pre> <p>Rakendage muudatused:</p> <pre><code>terraform plan\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework/#samm-2-uue-ressursi-lisamine","title":"Samm 2: Uue ressursi lisamine","text":"<p>Lisage <code>main.tf</code> faili:</p> <pre><code># Loo konfiguratsioonifail iga keskkonna jaoks\nresource \"local_file\" \"env_config\" {\n  content = jsonencode({\n    environment = var.environment\n    settings = {\n      debug_mode    = var.environment != \"production\"\n      log_level     = var.environment == \"production\" ? \"error\" : \"debug\"\n      feature_flags = {\n        new_ui      = var.environment == \"development\"\n        analytics   = var.environment != \"development\"\n        monitoring  = var.environment == \"production\"\n      }\n    }\n  })\n  filename = \"${local_directory.config.path}/environment.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework/#samm-3-outputide-uuendamine","title":"Samm 3: Output'ide uuendamine","text":"<p>Lisage <code>outputs.tf</code> faili:</p> <pre><code>output \"environment_config\" {\n  description = \"Keskkonna konfiguratsioon\"\n  value       = local_file.env_config.filename\n}\n</code></pre>"},{"location":"terraform_basics/homework/#samm-4-testimine","title":"Samm 4: Testimine","text":"<pre><code>terraform apply\n./minu-uus-projekt/scripts/startup.sh\ncat minu-uus-projekt/config/environment.json\n</code></pre>"},{"location":"terraform_basics/homework/#ulesanne-4-puhastamine-ja-dokumenteerimine-10-min","title":"\ud83d\udccb \u00dclesanne 4: Puhastamine ja dokumenteerimine (10 min)","text":""},{"location":"terraform_basics/homework/#samm-1-infrastruktuuri-kustutamine","title":"Samm 1: Infrastruktuuri kustutamine","text":"<pre><code>terraform destroy\n</code></pre>"},{"location":"terraform_basics/homework/#samm-2-kokkuvotte-kirjutamine","title":"Samm 2: Kokkuv\u00f5tte kirjutamine","text":"<p>Vastake k\u00fcsimustele:</p> <ol> <li>Mis oli k\u00f5ige lihtsam Terraform'i juures?</li> <li>Mis oli k\u00f5ige keerulisem?</li> <li>Kuidas saaks seda projekti parandada?</li> <li>Mida \u00f5ppisite Infrastructure as Code kohta?</li> </ol>"},{"location":"terraform_basics/homework/#boonusulesanded-valikuline","title":"\ud83c\udfaf Boonus\u00fclesanded (valikuline)","text":""},{"location":"terraform_basics/homework/#1-tingimused-ja-tsuklid","title":"1. Tingimused ja ts\u00fcklid","text":"<pre><code># Loo backup failid ainult production keskkonnas\nresource \"local_file\" \"backup_script\" {\n  count = var.environment == \"production\" ? 1 : 0\n\n  content = \"#!/bin/bash\\necho 'Backup started...\\n'\"\n  filename = \"${local_directory.scripts.path}/backup.sh\"\n  file_permission = \"0755\"\n}\n\n# Loo erinevad konfiguratsioonie failure iga faili jaoks\nresource \"local_file\" \"app_configs\" {\n  for_each = toset([\"api\", \"web\", \"worker\"])\n\n  content = jsonencode({\n    service = each.key\n    port    = each.key == \"api\" ? 3000 : each.key == \"web\" ? 8080 : 9000\n    env     = var.environment\n  })\n  filename = \"${local_directory.config.path}/${each.key}.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework/#2-locals-ja-funktsioonid","title":"2. Locals ja funktsioonid","text":"<pre><code>locals {\n  project_prefix = \"${var.project_name}-${var.environment}\"\n  timestamp_formatted = formatdate(\"YYYY-MM-DD-hhmm\", timestamp())\n\n  common_tags = {\n    Project     = var.project_name\n    Environment = var.environment\n    ManagedBy   = \"Terraform\"\n    CreatedAt   = local.timestamp_formatted\n  }\n}\n\nresource \"local_file\" \"metadata\" {\n  content = jsonencode(local.common_tags)\n  filename = \"${local_directory.config.path}/metadata.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework/#3-moodulite-struktuuri-ettevalmistamine","title":"3. Moodulite struktuuri ettevalmistamine","text":"<pre><code>mkdir -p modules/file-generator\n# Liigutage osa koodist moodulitesse\n</code></pre>"},{"location":"terraform_basics/homework/#kokkuvote","title":"\ud83d\udcda Kokkuv\u00f5te","text":"<p>T\u00e4na \u00f5ppisite: - Terraform'i p\u00f5hit\u00f5desid - kuidas kirjutada HCL koodi - Local provider'i - kuidas hallata kohalikke faile - Variables ja outputs - kuidas teha koodi paindlikuks - Infrastructure as Code - kuidas kood saab infrastruktuuri kirjeldada</p> <p>J\u00e4rgmised sammud: - \u00d5ppige rohkem provider'ite kohta - Proovige kohalikke provider'eid (local, null, random) - Uurige Terraform module'eid - Rakendage real-world projektides</p> <p>K\u00fcsimused? \ud83e\udd14</p>"},{"location":"terraform_basics/homework/#failide-naited","title":"\ud83d\udccb Failide n\u00e4ited","text":""},{"location":"terraform_basics/homework/#oodatav-terraform-output","title":"Oodatav terraform output:","text":"<pre><code>project_directory = \"./minu-terraform-projekt\"\nproject_structure = {\n  \"config_dir\" = \"./minu-terraform-projekt/config\"\n  \"docs_dir\" = \"./minu-terraform-projekt/docs\"\n  \"root_dir\" = \"./minu-terraform-projekt\"\n  \"scripts_dir\" = \"./minu-terraform-projekt/scripts\"\n}\nproject_summary = &lt;&lt;EOT\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nTerraform Projekt: minu-terraform-projekt\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nKeskkond: development\nFailide arv: 7\nLoodud: 2024-01-15T10:30:45Z\nKaust: ./minu-terraform-projekt\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nEOT\n</code></pre>"},{"location":"terraform_basics/homework/#oodatav-failide-struktuur","title":"Oodatav failide struktuur:","text":"<pre><code>minu-terraform-projekt/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 config/\n\u2502   \u251c\u2500\u2500 project.json\n\u2502   \u2514\u2500\u2500 app.yaml\n\u251c\u2500\u2500 scripts/\n\u2502   \u251c\u2500\u2500 startup.sh\n\u2502   \u2514\u2500\u2500 cleanup.sh\n\u2514\u2500\u2500 docs/\n    \u251c\u2500\u2500 example_1_abc123.txt\n    \u251c\u2500\u2500 example_2_abc123.txt\n    \u2514\u2500\u2500 example_3_abc123.txt\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/","title":"\ud83d\udcdd Terraform Basics Kodut\u00f6\u00f6: Kohalik Infrastruktuur","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Terraform'i praktiline kasutamine ja Infrastructure as Code m\u00f5istmine Aeg: 2-3 tundi praktilist t\u00f6\u00f6d</p> <p>Fookus on Terraform'i ja Infrastructure as Code'i \u00f5ppimisel kohalikus keskkonnas!</p>"},{"location":"terraform_basics/homework_aws_backup/#projekt-kohalik-infrastruktuur-terraformiga","title":"\ud83c\udfaf Projekt: Kohalik Infrastruktuur Terraform'iga","text":""},{"location":"terraform_basics/homework_aws_backup/#mis-on-see-projekt","title":"Mis on see projekt?","text":"<p>Looge kohalik infrastruktuur Terraform'i abil. See on nagu \"digitaalse maja ehitamine\" kohalikus arvutis - kirjutate \u00fcles, mida soovite, ja Terraform teeb selle teie eest.</p>"},{"location":"terraform_basics/homework_aws_backup/#mida-te-ehitate","title":"Mida te ehitate?","text":"<p>\ud83d\udcbb Kohalik Infrastruktuur - Failid ja kaustad - projektifailide struktuur - Konfiguratsioonid - JSON ja YAML failid - Skriptid - automatiseerimise skriptid</p>"},{"location":"terraform_basics/homework_aws_backup/#miks-see-on-kasulik","title":"Miks see on kasulik?","text":"<ul> <li>\u00d5pite Terraform'i - praktiline kogemus</li> <li>Lihtne alustada - t\u00f6\u00f6tab kohalikus arvutis</li> <li>Reaalne projekt - failide ja konfiguratsiooni haldamine</li> <li>Taaskasutatav - sama kood t\u00f6\u00f6tab erinevates arvutites</li> </ul>"},{"location":"terraform_basics/homework_aws_backup/#miks-see-arhitektuur-on-hea-oppimiseks","title":"Miks see arhitektuur on hea \u00f5ppimiseks?","text":"<p>\ud83c\udfaf Lihtne ja selge: - Kohalik - ei vaja internetti ega pilve - Praktiline - \u00f5pite Terraform'i p\u00f5hit\u00f5desid - Skaleeritav - saate hiljem liikuda pilve</p> <p>\ud83d\udd17 Infrastruktuuri komponendid: <pre><code>Kohalik Infrastruktuur:\n\u251c\u2500\u2500 Projektifailid\n\u251c\u2500\u2500 Konfiguratsioonid (JSON/YAML)\n\u2514\u2500\u2500 Skriptid ja dokumentatsioon\n</code></pre></p> <p>\ud83d\udcda Mida \u00f5pite: - Kuidas kirjutada Terraform koodi - Kuidas kasutada variable'id ja outputs - Kuidas seadistada kohalikke ressursse - Kuidas debugida probleeme</p>"},{"location":"terraform_basics/homework_aws_backup/#arhitektuuri-diagramm","title":"Arhitektuuri diagramm","text":"<pre><code>graph TB\n    subgraph \"\ud83d\udcbb Kohalik Infrastruktuur\"\n        User[\ud83d\udc64 Kasutaja]\n        Files[\ud83d\udcc1 Failid&lt;br/&gt;Local Files]\n        Config[\u2699\ufe0f Konfiguratsioonid&lt;br/&gt;JSON/YAML]\n        Scripts[\ud83d\udcdc Skriptid&lt;br/&gt;Bash/Python]\n    end\n\n    User --&gt; Files\n    User --&gt; Config\n    User --&gt; Scripts\n\n    subgraph \"\ud83d\udd27 Terraform\"\n        Code[\ud83d\udcdd Terraform Kood]\n        State[\ud83d\uddc4\ufe0f State Fail]\n    end\n\n    Code --&gt; Files\n    Code --&gt; Config\n    Code --&gt; Scripts</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-1-projekti-struktuuri-loomine-15-min","title":"\ud83d\udccb \u00dclesanne 1: Projekti struktuuri loomine (15 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-projekti-kataloogi-struktuur","title":"Samm 1: Projekti kataloogi struktuur","text":"<p>Looge lihtne kataloogi struktuur:</p> <pre><code>terraform-basics-homework/\n\u251c\u2500\u2500 main.tf          # P\u00f5hiline Terraform fail\n\u251c\u2500\u2500 variables.tf     # Muutujad\n\u251c\u2500\u2500 outputs.tf       # V\u00e4ljundid\n\u251c\u2500\u2500 terraform.tfvars # Muutujate v\u00e4\u00e4rtused\n\u2514\u2500\u2500 README.md        # Projekti kirjeldus\n</code></pre> <p>V\u00f5i kasutage valmis n\u00e4idet:</p> <pre><code># Kopeerige valmis struktuur\ncp -r teacher_repo/terraform-basics-starter/templates/* .\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-providers-konfiguratsioon","title":"Samm 2: Providers konfiguratsioon","text":"<p>Looge <code>providers.tf</code>:</p> <pre><code># Configure Terraform\nterraform {\n  required_version = \"&gt;= 1.0\"\n\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n\n# Local provider - t\u00f6\u00f6tab kohalikus failis\u00fcsteemis\n# Ei vaja mingeid lisaseadeid\n</code></pre> <p>M\u00e4rkus state haldamise kohta:</p> <p>Kohalikus keskkonnas kasutame <code>terraform.tfstate</code> faili, mis luuakse automaatselt. See on OK \u00f5ppimiseks, aga real-world projektides kasutage remote state'd.</p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-2-lihtne-terraform-projekt-45-min","title":"\ud83d\udccb \u00dclesanne 2: Lihtne Terraform projekt (45 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-provider-konfiguratsioon","title":"Samm 1: Provider konfiguratsioon","text":"<p>Alustame <code>main.tf</code> faili loomisega. See fail \u00fctleb Terraform'ile, milliseid teenuseid kasutame:</p> <pre><code>terraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n\n# Local provider - t\u00f6\u00f6tab kohalikus failis\u00fcsteemis\n# Random provider - genereerib juhuslikke v\u00e4\u00e4rtusi\n</code></pre> <p>Miks see vajalik on? - <code>terraform</code> blokk \u00fctleb Terraform'ile: \"Hei, ma tahan kasutada kohalikke teenuseid\" - <code>local</code> provider t\u00f6\u00f6tab failis\u00fcsteemiga - <code>random</code> provider aitab luua unikaalseid nimesid</p> <p>Mida see teeb? - Terraform teab n\u00fc\u00fcd, et peab kasutama kohalikke ressursse - K\u00f5ik failid luuakse kohalikus arvutis - Ei vaja internetti ega pilve</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-kataloogi-loomine","title":"Samm 2: Kataloogi loomine","text":"<p>N\u00fc\u00fcd loome projekti kataloogi. M\u00f5tle seda nagu \"maja\" failis\u00fcsteemis:</p> <pre><code># Projekti kaust\nresource \"local_directory\" \"project_root\" {\n  path = \"${path.module}/${var.project_name}\"\n}\n\n# Alamkaustad\nresource \"local_directory\" \"config\" {\n  path = \"${local_directory.project_root.path}/config\"\n}\n\nresource \"local_directory\" \"scripts\" {\n  path = \"${local_directory.project_root.path}/scripts\"\n}\n</code></pre> <p>Miks see vajalik on? - Ilma kaustateta ei saa organiseerida faile - Kaustad on nagu \"toad majas\" - iga t\u00fc\u00fcp faile elab omas kohas - <code>path.module</code> n\u00e4itab, kus praegune Terraform fail asub</p> <p>Mida see teeb? - Loob projekti p\u00f5hikausta - Loob alamkaustad konfiguratsioonide ja skriptide jaoks - K\u00f5ik j\u00e4rgmised failid saab organiseeritult paigutada</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-konfiguratsioonifailide-loomine","title":"Samm 3: Konfiguratsioonifailide loomine","text":"<p>N\u00fc\u00fcd loome konfiguratsioonifaile. M\u00f5tle seda nagu seadete failid:</p> <pre><code># Projekti konfiguratsioon JSON vormingus\nresource \"local_file\" \"project_config\" {\n  content = jsonencode({\n    project_name = var.project_name\n    environment  = var.environment\n    version      = \"1.0.0\"\n    created_at   = timestamp()\n    author       = \"Terraform Student\"\n  })\n  filename = \"${local_directory.config.path}/project.json\"\n}\n</code></pre> <p>Miks see vajalik on? - Konfiguratsioonifailid hoiavad projekti seadeid - JSON formaat on masinloetav ja inimloetav - <code>jsonencode()</code> muudab Terraform objekti JSON stringiks</p> <p>Mida see teeb? - Loob JSON faili projekti konfiguratsiooniga - Sisaldab projekti nime, versiooni ja loomise aega - Fail salvestatakse config/ kausta</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-4-skriptifailide-loomine","title":"Samm 4: Skriptifailide loomine","text":"<p>N\u00fc\u00fcd loome skriptifaile. M\u00f5tle seda nagu automatiseerimise t\u00f6\u00f6riistad:</p> <pre><code># K\u00e4ivitamise skript\nresource \"local_file\" \"startup_script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"Tere tulemast ${var.project_name} projekti!\"\n    echo \"Keskkond: ${var.environment}\"\n    echo \"Versioon: 1.0.0\"\n    echo \"Kuup\u00e4ev: $(date)\"\n    echo \"Kaust: $(pwd)\"\n  EOF\n  filename = \"${local_directory.scripts.path}/startup.sh\"\n  file_permission = \"0755\"  # T\u00e4itmis\u00f5igus\n}\n</code></pre> <p>Miks see vajalik on? - Skriptid automatiseerivad korduvaid \u00fclesandeid - <code>file_permission = \"0755\"</code> annab t\u00e4itmis\u00f5iguse - <code>&lt;&lt;-EOF</code> v\u00f5imaldab kirjutada mitmerealine tekst</p> <p>Mida see teeb? - Loob Bash skripti, mis kuvab projekti infot - Annab skriptile t\u00e4itmis\u00f5igused - Kasutab muutujaid projekti nime ja keskkonna jaoks</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-5-route-table","title":"Samm 5: Route Table","text":"<p>N\u00fc\u00fcd loome marsruutimistabeli. See \u00fctleb, kuidas liiklus liigub:</p> <pre><code># Route Table - marsruutimistabel\nresource \"aws_route_table\" \"public\" {\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block = \"0.0.0.0/0\"  # K\u00f5ik liiklus\n    gateway_id = aws_internet_gateway.main.id  # L\u00e4heb internetti\n  }\n\n  tags = {\n    Name = \"${var.project_name}-public-rt\"\n  }\n}\n\n# Route Table Association - seob marsruutimistabeli subnet'iga\nresource \"aws_route_table_association\" \"public\" {\n  subnet_id      = aws_subnet.public.id\n  route_table_id = aws_route_table.public.id\n}\n</code></pre> <p>Miks see vajalik on? - Ilma marsruutimistabelita ei tea serverid, kuhu liiklus saata - <code>0.0.0.0/0</code> t\u00e4hendab \"k\u00f5ik liiklus\" - <code>association</code> seob selle reegli subnet'iga</p> <p>Mida see teeb? - <code>route</code> \u00fctleb: \"K\u00f5ik liiklus (0.0.0.0/0) l\u00e4heb internetti\" - <code>association</code> \u00fctleb: \"See reegel kehtib k\u00f5igile serveritele selles subnet'is\" - N\u00fc\u00fcd saavad serverid internetti p\u00e4\u00e4seda</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-6-security-group","title":"Samm 6: Security Group","text":"<p>N\u00fc\u00fcd loome Security Group. M\u00f5tle seda nagu tulem\u00fc\u00fcr:</p> <pre><code># Security Group - tulem\u00fc\u00fcr reeglid\nresource \"aws_security_group\" \"web\" {\n  name        = \"${var.project_name}-web-sg\"\n  description = \"Security group for web server\"\n  vpc_id      = aws_vpc.main.id\n\n  # Lubame HTTP liiklust (port 80)\n  ingress {\n    description = \"HTTP\"\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]  # K\u00f5ikidele\n  }\n\n  # Lubame SSH liiklust (port 22)\n  ingress {\n    description = \"SSH\"\n    from_port   = 22\n    to_port     = 22\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]  # K\u00f5ikidele\n  }\n\n  # Lubame k\u00f5iki v\u00e4ljuvat liiklust\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  tags = {\n    Name = \"${var.project_name}-web-sg\"\n  }\n}\n</code></pre> <p>Miks see vajalik on? - Ilma Security Group'ita on serverid avatud k\u00f5igile - See on nagu \"tulem\u00fc\u00fcr\" - kontrollib, kes p\u00e4\u00e4seb serverisse - Port 80 = veebilehed (HTTP) - Port 22 = serveri haldamine (SSH)</p> <p>Mida see teeb? - <code>ingress</code> = sissetulev liiklus (kellele lubame p\u00e4\u00e4seda) - <code>egress</code> = v\u00e4ljuv liiklus (kuhu lubame minna) - Port 80 = lubame k\u00f5igile vaadata veebilehte - Port 22 = lubame k\u00f5igile \u00fchenduda serveriga (SSH)</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-7-ec2-instance","title":"Samm 7: EC2 Instance","text":"<p>N\u00fc\u00fcd loome web serveri. See on nagu arvuti pilves:</p> <pre><code># EC2 Instance - web server\nresource \"aws_instance\" \"web\" {\n  ami           = data.aws_ami.ubuntu.id\n  instance_type = var.instance_type\n\n  subnet_id                   = aws_subnet.public.id\n  vpc_security_group_ids      = [aws_security_group.web.id]\n  associate_public_ip_address = true\n\n  # Skript, mis k\u00e4ivitub serveri k\u00e4ivitamisel\n  user_data = &lt;&lt;-EOF\n              #!/bin/bash\n              apt-get update\n              apt-get install -y nginx\n              systemctl start nginx\n              systemctl enable nginx\n              EOF\n\n  tags = {\n    Name = \"${var.project_name}-web-server\"\n  }\n}\n</code></pre> <p>Miks see vajalik on? - See on meie web server - siin jookseb veebileht - <code>user_data</code> installib automaatselt nginx'i - <code>associate_public_ip_address = true</code> annab avaliku IP</p> <p>Mida see teeb? - <code>ami</code> = operatsioonis\u00fcsteemi pilt (Ubuntu) - <code>instance_type</code> = serveri t\u00fc\u00fcp (t3.micro = v\u00e4ike ja odav) - <code>user_data</code> = skript, mis installib nginx'i serveri k\u00e4ivitamisel - <code>associate_public_ip_address = true</code> = annab avaliku IP, et saaksime serverile p\u00e4\u00e4seda</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-8-data-source","title":"Samm 8: Data Source","text":"<p>Viimane samm - leiame Ubuntu AMI:</p> <pre><code># Data source - leiab uusima Ubuntu AMI\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n  owners      = [\"099720109477\"]  # Canonical (Ubuntu looja)\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"]\n  }\n}\n</code></pre> <p>Miks see vajalik on? - <code>data</code> blokk ei loo uut ressurssi, vaid otsib olemasolevat - Meil on vaja Ubuntu AMI't serveri jaoks - <code>most_recent = true</code> v\u00f5tab uusima versiooni</p> <p>Mida see teeb? - <code>data</code> blokk otsib olemasolevat ressurssi (ei loo uut) - <code>most_recent = true</code> = v\u00f5tab uusima versiooni - <code>filter</code> = otsib ainult Ubuntu 20.04 AMI'sid - <code>owners</code> = ainult Canonical (Ubuntu looja) AMI'd</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-vpc-loomine","title":"Samm 2: VPC loomine","text":"<p>Lisa VPC (Virtual Private Cloud) - see on nagu privaatne v\u00f5rk AWS's:</p> <pre><code># VPC - privaatne v\u00f5rk AWS's\nresource \"aws_vpc\" \"main\" {\n  cidr_block = \"10.0.0.0/16\"\n\n  tags = {\n    Name = \"${var.project_name}-vpc\"\n  }\n}\n</code></pre> <p>Mida see teeb? - Loob privaatse v\u00f5rgu AWS's - <code>cidr_block</code> m\u00e4\u00e4rab v\u00f5rgu suuruse (10.0.0.0/16 = 65,536 IP aadressi) - <code>tags</code> aitab identifitseerida ressurssi</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-subnet-loomine","title":"Samm 3: Subnet loomine","text":"<p>Lisa subnet - see on nagu alamv\u00f5rk VPC sees:</p> <pre><code># Public Subnet - alamv\u00f5rk, mis on avalik internetile\nresource \"aws_subnet\" \"public\" {\n  vpc_id                  = aws_vpc.main.id\n  cidr_block              = \"10.0.1.0/24\"\n  availability_zone       = \"${var.aws_region}a\"\n  map_public_ip_on_launch = true\n\n  tags = {\n    Name = \"${var.project_name}-public-subnet\"\n  }\n}\n</code></pre> <p>Mida see teeb? - Loob alamv\u00f5rgu VPC sees - <code>map_public_ip_on_launch = true</code> annab serveritele avaliku IP - <code>availability_zone</code> m\u00e4\u00e4rab, millises AWS tsoonis asub</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-4-internet-gateway","title":"Samm 4: Internet Gateway","text":"<p>Lisa Internet Gateway - see \u00fchendab v\u00f5rgu internetti:</p> <pre><code># Internet Gateway - \u00fchendab v\u00f5rgu internetti\nresource \"aws_internet_gateway\" \"main\" {\n  vpc_id = aws_vpc.main.id\n\n  tags = {\n    Name = \"${var.project_name}-igw\"\n  }\n}\n</code></pre> <p>Mida see teeb? - Loob \"v\u00e4rava\" internetti - Ilma selleta ei saa serverid internetti p\u00e4\u00e4seda</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-5-route-table_1","title":"Samm 5: Route Table","text":"<p>Lisa marsruutimistabel - see \u00fctleb, kuidas liiklus liigub:</p> <pre><code># Route Table - marsruutimistabel\nresource \"aws_route_table\" \"public\" {\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block = \"0.0.0.0/0\"  # K\u00f5ik liiklus\n    gateway_id = aws_internet_gateway.main.id  # L\u00e4heb internetti\n  }\n\n  tags = {\n    Name = \"${var.project_name}-public-rt\"\n  }\n}\n\n# Route Table Association - seob marsruutimistabeli subnet'iga\nresource \"aws_route_table_association\" \"public\" {\n  subnet_id      = aws_subnet.public.id\n  route_table_id = aws_route_table.public.id\n}\n</code></pre> <p>Mida see teeb? - <code>route</code> \u00fctleb: \"k\u00f5ik liiklus (0.0.0.0/0) l\u00e4heb internetti\" - <code>association</code> seob selle reegli subnet'iga</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-6-security-group_1","title":"Samm 6: Security Group","text":"<p>Lisa Security Group - see on nagu tulem\u00fc\u00fcr:</p> <pre><code># Security Group - tulem\u00fc\u00fcr reeglid\nresource \"aws_security_group\" \"web\" {\n  name        = \"${var.project_name}-web-sg\"\n  description = \"Security group for web server\"\n  vpc_id      = aws_vpc.main.id\n\n  # Lubame HTTP liiklust (port 80)\n  ingress {\n    description = \"HTTP\"\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]  # K\u00f5ikidele\n  }\n\n  # Lubame SSH liiklust (port 22)\n  ingress {\n    description = \"SSH\"\n    from_port   = 22\n    to_port     = 22\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]  # K\u00f5ikidele\n  }\n\n  # Lubame k\u00f5iki v\u00e4ljuvat liiklust\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  tags = {\n    Name = \"${var.project_name}-web-sg\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>ingress</code> = sissetulev liiklus (kellele lubame p\u00e4\u00e4seda) - <code>egress</code> = v\u00e4ljuv liiklus (kuhu lubame minna) - Port 80 = HTTP (veebilehed) - Port 22 = SSH (serveri haldamine)</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-7-ec2-instance_1","title":"Samm 7: EC2 Instance","text":"<p>Lisa web server:</p> <pre><code># EC2 Instance - web server\nresource \"aws_instance\" \"web\" {\n  ami           = data.aws_ami.ubuntu.id\n  instance_type = var.instance_type\n\n  subnet_id                   = aws_subnet.public.id\n  vpc_security_group_ids      = [aws_security_group.web.id]\n  associate_public_ip_address = true\n\n  # Skript, mis k\u00e4ivitub serveri k\u00e4ivitamisel\n  user_data = &lt;&lt;-EOF\n              #!/bin/bash\n              apt-get update\n              apt-get install -y nginx\n              systemctl start nginx\n              systemctl enable nginx\n              EOF\n\n  tags = {\n    Name = \"${var.project_name}-web-server\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>ami</code> = operatsioonis\u00fcsteemi pilt (Ubuntu) - <code>instance_type</code> = serveri t\u00fc\u00fcp (t3.micro = v\u00e4ike ja odav) - <code>user_data</code> = skript, mis installib nginx'i - <code>associate_public_ip_address = true</code> = annab avaliku IP</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-8-data-source_1","title":"Samm 8: Data Source","text":"<p>Lisa data source Ubuntu AMI jaoks:</p> <pre><code># Data source - leiab uusima Ubuntu AMI\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n  owners      = [\"099720109477\"]  # Canonical (Ubuntu looja)\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"]\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>data</code> blokk otsib olemasolevat ressurssi (ei loo uut) - <code>most_recent = true</code> = v\u00f5tab uusima versiooni - <code>filter</code> = otsib ainult Ubuntu 20.04 AMI'sid</p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-3-variables-ja-outputs-failid-15-min","title":"\ud83d\udccb \u00dclesanne 3: Variables ja outputs failid (15 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-variables-fail","title":"Samm 1: Variables fail","text":"<p>N\u00fc\u00fcd loome <code>variables.tf</code> faili. See fail m\u00e4\u00e4rab muutujad, mida saame muuta:</p> <pre><code>variable \"project_name\" {\n  description = \"Projekti nimi\"\n  type        = string\n  default     = \"terraform-basics-homework\"\n}\n\nvariable \"environment\" {\n  description = \"Keskkonna nimi\"\n  type        = string\n  default     = \"development\"\n\n  validation {\n    condition     = contains([\"development\", \"staging\", \"production\"], var.environment)\n    error_message = \"Keskkond peab olema: development, staging v\u00f5i production.\"\n  }\n}\n\nvariable \"file_count\" {\n  description = \"Loodavate n\u00e4idisfailide arv\"\n  type        = number\n  default     = 5\n\n  validation {\n    condition     = var.file_count &gt; 0 &amp;&amp; var.file_count &lt;= 20\n    error_message = \"Failide arv peab olema vahemikus 1-20.\"\n  }\n}\n</code></pre> <p>Miks see vajalik on? - <code>variables</code> v\u00f5imaldavad meil muuta v\u00e4\u00e4rtusi ilma koodi muutmata - <code>default</code> v\u00e4\u00e4rtused t\u00e4hendavad, et kui me ei m\u00e4\u00e4ra midagi, kasutatakse neid - <code>validation</code> kontrollib, et v\u00e4\u00e4rtused oleksid korrektsed</p> <p>Mida see teeb? - <code>project_name</code> = projekti nimi, mida kasutatakse failide nimetamisel - <code>environment</code> = keskkonna nimi (development, staging, production) - <code>file_count</code> = kui palju n\u00e4idisfaile luua (1-20 vahel)</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-outputs-fail","title":"Samm 2: Outputs fail","text":"<p>N\u00fc\u00fcd loome <code>outputs.tf</code> faili. See fail n\u00e4itab meile olulisi infosid p\u00e4rast k\u00e4ivitamist:</p> <pre><code>output \"project_directory\" {\n  description = \"Projekti kausta tee\"\n  value       = local_directory.project_root.path\n}\n\noutput \"config_files\" {\n  description = \"Loodud konfiguratsioonifailide nimekiri\"\n  value = [\n    local_file.project_config.filename,\n  ]\n}\n\noutput \"script_files\" {\n  description = \"Loodud skriptifailide nimekiri\"\n  value = [\n    local_file.startup_script.filename,\n  ]\n}\n\noutput \"project_summary\" {\n  description = \"Projekti kokkuv\u00f5te\"\n  value = \"Projekt '${var.project_name}' keskkond '${var.environment}' loodud ${timestamp()}\"\n}\n</code></pre> <p>Miks see vajalik on? - <code>outputs</code> n\u00e4itavad meile olulisi infosid p\u00e4rast <code>terraform apply</code> - Ilma nendeta peaksime k\u00e4sitsi failis\u00fcsteemist otsima - <code>project_summary</code> annab meile kohe \u00fclevaate projektist</p> <p>Mida see teeb? - <code>project_directory</code> = Projekti kausta asukoht - <code>config_files</code> = K\u00f5ik loodud konfiguratsioonifailid - <code>script_files</code> = K\u00f5ik loodud skriptifailid - <code>project_summary</code> = Projekti kokkuv\u00f5tte string</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-terraformtfvars-fail","title":"Samm 3: Terraform.tfvars fail","text":"<p>N\u00fc\u00fcd loome <code>terraform.tfvars</code> faili. See fail m\u00e4\u00e4rab muutujate v\u00e4\u00e4rtused:</p> <pre><code>aws_region   = \"us-east-1\"\nproject_name = \"terraform-basics-homework\"\ninstance_type = \"t3.micro\"\n</code></pre> <p>Miks see vajalik on? - <code>terraform.tfvars</code> fail m\u00e4\u00e4rab muutujate v\u00e4\u00e4rtused - Saame muuta v\u00e4\u00e4rtusi ilma koodi muutmata - Kui tahame muuta regiooni, muudame ainult <code>aws_region</code> v\u00e4\u00e4rtust</p> <p>Mida see teeb? - <code>aws_region = \"us-east-1\"</code> = t\u00f6\u00f6tame US East regioonis - <code>project_name = \"terraform-basics-homework\"</code> = projekti nimi - <code>instance_type = \"t3.micro\"</code> = kasutame v\u00e4ikest ja odavat serverit</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-4-projekti-kaivitamine","title":"Samm 4: Projekti k\u00e4ivitamine","text":"<p>N\u00fc\u00fcd k\u00e4ivitame projekti. J\u00e4rgige samme t\u00e4pselt:</p> <pre><code># Samm 1: Initsialiseerige Terraform\nterraform init\n</code></pre> <p>Mida see teeb? - Allalaadib AWS provider'i - Seadistab Terraform'i t\u00f6\u00f6tama</p> <pre><code># Samm 2: Vaadake, mida luuakse\nterraform plan\n</code></pre> <p>Mida see teeb? - N\u00e4itab, mida Terraform kavatseb luua - Kontrollige, et k\u00f5ik \u00f5ige on - Kui midagi valesti, parandage ja k\u00e4ivitage uuesti</p> <pre><code># Samm 3: Looge infrastruktuur\nterraform apply\n</code></pre> <p>Mida see teeb? - Loob k\u00f5ik ressursid AWS's - V\u00f5tab umbes 2-3 minutit - Kui k\u00fcsib kinnitust, kirjutage \"yes\"</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-5-testige-web-serverit","title":"Samm 5: Testige web serverit","text":"<p>P\u00e4rast <code>terraform apply</code> l\u00f5ppemist n\u00e4ete outputs:</p> <pre><code>web_server_public_ip = \"3.123.45.67\"\nweb_server_url = \"http://3.123.45.67\"\n</code></pre> <p>Avage brauser ja minge aadressile: <pre><code>http://[web_server_public_ip]\n</code></pre></p> <p>Mida peaksite n\u00e4gema? - Nginx tervitusleht: \"Welcome to nginx!\" - See t\u00e4hendab, et k\u00f5ik t\u00f6\u00f6tab \u00f5igesti!</p> <p>Miks see t\u00f6\u00f6tab? - Server on k\u00e4ivitatud Ubuntu'ga - Nginx on automaatselt installitud (<code>user_data</code> skript) - Security Group lubab HTTP liiklust (port 80) - Avalik IP v\u00f5imaldab meil serverile p\u00e4\u00e4seda   password = var.db_password</p> <p>vpc_security_group_ids = var.security_group_ids   db_subnet_group_name   = aws_db_subnet_group.main.name</p> <p>skip_final_snapshot = true   deletion_protection = var.environment == \"production\" ? true : false</p> <p>tags = {     Name = \"\\({var.project_name}-\\)-db\"   } } <pre><code>### Samm 3: Database module outputs\n\n**Looge `modules/database/outputs.tf`:**\n\n```hcl\noutput \"db_instance_id\" {\n  description = \"ID of the RDS instance\"\n  value       = aws_db_instance.main.id\n}\n\noutput \"db_endpoint\" {\n  description = \"Endpoint of the RDS instance\"\n  value       = aws_db_instance.main.endpoint\n}\n\noutput \"db_port\" {\n  description = \"Port of the RDS instance\"\n  value       = aws_db_instance.main.port\n}\n</code></pre></p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-4-aws-konsooli-uurimine-30-min","title":"\ud83d\udccb \u00dclesanne 4: AWS konsooli uurimine (30 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-aws-konsooli-avamine","title":"Samm 1: AWS konsooli avamine","text":"<p>Avage AWS konsool ja vaadake, mida Terraform on loonud:</p> <ol> <li>Minge AWS konsooli: https://console.aws.amazon.com</li> <li>Valige regioon: Vaadake, kas on valitud \u00f5ige regioon (us-east-1)</li> <li>Vaadake EC2 teenust: Minge EC2 \u2192 Instances</li> </ol> <p>Mida peaksite n\u00e4gema? - \u00dcks EC2 instance nimega \"terraform-basics-homework-web-server\" - Instance state peaks olema \"running\" - Public IP peaks olema sama, mis Terraform outputs'is</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-vpc-uurimine","title":"Samm 2: VPC uurimine","text":"<p>Minge VPC teenusse ja vaadake v\u00f5rku:</p> <ol> <li>Minge VPC teenusse: VPC \u2192 Your VPCs</li> <li>Vaadake VPC't: Peaksite n\u00e4gema VPC't nimega \"terraform-basics-homework-vpc\"</li> <li>Vaadake subnets: Minge Subnets ja vaadake subnet'i</li> </ol> <p>Mida peaksite n\u00e4gema? - VPC CIDR: 10.0.0.0/16 - Subnet CIDR: 10.0.1.0/24 - Subnet on \"public\" (map public IP = yes)</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-security-groups-uurimine","title":"Samm 3: Security Groups uurimine","text":"<p>Minge Security Groups ja vaadake tulem\u00fc\u00fcri reegleid:</p> <ol> <li>Minge Security Groups: VPC \u2192 Security Groups</li> <li>Vaadake web security group'i: Nimi peaks olema \"terraform-basics-homework-web-sg\"</li> </ol> <p>Mida peaksite n\u00e4gema? - Inbound rules: Port 80 (HTTP) ja Port 22 (SSH) - Outbound rules: All traffic (0.0.0.0/0)</p> <p>Miks see oluline on? - Security Groups on nagu tulem\u00fc\u00fcr - Need kontrollivad, kes p\u00e4\u00e4seb serverisse - Ilma nendeta ei saaks veebilehte vaadata</p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-5-eksperimenteerimine-ja-muutmine-45-min","title":"\ud83d\udccb \u00dclesanne 5: Eksperimenteerimine ja muutmine (45 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-regiooni-muutmine","title":"Samm 1: Regiooni muutmine","text":"<p>Muutke AWS regiooni ja vaadake, mis juhtub:</p> <ol> <li> <p>Muutke <code>terraform.tfvars</code> faili: <pre><code>aws_region   = \"eu-west-1\"  # Muutke us-east-1 asemel\nproject_name = \"terraform-basics-homework\"\ninstance_type = \"t3.micro\"\n</code></pre></p> </li> <li> <p>K\u00e4ivitage uuesti: <pre><code>terraform plan\nterraform apply\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Terraform \u00fctleb: \"aws_vpc.main: Destroying\" ja \"aws_vpc.main: Creating\" - K\u00f5ik ressursid luuakse uues regioonis - Uus IP aadress</p> <p>Miks see juhtub? - AWS regioonid on erinevad andmekeskused - Ressursid ei saa liikuda regioonide vahel - Terraform kustutab vanad ja loob uued</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-instance-tuubi-muutmine","title":"Samm 2: Instance t\u00fc\u00fcbi muutmine","text":"<p>Muutke serveri t\u00fc\u00fcpi ja vaadake erinevust:</p> <ol> <li> <p>Muutke <code>terraform.tfvars</code> faili: <pre><code>aws_region   = \"eu-west-1\"\nproject_name = \"terraform-basics-homework\"\ninstance_type = \"t3.small\"  # Muutke t3.micro asemel\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\nterraform apply\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Terraform \u00fctleb: \"aws_instance.web: Modifying\" - Server taask\u00e4ivitatakse - Veebileht j\u00e4\u00e4b samaks</p> <p>Miks see juhtub? - Instance t\u00fc\u00fcp m\u00e4\u00e4rab serveri v\u00f5imsuse - <code>t3.small</code> on v\u00f5imsam kui <code>t3.micro</code> - Server peab taask\u00e4ivituma, et muutused j\u00f5uaksid kohale</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-https-lisamine","title":"Samm 3: HTTPS lisamine","text":"<p>Lisage HTTPS tugi (port 443):</p> <ol> <li> <p>Muutke <code>main.tf</code> faili security group'i: <pre><code># Lisa see ingress reegel olemasoleva HTTP reegli juurde\ningress {\n  description = \"HTTPS\"\n  from_port   = 443\n  to_port     = 443\n  protocol    = \"tcp\"\n  cidr_blocks = [\"0.0.0.0/0\"]\n}\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\nterraform apply\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Terraform \u00fctleb: \"aws_security_group.web: Modifying\" - Security group muudetakse ilma serveri taask\u00e4ivitamata</p> <p>Miks see juhtub? - Security Groups on v\u00f5rgu tasemel - Server ei pea taask\u00e4ivituma - Muutused on kohe aktiivsed</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-4-custom-veebileht","title":"Samm 4: Custom veebileht","text":"<p>Lisage oma veebileht serverile:</p> <ol> <li> <p>Muutke <code>main.tf</code> faili user_data skripti: <pre><code>user_data = &lt;&lt;-EOF\n#!/bin/bash\napt-get update\napt-get install -y nginx\nsystemctl start nginx\nsystemctl enable nginx\n\n# Lisa custom veebileht\ncat &gt; /var/www/html/index.html &lt;&lt; 'HTML'\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Minu Terraform Projekt&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Tere! See on minu Terraform projekt&lt;/h1&gt;\n    &lt;p&gt;Server: $(hostname)&lt;/p&gt;\n    &lt;p&gt;Kuup\u00e4ev: $(date)&lt;/p&gt;\n    &lt;p&gt;Regioon: eu-west-1&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nHTML\nEOF\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\nterraform apply\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Terraform \u00fctleb: \"aws_instance.web: Modifying\" - Server taask\u00e4ivitatakse - Brauseris n\u00e4ete oma custom veebilehte</p> <p>Miks server taask\u00e4ivitatakse? - <code>user_data</code> muutub ainult serveri taask\u00e4ivitamisel - Terraform kustutab vana serveri ja loob uue</p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-6-probleemide-lahendamine-30-min","title":"\ud83d\udccb \u00dclesanne 6: Probleemide lahendamine (30 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-vale-regioon","title":"Samm 1: Vale regioon","text":"<p>Proovige kasutada vale regiooni ja vaadake, mis juhtub:</p> <ol> <li> <p>Muutke <code>terraform.tfvars</code> faili: <pre><code>aws_region   = \"invalid-region\"  # Vale regioon\nproject_name = \"terraform-basics-homework\"\ninstance_type = \"t3.micro\"\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Error: \"Invalid region\" - Terraform ei saa t\u00f6\u00f6tada</p> <p>Kuidas parandada? - Muutke regioon tagasi \u00f5igeks (nt eu-west-1) - K\u00e4ivitage <code>terraform plan</code> uuesti</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-vale-instance-tuup","title":"Samm 2: Vale instance t\u00fc\u00fcp","text":"<p>Proovige kasutada vale instance t\u00fc\u00fcpi:</p> <ol> <li> <p>Muutke <code>terraform.tfvars</code> faili: <pre><code>aws_region   = \"eu-west-1\"\nproject_name = \"terraform-basics-homework\"\ninstance_type = \"invalid-type\"  # Vale t\u00fc\u00fcp\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Error: \"Invalid instance type\" - Terraform ei saa luua serverit</p> <p>Kuidas parandada? - Muutke t\u00fc\u00fcp tagasi \u00f5igeks (nt t3.micro) - K\u00e4ivitage <code>terraform plan</code> uuesti</p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-vale-cidr-blokk","title":"Samm 3: Vale CIDR blokk","text":"<p>Proovige kasutada vale VPC CIDR blokki:</p> <ol> <li> <p>Muutke <code>main.tf</code> faili VPC CIDR: <pre><code>cidr_block = \"256.256.256.256/16\"  # Vale CIDR\n</code></pre></p> </li> <li> <p>K\u00e4ivitage: <pre><code>terraform plan\n</code></pre></p> </li> </ol> <p>Mida peaksite n\u00e4gema? - Error: \"Invalid CIDR block\" - Terraform ei saa luua VPC't</p> <p>Kuidas parandada? - Muutke CIDR tagasi \u00f5igeks (10.0.0.0/16) - K\u00e4ivitage <code>terraform plan</code> uuesti</p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-7-projekti-testimine-ja-puhastamine-15-min","title":"\ud83d\udccb \u00dclesanne 7: Projekti testimine ja puhastamine (15 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-testige-koiki-muudatusi","title":"Samm 1: Testige k\u00f5iki muudatusi","text":"<p>Testige, et k\u00f5ik t\u00f6\u00f6tab:</p> <ol> <li> <p>Avage brauser ja minge aadressile: <pre><code>http://[web_server_public_ip]\n</code></pre></p> </li> <li> <p>Vaadake, et n\u00e4ete oma custom veebilehte</p> </li> <li> <p>Kontrollige AWS konsoolis, et k\u00f5ik ressursid on olemas</p> </li> </ol>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-puhastage-ressursid","title":"Samm 2: Puhastage ressursid","text":"<p>Kustutage k\u00f5ik ressursid:</p> <pre><code>terraform destroy\n</code></pre> <p>Miks see oluline on? - AWS v\u00f5tab raha iga tunni eest - <code>t3.small</code> maksab umbes $0.02/tund - Kustutades s\u00e4\u00e4stame raha</p> <p>Mida peaksite n\u00e4gema? - \"Destroy complete!\" - k\u00f5ik ressursid on kustutatud - AWS konsoolis ei peaks olema \u00fchtegi ressurssi</p> <pre><code>transition {\n  days          = 30\n  storage_class = \"STANDARD_IA\"\n}\n\ntransition {\n  days          = 90\n  storage_class = \"GLACIER\"\n}\n\nexpiration {\n  days = 365\n}\n</code></pre> <p>} } ``` </p>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-storage-module-outputs","title":"Samm 3: Storage module outputs","text":"<p>Looge <code>modules/storage/outputs.tf</code>: <code>hcl output \"bucket_id\" {   description = \"ID of the S3 bucket\"   value       = aws_s3_bucket.main.id }  output \"bucket_arn\" {   description = \"ARN of the S3 bucket\"   value       = aws_s3_bucket.main.arn }  output \"bucket_name\" {   description = \"Name of the S3 bucket\"   value       = aws_s3_bucket.main.bucket }</code></p>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-6-environment-konfiguratsioonid-45-min","title":"\ud83d\udccb \u00dclesanne 6: Environment konfiguratsioonid (45 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-development-environment","title":"Samm 1: Development environment","text":"<p>Looge <code>environments/dev/main.tf</code>:</p> <pre><code># Import shared configuration\nterraform {\n  source = \"../../shared\"\n}\n\n# Import modules\nmodule \"networking\" {\n  source = \"../../modules/networking\"\n\n  environment         = \"dev\"\n  project_name        = \"terraform-basics-homework\"\n  vpc_cidr           = \"10.0.0.0/16\"\n  public_subnet_cidr = \"10.0.1.0/24\"\n  private_subnet_cidr = \"10.0.2.0/24\"\n  availability_zone  = \"us-west-2a\"\n}\n\nmodule \"compute\" {\n  source = \"../../modules/compute\"\n\n  environment        = \"dev\"\n  project_name       = \"terraform-basics-homework\"\n  subnet_id          = module.networking.public_subnet_id\n  security_group_ids = [module.networking.web_security_group_id]\n  instance_type      = \"t2.micro\"\n  instance_count     = 1\n  enable_autoscaling = false\n}\n\nmodule \"database\" {\n  source = \"../../modules/database\"\n\n  environment         = \"dev\"\n  project_name        = \"terraform-basics-homework\"\n  subnet_id           = module.networking.private_subnet_id\n  security_group_ids  = [module.networking.database_security_group_id]\n  instance_class      = \"db.t3.micro\"\n  allocated_storage   = 20\n  db_name             = \"webapp_dev\"\n  db_username         = \"admin\"\n  db_password         = var.db_password\n}\n\nmodule \"storage\" {\n  source = \"../../modules/storage\"\n\n  environment        = \"dev\"\n  project_name       = \"terraform-basics-homework\"\n  bucket_name        = \"terraform-basics-homework-dev-logs-${random_id.bucket_suffix.hex}\"\n  enable_versioning  = false\n  enable_logging     = true\n}\n\n# Random ID for unique bucket names\nresource \"random_id\" \"bucket_suffix\" {\n  byte_length = 4\n}\n</code></pre> <p>Looge <code>environments/dev/variables.tf</code>:</p> <pre><code>variable \"aws_region\" {\n  description = \"AWS region\"\n  type        = string\n  default     = \"us-west-2\"\n}\n\nvariable \"environment\" {\n  description = \"Environment name\"\n  type        = string\n  default     = \"dev\"\n}\n\nvariable \"project_name\" {\n  description = \"Project name\"\n  type        = string\n  default     = \"terraform-basics-homework\"\n}\n\nvariable \"db_password\" {\n  description = \"Database password\"\n  type        = string\n  sensitive   = true\n}\n</code></pre> <p>Looge <code>environments/dev/terraform.tfvars</code>:</p> <pre><code>aws_region   = \"us-west-2\"\nenvironment  = \"dev\"\nproject_name = \"terraform-basics-homework\"\ndb_password  = \"dev_password_123\"\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-staging-environment","title":"Samm 2: Staging environment","text":"<p>Looge <code>environments/staging/main.tf</code>:</p> <pre><code># Import shared configuration\nterraform {\n  source = \"../../shared\"\n}\n\n# Import modules\nmodule \"networking\" {\n  source = \"../../modules/networking\"\n\n  environment         = \"staging\"\n  project_name        = \"terraform-basics-homework\"\n  vpc_cidr           = \"10.1.0.0/16\"\n  public_subnet_cidr = \"10.1.1.0/24\"\n  private_subnet_cidr = \"10.1.2.0/24\"\n  availability_zone  = \"us-west-2a\"\n}\n\nmodule \"compute\" {\n  source = \"../../modules/compute\"\n\n  environment        = \"staging\"\n  project_name       = \"terraform-basics-homework\"\n  subnet_id          = module.networking.public_subnet_id\n  security_group_ids = [module.networking.web_security_group_id]\n  instance_type      = \"t2.small\"\n  instance_count     = 1\n  enable_autoscaling = false\n}\n\nmodule \"database\" {\n  source = \"../../modules/database\"\n\n  environment         = \"staging\"\n  project_name        = \"terraform-basics-homework\"\n  subnet_id           = module.networking.private_subnet_id\n  security_group_ids  = [module.networking.database_security_group_id]\n  instance_class      = \"db.t3.small\"\n  allocated_storage   = 50\n  db_name             = \"webapp_staging\"\n  db_username         = \"admin\"\n  db_password         = var.db_password\n}\n\nmodule \"storage\" {\n  source = \"../../modules/storage\"\n\n  environment        = \"staging\"\n  project_name       = \"terraform-basics-homework\"\n  bucket_name        = \"terraform-basics-homework-staging-logs-${random_id.bucket_suffix.hex}\"\n  enable_versioning  = true\n  enable_logging     = true\n}\n\n# Random ID for unique bucket names\nresource \"random_id\" \"bucket_suffix\" {\n  byte_length = 4\n}\n</code></pre> <p>Looge <code>environments/staging/terraform.tfvars</code>:</p> <pre><code>aws_region   = \"us-west-2\"\nenvironment  = \"staging\"\nproject_name = \"terraform-basics-homework\"\ndb_password  = \"staging_password_456\"\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-production-environment","title":"Samm 3: Production environment","text":"<p>Looge <code>environments/prod/main.tf</code>:</p> <pre><code># Import shared configuration\nterraform {\n  source = \"../../shared\"\n}\n\n# Import modules\nmodule \"networking\" {\n  source = \"../../modules/networking\"\n\n  environment         = \"prod\"\n  project_name        = \"terraform-basics-homework\"\n  vpc_cidr           = \"10.2.0.0/16\"\n  public_subnet_cidr = \"10.2.1.0/24\"\n  private_subnet_cidr = \"10.2.2.0/24\"\n  availability_zone  = \"us-west-2a\"\n}\n\nmodule \"compute\" {\n  source = \"../../modules/compute\"\n\n  environment        = \"prod\"\n  project_name       = \"terraform-basics-homework\"\n  subnet_id          = module.networking.public_subnet_id\n  security_group_ids = [module.networking.web_security_group_id]\n  instance_type      = \"t2.medium\"\n  instance_count     = 2\n  enable_autoscaling = true\n  min_size           = 2\n  max_size           = 5\n  desired_capacity   = 2\n}\n\nmodule \"database\" {\n  source = \"../../modules/database\"\n\n  environment         = \"prod\"\n  project_name        = \"terraform-basics-homework\"\n  subnet_id           = module.networking.private_subnet_id\n  security_group_ids  = [module.networking.database_security_group_id]\n  instance_class      = \"db.t3.medium\"\n  allocated_storage   = 100\n  db_name             = \"webapp_prod\"\n  db_username         = \"admin\"\n  db_password         = var.db_password\n}\n\nmodule \"storage\" {\n  source = \"../../modules/storage\"\n\n  environment        = \"prod\"\n  project_name       = \"terraform-basics-homework\"\n  bucket_name        = \"terraform-basics-homework-prod-logs-${random_id.bucket_suffix.hex}\"\n  enable_versioning  = true\n  enable_logging     = true\n}\n\n# Random ID for unique bucket names\nresource \"random_id\" \"bucket_suffix\" {\n  byte_length = 4\n}\n</code></pre> <p>Looge <code>environments/prod/terraform.tfvars</code>:</p> <pre><code>aws_region   = \"us-west-2\"\nenvironment  = \"prod\"\nproject_name = \"terraform-basics-homework\"\ndb_password  = \"prod_password_789\"\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-7-juurutamine-ja-testimine-60-min","title":"\ud83d\udccb \u00dclesanne 7: Juurutamine ja testimine (60 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-development-keskkonna-juurutamine","title":"Samm 1: Development keskkonna juurutamine","text":"<pre><code># Navigate to development environment\ncd environments/dev\n\n# Initialize Terraform\nterraform init\n\n# Plan the deployment\nterraform plan\n\n# Apply the configuration\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-2-staging-keskkonna-juurutamine","title":"Samm 2: Staging keskkonna juurutamine","text":"<pre><code># Navigate to staging environment\ncd ../staging\n\n# Initialize Terraform\nterraform init\n\n# Plan the deployment\nterraform plan\n\n# Apply the configuration\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-3-production-keskkonna-juurutamine","title":"Samm 3: Production keskkonna juurutamine","text":"<pre><code># Navigate to production environment\ncd ../prod\n\n# Initialize Terraform\nterraform init\n\n# Plan the deployment\nterraform plan\n\n# Apply the configuration\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#samm-4-tulemuste-kontrollimine","title":"Samm 4: Tulemuste kontrollimine","text":"<p>Kontrollige loodud ressursse:</p> <pre><code># Check development environment\ncd ../dev\nterraform output\n\n# Check staging environment\ncd ../staging\nterraform output\n\n# Check production environment\ncd ../prod\nterraform output\n</code></pre> <p>Testige web rakendusi:</p> <pre><code># Get public IPs\nterraform output instance_public_ips\n\n# Test web application\ncurl http://&lt;public-ip&gt;\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#ulesanne-8-dokumentatsioon-ja-cleanup-30-min","title":"\ud83d\udccb \u00dclesanne 8: Dokumentatsioon ja cleanup (30 min)","text":""},{"location":"terraform_basics/homework_aws_backup/#samm-1-readme-faili-loomine","title":"Samm 1: README faili loomine","text":"<p>Looge <code>README.md</code>:</p> <pre><code># N\u00e4dal 23 Kodut\u00f6\u00f6: Multi-Environment Terraform Infrastructure\n\n## \u00dclevaade\n\nSee projekt demonstreerib, kuidas kasutada Terraform'i multi-environment infrastruktuuri haldamiseks web rakenduse jaoks.\n\n## Arhitektuur\n\nInfrastruktuur sisaldab:\n- **V\u00f5rk**: VPC, subnets, security groups\n- **Arvutus**: EC2 instances v\u00f5i Auto Scaling Groups\n- **Andmebaas**: RDS PostgreSQL instances\n- **Salvestamine**: S3 buckets logide jaoks\n\n## Keskkonnad\n\n- **Development**: \u00dcks instance, minimaalsed ressursid\n- **Staging**: \u00dcks instance, keskmised ressursid\n- **Production**: Auto Scaling Group, k\u00f5rge k\u00e4ttesaadavus\n\n## Kasutamine\n\n### Eeltingimused\n\n- Terraform &gt;= 1.0\n- AWS CLI seadistatud\n- Sobivad AWS \u00f5igused\n\n### Juurutamine\n\n1. **Development keskkond:**\n   ```bash\n   cd environments/dev\n   terraform init\n   terraform plan\n   terraform apply\n   ```\n\n2. **Staging keskkond:**\n   ```bash\n   cd environments/staging\n   terraform init\n   terraform plan\n   terraform apply\n   ```\n\n3. **Production keskkond:**\n   ```bash\n   cd environments/prod\n   terraform init\n   terraform plan\n   terraform apply\n   ```\n\n### Puhastamine\n\nK\u00f5ikide ressursside kustutamiseks:\n```bash\nterraform destroy\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#projekti-struktuur","title":"Projekti struktuur","text":"<pre><code>terraform-basics-homework/\n\u251c\u2500\u2500 environments/          # Keskkonna-spetsiifilised konfiguratsioonid\n\u251c\u2500\u2500 modules/              # Taaskasutatavad Terraform moodulid\n\u251c\u2500\u2500 shared/               # Jagatud provider konfiguratsioon\n\u2514\u2500\u2500 README.md            # See fail\n</code></pre>"},{"location":"terraform_basics/homework_aws_backup/#turvalisuse-markused","title":"Turvalisuse m\u00e4rkused","text":"<ul> <li>Andmebaasi paroolid on salvestatud muutujatena (kasutage AWS Secrets Manager production'is)</li> <li>Security groups on seadistatud p\u00f5hiliseks web juurdep\u00e4\u00e4suks</li> <li>S3 buckets on avalik juurdep\u00e4\u00e4s blokeeritud</li> <li>Production keskkonnal on kustutamise kaitse lubatud</li> </ul>"},{"location":"terraform_basics/homework_aws_backup/#kulude-optimeerimine","title":"Kulude optimeerimine","text":"<ul> <li>Development ja staging kasutavad v\u00e4iksemaid instance t\u00fc\u00fcpe</li> <li>Auto scaling on lubatud ainult production'is</li> <li>S3 lifecycle policies on seadistatud kulude optimeerimiseks <pre><code>### Samm 2: Ressursside kustutamine\n\n```bash\n# Destroy production environment\ncd environments/prod\nterraform destroy\n\n# Destroy staging environment\ncd ../staging\nterraform destroy\n\n# Destroy development environment\ncd ../dev\nterraform destroy\n</code></pre></li> </ul>"},{"location":"terraform_basics/homework_aws_backup/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":"<ul> <li>Terraform AWS Provider: https://registry.terraform.io/providers/hashicorp/aws/latest/docs</li> <li>Terraform Modules: https://www.terraform.io/docs/language/modules</li> <li>AWS Best Practices: https://docs.aws.amazon.com/wellarchitected/latest/framework/</li> <li>Terraform State Management: https://www.terraform.io/docs/language/state</li> </ul>"},{"location":"terraform_basics/homework_aws_backup/#kusimused-ja-abi","title":"\ud83e\udd14 K\u00fcsimused ja abi","text":"<p>Kui teil on k\u00fcsimusi v\u00f5i probleeme:</p> <ol> <li>Kontrollige dokumentatsiooni - Terraform ja AWS dokumentatsioon</li> <li>Vaadake n\u00e4iteid - Terraform registry ja GitHub</li> <li>Debugige sammud - kasutage <code>terraform plan</code> ja <code>terraform validate</code></li> <li>K\u00fcsige abi - \u00f5petajalt v\u00f5i klassikaaslastelt</li> </ol> <p>Edu kodut\u00f6\u00f6ga! \ud83d\ude80</p>"},{"location":"terraform_basics/homework_simple/","title":"\ud83d\udcdd Terraform Basics Kodut\u00f6\u00f6: Kohalik Infrastruktuur","text":"<p>T\u00e4htaeg: J\u00e4rgmise n\u00e4dala alguseks Eesm\u00e4rk: Terraform'i praktiline kasutamine ja Infrastructure as Code m\u00f5istmine Aeg: 2-3 tundi praktilist t\u00f6\u00f6d</p> <p>Fookus on Terraform'i ja Infrastructure as Code'i \u00f5ppimisel kohalikus keskkonnas!</p>"},{"location":"terraform_basics/homework_simple/#projekt-kohalik-infrastruktuur-terraformiga","title":"\ud83c\udfaf Projekt: Kohalik Infrastruktuur Terraform'iga","text":""},{"location":"terraform_basics/homework_simple/#mis-on-see-projekt","title":"Mis on see projekt?","text":"<p>Looge kohalik infrastruktuur Terraform'i abil. See on nagu \"digitaalse maja ehitamine\" kohalikus arvutis - kirjutate \u00fcles, mida soovite, ja Terraform teeb selle teie eest.</p>"},{"location":"terraform_basics/homework_simple/#mida-te-ehitate","title":"Mida te ehitate?","text":"<p>\ud83d\udcbb Kohalik Infrastruktuur - Failid ja kaustad - projektifailide struktuur - Konfiguratsioonid - JSON ja YAML failid - Skriptid - automatiseerimise skriptid</p>"},{"location":"terraform_basics/homework_simple/#miks-see-on-kasulik","title":"Miks see on kasulik?","text":"<ul> <li>\u00d5pite Terraform'i - praktiline kogemus</li> <li>Lihtne alustada - t\u00f6\u00f6tab kohalikus arvutis</li> <li>Reaalne projekt - failide ja konfiguratsiooni haldamine</li> <li>Taaskasutatav - sama kood t\u00f6\u00f6tab erinevates arvutites</li> </ul>"},{"location":"terraform_basics/homework_simple/#ulesanne-1-projekti-struktuuri-loomine-20-min","title":"\ud83d\udccb \u00dclesanne 1: Projekti struktuuri loomine (20 min)","text":""},{"location":"terraform_basics/homework_simple/#samm-1-pohifailid","title":"Samm 1: P\u00f5hifailid","text":"<p>Looge j\u00e4rgmine failide struktuur:</p> <pre><code>terraform-basics-homework/\n\u251c\u2500\u2500 main.tf          # P\u00f5hiline Terraform fail\n\u251c\u2500\u2500 variables.tf     # Muutujad\n\u251c\u2500\u2500 outputs.tf       # V\u00e4ljundid\n\u251c\u2500\u2500 terraform.tfvars # Muutujate v\u00e4\u00e4rtused\n\u2514\u2500\u2500 README.md        # Projekti kirjeldus\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-2-maintf-fail","title":"Samm 2: main.tf fail","text":"<pre><code>terraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n\n# Loo projekti p\u00f5hikaust\nresource \"local_directory\" \"project_root\" {\n  path = \"${path.module}/${var.project_name}\"\n}\n\n# Loo alamkaustad\nresource \"local_directory\" \"config\" {\n  path = \"${local_directory.project_root.path}/config\"\n}\n\nresource \"local_directory\" \"scripts\" {\n  path = \"${local_directory.project_root.path}/scripts\"\n}\n\nresource \"local_directory\" \"docs\" {\n  path = \"${local_directory.project_root.path}/docs\"\n}\n\n# Projekti konfiguratsioon\nresource \"local_file\" \"project_config\" {\n  content = jsonencode({\n    project_name = var.project_name\n    environment  = var.environment\n    version      = \"1.0.0\"\n    created_at   = timestamp()\n    author       = \"Terraform Student\"\n    features = [\n      \"local_file_management\",\n      \"configuration_generation\",\n      \"script_automation\"\n    ]\n  })\n  filename = \"${local_directory.config.path}/project.json\"\n}\n\n# YAML konfiguratsioon\nresource \"local_file\" \"app_config\" {\n  content = yamlencode({\n    app = {\n      name        = var.project_name\n      environment = var.environment\n      port        = 8080\n      debug       = var.environment == \"development\" ? true : false\n    }\n    database = {\n      type = \"sqlite\"\n      file = \"app.db\"\n    }\n    logging = {\n      level = var.environment == \"production\" ? \"warn\" : \"debug\"\n      file  = \"app.log\"\n    }\n  })\n  filename = \"${local_directory.config.path}/app.yaml\"\n}\n\n# K\u00e4ivitamise skript\nresource \"local_file\" \"startup_script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"======================================\"\n    echo \"Tere tulemast ${var.project_name} projekti!\"\n    echo \"======================================\"\n    echo \"Keskkond: ${var.environment}\"\n    echo \"Versioon: 1.0.0\"\n    echo \"Kuup\u00e4ev: $(date)\"\n    echo \"Kaust: $(pwd)\"\n    echo \"\"\n    echo \"Saadaolevad konfiguratsioonid:\"\n    ls -la config/\n    echo \"\"\n    echo \"Saadaolevad skriptid:\"\n    ls -la scripts/\n    echo \"======================================\"\n  EOF\n  filename        = \"${local_directory.scripts.path}/startup.sh\"\n  file_permission = \"0755\"\n}\n\n# Puhastamise skript\nresource \"local_file\" \"cleanup_script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"Puhastan ${var.project_name} projekti...\"\n    echo \"Kustutan ajutised failid...\"\n    rm -f *.tmp *.log\n    echo \"Puhastamine l\u00f5petatud!\"\n  EOF\n  filename        = \"${local_directory.scripts.path}/cleanup.sh\"\n  file_permission = \"0755\"\n}\n\n# Juhuslik ID failide jaoks\nresource \"random_id\" \"file_suffix\" {\n  byte_length = 4\n}\n\n# Loo mitu n\u00e4idisfaili\nresource \"local_file\" \"example_files\" {\n  count = var.file_count\n\n  content = &lt;&lt;-EOF\n    # N\u00e4idisfail ${count.index + 1}\n\n    Projekti nimi: ${var.project_name}\n    Keskkond: ${var.environment}\n    Faili number: ${count.index + 1}\n    Loodud: ${timestamp()}\n    Unikaalne ID: ${random_id.file_suffix.hex}\n\n    See on n\u00e4idisfail, mis demonstreerib Terraform'i v\u00f5imalusi.\n    Saate seda faili kasutada oma projektides.\n  EOF\n\n  filename = \"${local_directory.docs.path}/example_${count.index + 1}_${random_id.file_suffix.hex}.txt\"\n}\n\n# README fail\nresource \"local_file\" \"readme\" {\n  content = &lt;&lt;-EOF\n    # ${var.project_name}\n\n    ## Kirjeldus\n\n    See projekt on loodud Terraform'i abil demonstreerima Infrastructure as Code p\u00f5him\u00f5tteid.\n\n    ## Struktuuri\n\n    ```\n    ${var.project_name}/\n    \u251c\u2500\u2500 config/          # Konfiguratsioonifailid\n    \u251c\u2500\u2500 scripts/         # Skriptid\n    \u251c\u2500\u2500 docs/           # Dokumentatsioon ja n\u00e4ited\n    \u2514\u2500\u2500 README.md       # See fail\n    ```\n\n    ## Kasutamine\n\n    1. K\u00e4ivita projekt: `./scripts/startup.sh`\n    2. Vaata konfiguratsioone: `cat config/project.json`\n    3. Puhasta projekt: `./scripts/cleanup.sh`\n\n    ## Keskkond\n\n    - Keskkond: ${var.environment}\n    - Versioon: 1.0.0\n    - Loodud: ${timestamp()}\n\n    ## Terraform info\n\n    See projekt loodi kasutades:\n    - Local provider\n    - Random provider\n    - File resources\n    - Directory resources\n  EOF\n  filename = \"${local_directory.project_root.path}/README.md\"\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-3-variablestf-fail","title":"Samm 3: variables.tf fail","text":"<pre><code>variable \"project_name\" {\n  description = \"Projekti nimi\"\n  type        = string\n  default     = \"terraform-basics-homework\"\n\n  validation {\n    condition     = length(var.project_name) &gt; 3\n    error_message = \"Projekti nimi peab olema v\u00e4hemalt 4 t\u00e4hem\u00e4rki pikk.\"\n  }\n}\n\nvariable \"environment\" {\n  description = \"Keskkonna nimi\"\n  type        = string\n  default     = \"development\"\n\n  validation {\n    condition     = contains([\"development\", \"staging\", \"production\"], var.environment)\n    error_message = \"Keskkond peab olema: development, staging v\u00f5i production.\"\n  }\n}\n\nvariable \"file_count\" {\n  description = \"Loodavate n\u00e4idisfailide arv\"\n  type        = number\n  default     = 5\n\n  validation {\n    condition     = var.file_count &gt; 0 &amp;&amp; var.file_count &lt;= 20\n    error_message = \"Failide arv peab olema vahemikus 1-20.\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-4-outputstf-fail","title":"Samm 4: outputs.tf fail","text":"<pre><code>output \"project_directory\" {\n  description = \"Projekti kausta tee\"\n  value       = local_directory.project_root.path\n}\n\noutput \"project_structure\" {\n  description = \"Projekti struktuur\"\n  value = {\n    root_dir    = local_directory.project_root.path\n    config_dir  = local_directory.config.path\n    scripts_dir = local_directory.scripts.path\n    docs_dir    = local_directory.docs.path\n  }\n}\n\noutput \"created_files\" {\n  description = \"K\u00f5ik loodud failid\"\n  value = {\n    config_files = [\n      local_file.project_config.filename,\n      local_file.app_config.filename\n    ]\n    script_files = [\n      local_file.startup_script.filename,\n      local_file.cleanup_script.filename\n    ]\n    doc_files = local_file.example_files[*].filename\n    readme_file = local_file.readme.filename\n  }\n}\n\noutput \"project_summary\" {\n  description = \"Projekti kokkuv\u00f5te\"\n  value = &lt;&lt;-EOF\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n    Terraform Projekt: ${var.project_name}\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n    Keskkond: ${var.environment}\n    Failide arv: ${length(local_file.example_files) + 4}\n    Loodud: ${timestamp()}\n    Kaust: ${local_directory.project_root.path}\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n  EOF\n}\n\noutput \"next_steps\" {\n  description = \"J\u00e4rgmised sammud\"\n  value = [\n    \"1. K\u00e4ivitage: cd ${local_directory.project_root.path}\",\n    \"2. Vaadake struktuuri: tree . (v\u00f5i ls -la)\",\n    \"3. K\u00e4ivitage startup skript: ./scripts/startup.sh\",\n    \"4. Vaadake konfiguratsioonifaile: cat config/*.json\",\n    \"5. Muutke terraform.tfvars ja rakendage uuesti\"\n  ]\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-5-terraformtfvars-fail","title":"Samm 5: terraform.tfvars fail","text":"<pre><code>project_name = \"minu-terraform-projekt\"\nenvironment  = \"development\"\nfile_count   = 3\n</code></pre>"},{"location":"terraform_basics/homework_simple/#ulesanne-2-projekti-kaivitamine-15-min","title":"\ud83d\udccb \u00dclesanne 2: Projekti k\u00e4ivitamine (15 min)","text":""},{"location":"terraform_basics/homework_simple/#samm-1-terraformi-initsialiseerimine","title":"Samm 1: Terraform'i initsialiseerimine","text":"<pre><code># Navigate to project directory\ncd terraform-basics-homework\n\n# Initialize Terraform\nterraform init\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-2-planeerimine","title":"Samm 2: Planeerimine","text":"<pre><code># See what will be created\nterraform plan\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-3-projekti-loomine","title":"Samm 3: Projekti loomine","text":"<pre><code># Create the infrastructure\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-4-tulemuste-vaatamine","title":"Samm 4: Tulemuste vaatamine","text":"<pre><code># Check outputs\nterraform output\n\n# Check created files\nls -la minu-terraform-projekt/\ntree minu-terraform-projekt/  # kui tree on installitud\n</code></pre>"},{"location":"terraform_basics/homework_simple/#ulesanne-3-eksperimenteerimine-30-min","title":"\ud83d\udccb \u00dclesanne 3: Eksperimenteerimine (30 min)","text":""},{"location":"terraform_basics/homework_simple/#samm-1-muutujate-muutmine","title":"Samm 1: Muutujate muutmine","text":"<p>Muutke <code>terraform.tfvars</code> faili:</p> <pre><code>project_name = \"minu-uus-projekt\"\nenvironment  = \"production\"\nfile_count   = 10\n</code></pre> <p>Rakendage muudatused:</p> <pre><code>terraform plan\nterraform apply\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-2-uue-ressursi-lisamine","title":"Samm 2: Uue ressursi lisamine","text":"<p>Lisage <code>main.tf</code> faili:</p> <pre><code># Loo konfiguratsioonifail iga keskkonna jaoks\nresource \"local_file\" \"env_config\" {\n  content = jsonencode({\n    environment = var.environment\n    settings = {\n      debug_mode    = var.environment != \"production\"\n      log_level     = var.environment == \"production\" ? \"error\" : \"debug\"\n      feature_flags = {\n        new_ui      = var.environment == \"development\"\n        analytics   = var.environment != \"development\"\n        monitoring  = var.environment == \"production\"\n      }\n    }\n  })\n  filename = \"${local_directory.config.path}/environment.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-3-outputide-uuendamine","title":"Samm 3: Output'ide uuendamine","text":"<p>Lisage <code>outputs.tf</code> faili:</p> <pre><code>output \"environment_config\" {\n  description = \"Keskkonna konfiguratsioon\"\n  value       = local_file.env_config.filename\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-4-testimine","title":"Samm 4: Testimine","text":"<pre><code>terraform apply\n./minu-uus-projekt/scripts/startup.sh\ncat minu-uus-projekt/config/environment.json\n</code></pre>"},{"location":"terraform_basics/homework_simple/#ulesanne-4-puhastamine-ja-dokumenteerimine-10-min","title":"\ud83d\udccb \u00dclesanne 4: Puhastamine ja dokumenteerimine (10 min)","text":""},{"location":"terraform_basics/homework_simple/#samm-1-infrastruktuuri-kustutamine","title":"Samm 1: Infrastruktuuri kustutamine","text":"<pre><code>terraform destroy\n</code></pre>"},{"location":"terraform_basics/homework_simple/#samm-2-kokkuvotte-kirjutamine","title":"Samm 2: Kokkuv\u00f5tte kirjutamine","text":"<p>Vastake k\u00fcsimustele:</p> <ol> <li>Mis oli k\u00f5ige lihtsam Terraform'i juures?</li> <li>Mis oli k\u00f5ige keerulisem?</li> <li>Kuidas saaks seda projekti parandada?</li> <li>Mida \u00f5ppisite Infrastructure as Code kohta?</li> </ol>"},{"location":"terraform_basics/homework_simple/#boonusulesanded-valikuline","title":"\ud83c\udfaf Boonus\u00fclesanded (valikuline)","text":""},{"location":"terraform_basics/homework_simple/#1-tingimused-ja-tsuklid","title":"1. Tingimused ja ts\u00fcklid","text":"<pre><code># Loo backup failid ainult production keskkonnas\nresource \"local_file\" \"backup_script\" {\n  count = var.environment == \"production\" ? 1 : 0\n\n  content = \"#!/bin/bash\\necho 'Backup started...\\n'\"\n  filename = \"${local_directory.scripts.path}/backup.sh\"\n  file_permission = \"0755\"\n}\n\n# Loo erinevad konfiguratsioonie failure iga faili jaoks\nresource \"local_file\" \"app_configs\" {\n  for_each = toset([\"api\", \"web\", \"worker\"])\n\n  content = jsonencode({\n    service = each.key\n    port    = each.key == \"api\" ? 3000 : each.key == \"web\" ? 8080 : 9000\n    env     = var.environment\n  })\n  filename = \"${local_directory.config.path}/${each.key}.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#2-locals-ja-funktsioonid","title":"2. Locals ja funktsioonid","text":"<pre><code>locals {\n  project_prefix = \"${var.project_name}-${var.environment}\"\n  timestamp_formatted = formatdate(\"YYYY-MM-DD-hhmm\", timestamp())\n\n  common_tags = {\n    Project     = var.project_name\n    Environment = var.environment\n    ManagedBy   = \"Terraform\"\n    CreatedAt   = local.timestamp_formatted\n  }\n}\n\nresource \"local_file\" \"metadata\" {\n  content = jsonencode(local.common_tags)\n  filename = \"${local_directory.config.path}/metadata.json\"\n}\n</code></pre>"},{"location":"terraform_basics/homework_simple/#3-moodulite-struktuuri-ettevalmistamine","title":"3. Moodulite struktuuri ettevalmistamine","text":"<pre><code>mkdir -p modules/file-generator\n# Liigutage osa koodist moodulitesse\n</code></pre>"},{"location":"terraform_basics/homework_simple/#kokkuvote","title":"\ud83d\udcda Kokkuv\u00f5te","text":"<p>T\u00e4na \u00f5ppisite: - Terraform'i p\u00f5hit\u00f5desid - kuidas kirjutada HCL koodi - Local provider'i - kuidas hallata kohalikke faile - Variables ja outputs - kuidas teha koodi paindlikuks - Infrastructure as Code - kuidas kood saab infrastruktuuri kirjeldada</p> <p>J\u00e4rgmised sammud: - \u00d5ppige rohkem provider'ite kohta - Proovige kohalikke provider'eid (local, null, random) - Uurige Terraform module'eid - Rakendage real-world projektides</p> <p>K\u00fcsimused? \ud83e\udd14</p>"},{"location":"terraform_basics/homework_simple/#failide-naited","title":"\ud83d\udccb Failide n\u00e4ited","text":""},{"location":"terraform_basics/homework_simple/#oodatav-terraform-output","title":"Oodatav terraform output:","text":"<pre><code>project_directory = \"./minu-terraform-projekt\"\nproject_structure = {\n  \"config_dir\" = \"./minu-terraform-projekt/config\"\n  \"docs_dir\" = \"./minu-terraform-projekt/docs\"\n  \"root_dir\" = \"./minu-terraform-projekt\"\n  \"scripts_dir\" = \"./minu-terraform-projekt/scripts\"\n}\nproject_summary = &lt;&lt;EOT\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nTerraform Projekt: minu-terraform-projekt\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nKeskkond: development\nFailide arv: 7\nLoodud: 2024-01-15T10:30:45Z\nKaust: ./minu-terraform-projekt\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nEOT\n</code></pre>"},{"location":"terraform_basics/homework_simple/#oodatav-failide-struktuur","title":"Oodatav failide struktuur:","text":"<pre><code>minu-terraform-projekt/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 config/\n\u2502   \u251c\u2500\u2500 project.json\n\u2502   \u2514\u2500\u2500 app.yaml\n\u251c\u2500\u2500 scripts/\n\u2502   \u251c\u2500\u2500 startup.sh\n\u2502   \u2514\u2500\u2500 cleanup.sh\n\u2514\u2500\u2500 docs/\n    \u251c\u2500\u2500 example_1_abc123.txt\n    \u251c\u2500\u2500 example_2_abc123.txt\n    \u2514\u2500\u2500 example_3_abc123.txt\n</code></pre>"},{"location":"terraform_basics/lab/","title":"\ud83e\uddea Terraform Basics Lab: Infrastructure Automation","text":"<p>Kestus: 2 tundi Eesm\u00e4rk: \u00d5ppida Terraform'i praktilist kasutamist ja luua lihtsa infrastruktuuri</p>"},{"location":"terraform_basics/lab/#samm-1-opivaljundid","title":"\ud83c\udfaf Samm 1: \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast laborit oskate: - Kirjutada lihtsaid Terraform faile - HCL s\u00fcntaks ja p\u00f5hilised ressursid - Kasutada local provider'it - failide ja kataloogide loomine - M\u00f5ista Terraform workflow - init, plan, apply, destroy - Debugida probleeme - logide vaatamine ja veateadete m\u00f5istmine - Kasutada dokumentatsiooni - abi leidmine ja n\u00e4idete kasutamine</p>"},{"location":"terraform_basics/lab/#samm-1-terraformi-installimine-ja-seadistamine-15-min","title":"\ud83d\udccb Samm 1: Terraform'i installimine ja seadistamine (15 min)","text":""},{"location":"terraform_basics/lab/#11-terraformi-installimine","title":"1.1: Terraform'i installimine","text":"<p>Valige oma operatsioonis\u00fcsteem ja j\u00e4rgige juhiseid:</p> <p>macOS: <pre><code>brew install terraform\nterraform --version\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update &amp;&amp; sudo apt install terraform\nterraform --version\n</code></pre></p> <p>Windows: <pre><code>choco install terraform\nterraform --version\n</code></pre></p>"},{"location":"terraform_basics/lab/#12-projekti-struktuuri-loomine","title":"1.2: Projekti struktuuri loomine","text":"<pre><code># Projekti kataloogi loomine\nmkdir ~/terraform-basics-lab\ncd ~/terraform-basics-lab\n\n# Lihtne struktuur\nmkdir -p configs scripts\n</code></pre>"},{"location":"terraform_basics/lab/#13-terraformi-seadistamine","title":"1.3: Terraform'i seadistamine","text":"<p>Kontrollige, et Terraform t\u00f6\u00f6tab: <pre><code># Check Terraform version\nterraform version\n\n# Check available commands\nterraform --help\n</code></pre></p>"},{"location":"terraform_basics/lab/#samm-2-lihtsa-terraform-projekti-loomine-45-min","title":"\ud83d\udccb Samm 2: Lihtsa Terraform projekti loomine (45 min)","text":""},{"location":"terraform_basics/lab/#21-pohilise-terraform-faili-loomine","title":"2.1: P\u00f5hilise Terraform faili loomine","text":"<p>Kasutage valmis n\u00e4idet teacher_repo'st:</p> <pre><code># Kopeerige lihtne n\u00e4ide\ncp teacher_repo/terraform-basics-starter/examples/simple-local/main.tf main.tf\n</code></pre> <p>V\u00f5i looge oma fail:</p> <pre><code>terraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n  }\n}\n\n# Looge lihtne tekstifail\nresource \"local_file\" \"hello\" {\n  content  = \"Tere! See fail on loodud Terraform'i abil.\"\n  filename = \"hello.txt\"\n}\n\n# Looge kataloog\nresource \"local_directory\" \"example\" {\n  path = \"example_dir\"\n}\n</code></pre> <p>Mida see teeb? - <code>local_file</code> - loob faili - <code>local_directory</code> - loob kataloogi - <code>content</code> - faili sisu - <code>filename</code> - faili nimi - <code>path</code> - kataloogi tee</p>"},{"location":"terraform_basics/lab/#22-terraformi-kaivitamine","title":"2.2: Terraform'i k\u00e4ivitamine","text":"<p>Terraform'i kasutamine koosneb kolmest p\u00f5hilises sammust: init, plan, ja apply. Kujutage ette neid kui \"valmistamine\", \"kontrollimine\" ja \"tegemine\".</p> <p>1. Initialize Terraform (init) - valmistamine: <pre><code># Initialize the project - valmista ette t\u00f6\u00f6keskkond\nterraform init\n</code></pre></p> <p>Mida see teeb? - Allalaadib vajalikud provider'id - nagu \"t\u00f5lgi\" installimine - Seadistab backend'i - kus state fail salvestatakse (praegu kohalik) - Valmistab ette t\u00f6\u00f6keskkonna - kontrollib, et k\u00f5ik vajalik on olemas - Loob .terraform kausta - sisaldab allalaaditud faile</p> <p>Miks see vajalik? - Esimest korda, kui kasutad uut provider'it - Kui muudad provider'i versiooni - Kui muudad backend'i konfiguratsiooni</p> <p>2. Plan the changes (plan) - kontrollimine: <pre><code># See what Terraform will do - vaata, mida Terraform teeb\nterraform plan\n</code></pre></p> <p>Mida see teeb? - Anal\u00fc\u00fcsib koodi - kontrollib s\u00fcntaksit ja loogikat - V\u00f5rdleb praeguse olekuga - mis on juba olemas vs mida soovid - N\u00e4itab muudatusi - mida luuakse, muudetakse v\u00f5i kustutatakse - Ei tee midagi - ainult n\u00e4itab, mida teeks</p> <p>Miks see oluline? - Turvalisus - n\u00e4ed, mida tehakse enne tegemist - Debugging - leiad probleemid enne rakendamist - Dokumentatsioon - n\u00e4ed, mis muudatused toimuvad</p> <p>3. Apply the changes (apply) - tegemine: <pre><code># Apply the configuration - rakenda konfiguratsioon\nterraform apply\n</code></pre></p> <p>Mida see teeb? - Loob ressursid - teeb tegelikud muudatused - Salvestab state faili - m\u00e4rgib, mis on loodud - N\u00e4itab v\u00e4ljundit - tagastab loodud ressursside infot - K\u00fcsib kinnitust - \"Do you want to perform these actions?\"</p> <p>Miks see kriitiline? - Tegelikud muudatused - see teeb p\u00e4ris asju - State management - j\u00e4lgib, mis on olemas - Idempotent - sama k\u00e4sk teeb sama tulemuse <pre><code>### 2.3: Tulemuste kontrollimine\n\n**Kontrollige loodud faile:**\n```bash\n# List created files\nls -la\n\n# Check the content of hello.txt\ncat hello.txt\n\n# Check the JSON config\ncat config.json\n\n# Check the directory\nls -la example_dir/\n</code></pre></p> <p>Kontrollige state faili: <pre><code># Show state\nterraform show\n\n# List resources in state\nterraform state list\n</code></pre></p>"},{"location":"terraform_basics/lab/#samm-3-muudatuste-tegemine-ja-haldamine-30-min","title":"\ud83d\udccb Samm 3: Muudatuste tegemine ja haldamine (30 min)","text":""},{"location":"terraform_basics/lab/#31-konfiguratsiooni-muutmine","title":"3.1: Konfiguratsiooni muutmine","text":"<p>Muutke <code>main.tf</code> faili:</p> <pre><code># Configure Terraform\nterraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n  }\n}\n\n# Create a simple text file\nresource \"local_file\" \"hello\" {\n  content  = \"Hello, Terraform! This file was created by Terraform. Updated content!\"\n  filename = \"${path.module}/hello.txt\"\n}\n\n# Create a directory\nresource \"local_directory\" \"example\" {\n  path = \"${path.module}/example_dir\"\n}\n\n# Create a configuration file\nresource \"local_file\" \"config\" {\n  content = jsonencode({\n    project_name = \"Week 23 Lab\"\n    environment  = \"development\"\n    created_by   = \"Terraform\"\n    timestamp    = timestamp()\n    version      = \"2.0\"\n  })\n  filename = \"${path.module}/config.json\"\n}\n\n# Add a new resource - a script file\nresource \"local_file\" \"script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"This is a script created by Terraform\"\n    echo \"Current time: $(date)\"\n    echo \"Projekt: Terraform Alused\"\n  EOF\n  filename = \"${path.module}/scripts/startup.sh\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#samm-2-muudatuste-rakendamine","title":"Samm 2: Muudatuste rakendamine","text":"<pre><code># Plan the changes\nterraform plan\n\n# Apply the changes\nterraform apply\n</code></pre> <p>Mida m\u00e4rkate? - Terraform n\u00e4itab, mis muudetakse - Ainult muudetud ressursid uuendatakse - Uus ressurss lisatakse</p>"},{"location":"terraform_basics/lab/#samm-3-ressursside-kustutamine","title":"Samm 3: Ressursside kustutamine","text":"<pre><code># Destroy all resources\nterraform destroy\n</code></pre> <p>Mida see teeb? - Kustutab k\u00f5ik loodud ressursid - S\u00e4ilitab state faili (kui soovite)</p>"},{"location":"terraform_basics/lab/#samm-4-variables-ja-outputs-30-min","title":"\ud83d\udccb Samm 4: Variables ja Outputs (30 min)","text":""},{"location":"terraform_basics/lab/#41-variables-faili-loomine","title":"4.1: Variables faili loomine","text":"<p>Looge fail <code>variables.tf</code>:</p> <p>Variables (muutujad) v\u00f5imaldavad teha koodi d\u00fcnaamiliseks ja taaskasutatavaks. Kujutage ette neid kui \"seadistusi\", mida saab muuta ilma koodi muutmata.</p>"},{"location":"terraform_basics/lab/#projekti-nimi-muutuja","title":"Projekti nimi muutuja","text":"<pre><code>variable \"project_name\" {\n  description = \"Name of the project\"\n  type        = string\n  default     = \"Terraform Alused\"\n}\n</code></pre> <p>Mida see teeb? - <code>description</code> - kirjeldus, mida muutuja teeb - <code>type</code> - andmet\u00fc\u00fcp (string, number, bool, list, map) - <code>default</code> - vaikev\u00e4\u00e4rtus, kui midagi pole m\u00e4\u00e4ratud</p>"},{"location":"terraform_basics/lab/#keskkond-muutuja","title":"Keskkond muutuja","text":"<pre><code>variable \"environment\" {\n  description = \"Keskkond (arendus, test, toodang)\"\n  type        = string\n  default     = \"arendus\"\n\n  validation {\n    condition     = contains([\"arendus\", \"test\", \"toodang\"], var.environment)\n    error_message = \"Keskkond peab olema arendus, test v\u00f5i toodang.\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>validation</code> - kontrollib, et v\u00e4\u00e4rtus oleks korrektne - <code>contains()</code> - funktsioon, mis kontrollib, kas v\u00e4\u00e4rtus on nimekirjas - Lubatud v\u00e4\u00e4rtused: \"development\", \"staging\", \"production\"</p>"},{"location":"terraform_basics/lab/#failide-arv-muutuja","title":"Failide arv muutuja","text":"<pre><code>variable \"file_count\" {\n  description = \"Loodavate failide arv\"\n  type        = number\n  default     = 3\n\n  validation {\n    condition     = var.file_count &gt; 0 &amp;&amp; var.file_count &lt;= 10\n    error_message = \"Failide arv peab olema vahemikus 1-10.\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>type = number</code> - andmet\u00fc\u00fcp on arv - <code>validation</code> - kontrollib, et arv oleks vahemikus 1-10 - Lubatud v\u00e4\u00e4rtused: 1, 2, 3, ..., 10</p>"},{"location":"terraform_basics/lab/#taiendavad-muutujad","title":"T\u00e4iendavad muutujad","text":"<p>V\u00f5ite lisada rohkem muutujaid vastavalt vajadusele:</p> <pre><code>variable \"file_prefix\" {\n  description = \"Failide nimede prefiks\"\n  type        = string\n  default     = \"fail\"\n}\n\nvariable \"enable_backup\" {\n  description = \"Luba varukoopia failid\"\n  type        = bool\n  default     = false\n}\n</code></pre>"},{"location":"terraform_basics/lab/#42-outputs-faili-loomine","title":"4.2: Outputs faili loomine","text":"<p>Looge fail <code>outputs.tf</code>:</p> <p>Outputs (v\u00e4ljundid) v\u00f5imaldavad n\u00e4ha loodud ressursside infot ja tagastada v\u00e4\u00e4rtusi. Kujutage ette neid kui \"vastuseid\" - mida Terraform tagastab p\u00e4rast t\u00f6\u00f6 l\u00f5petamist.</p> <pre><code># ==========================================\n# OUTPUTS - v\u00e4ljundid\n# ==========================================\n# Outputs v\u00f5imaldavad n\u00e4ha loodud ressursside infot\n# See on nagu \"vastus\" - mida Terraform tagastab p\u00e4rast t\u00f6\u00f6 l\u00f5petamist\n\n# ==========================================\n# PROJECT INFO OUTPUT - projekti info\n# ==========================================\n# Tagastab projekti kohta \u00fcldist infot\noutput \"project_info\" {\n  description = \"Projekti kohta info\"  # Kirjeldus\n\n  # value m\u00e4\u00e4rab, mida tagastada\n  value = {\n    name        = var.project_name    # Projekti nimi\n    environment = var.environment     # Keskkond\n    file_count  = var.file_count      # Failide arv\n    created_at  = timestamp()         # Loomise aeg\n  }\n\n  # Kasutamine: terraform output project_info\n  # Tulemus: JSON objekt projekti infoga\n}\n\n# ==========================================\n# FILES CREATED OUTPUT - loodud failid\n# ==========================================\n# Tagastab k\u00f5ikide loodud failide nimed\noutput \"files_created\" {\n  description = \"Loodud failide nimekiri\"  # Kirjeldus\n\n  # [*] t\u00e4hendab \"k\u00f5ik\" - v\u00f5ta k\u00f5ik local_file.example ressursid\n  # .filename t\u00e4hendab \"v\u00f5ta filename atribuut\"\n  value = local_file.example[*].filename\n\n  # Kasutamine: terraform output files_created\n  # Tulemus: nimekiri failide nimedest\n}\n\n# ==========================================\n# ADDITIONAL OUTPUTS - t\u00e4iendavad v\u00e4ljundid\n# ==========================================\n# V\u00f5ite lisada rohkem v\u00e4ljundeid vastavalt vajadusele\n\n# Tagasta kataloogi tee\noutput \"directory_path\" {\n  description = \"Loodud kataloogi tee\"\n  value       = local_directory.example.path\n}\n\n# Tagasta konfiguratsioonifaili tee\noutput \"config_file_path\" {\n  description = \"Konfiguratsioonifaili tee\"\n  value       = local_file.config.filename\n}\n\n# Tagasta projekti kokkuv\u00f5te\noutput \"project_summary\" {\n  description = \"Projekti kokkuv\u00f5te\"\n  value = \"Projekt '${var.project_name}' ${var.environment} keskkonnas ${var.file_count} failiga loodud ${timestamp()}\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#43-main-faili-uuendamine","title":"4.3: Main faili uuendamine","text":"<p>Uuendage <code>main.tf</code> faili:</p> <pre><code># Configure Terraform\nterraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n  }\n}\n\n# Loo mitu faili kasutades count\nresource \"local_file\" \"example\" {\n  count    = var.file_count\n  content  = \"See on fail number ${count.index + 1} projektile ${var.project_name} ${var.environment} keskkonnas.\"\n  filename = \"${path.module}/fail_${count.index + 1}.txt\"\n}\n\n# Loo konfiguratsioonifail\nresource \"local_file\" \"config\" {\n  content = jsonencode({\n    projekt_nimi = var.project_name\n    keskkond     = var.environment\n    failide_arv  = var.file_count\n    loodud_poolt = \"Terraform\"\n    ajatempel    = timestamp()\n  })\n  filename = \"${path.module}/konfiguratsioon.json\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#44-muudatuste-rakendamine","title":"4.4: Muudatuste rakendamine","text":"<pre><code># Plan the changes\nterraform plan\n\n# Apply the changes\nterraform apply\n\n# Check outputs\nterraform output\n</code></pre>"},{"location":"terraform_basics/lab/#samm-5-advanced-features-30-min","title":"\ud83d\udccb Samm 5: Advanced Features (30 min)","text":""},{"location":"terraform_basics/lab/#51-data-sources-kasutamine","title":"5.1: Data sources kasutamine","text":"<p>Lisage <code>main.tf</code> faili:</p> <pre><code># Loe olemasoleva faili sisu\ndata \"local_file\" \"existing_config\" {\n  filename = \"${path.module}/konfiguratsioon.json\"\n}\n\n# Loo kokkuv\u00f5ttefail kasutades data source\nresource \"local_file\" \"summary\" {\n  content = &lt;&lt;-EOF\n    Projekti Kokkuv\u00f5te:\n    - Projekt: ${var.project_name}\n    - Keskkond: ${var.environment}  \n    - Loodud failid: ${var.file_count}\n    - Konfiguratsioonifail olemas: ${data.local_file.existing_config.content != \"\" ? \"Jah\" : \"Ei\"}\n    - Loodud: ${timestamp()}\n  EOF\n  filename = \"${path.module}/kokkuvote.txt\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#52-local-values-kasutamine","title":"5.2: Local values kasutamine","text":"<p>Lisage <code>locals.tf</code> faili:</p> <pre><code># Define local values\nlocals {\n  common_tags = {\n    Project     = var.project_name\n    Environment = var.environment\n    CreatedBy   = \"Terraform\"\n    CreatedAt   = timestamp()\n  }\n\n  file_prefix = \"${var.project_name}-${var.environment}\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#53-conditional-logic","title":"5.3: Conditional logic","text":"<p>Uuendage <code>main.tf</code> faili:</p> <pre><code># Create environment-specific file\nresource \"local_file\" \"env_specific\" {\n  content = var.environment == \"production\" ? \"PRODUCTION ENVIRONMENT - BE CAREFUL!\" : \"Development environment - safe to test\"\n  filename = \"${path.module}/${local.file_prefix}-env.txt\"\n\n  tags = local.common_tags\n}\n\n# Create backup file only in production\nresource \"local_file\" \"backup\" {\n  count    = var.environment == \"production\" ? 1 : 0\n  content  = \"This is a backup file for production environment.\"\n  filename = \"${path.module}/backup.txt\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#54-final-test","title":"5.4: Final test","text":"<pre><code># Plan and apply\nterraform plan\nterraform apply\n\n# Check all outputs\nterraform output\n\n# List all files\nls -la\n\n# Check summary\ncat summary.txt\n</code></pre>"},{"location":"terraform_basics/lab/#samm-2-kokkuvote","title":"\ud83c\udfaf Samm 2: Kokkuv\u00f5te","text":"<p>T\u00e4na \u00f5ppisime:</p> <p>Terraform'i installimist ja seadistamist - t\u00f6\u00f6keskkonna valmistamine P\u00f5hilise Terraform workflow - init, plan, apply, destroy HCL s\u00fcntaksit - ressursid, muutujad, v\u00e4ljundid Local provider'i kasutamist - failide ja kataloogide haldamine Advanced features - data sources, locals, conditional logic  </p> <p>J\u00e4rgmise n\u00e4dala teemad: - Multi-environment Terraform - Kohalikud provider'id (local, null, random) - State management best practices</p>"},{"location":"terraform_basics/lab/#boonusulesanded-terraformi-oskajatele","title":"\ud83d\ude80 BOONUS\u00dcLESANDED (Terraform'i oskajatele)","text":""},{"location":"terraform_basics/lab/#b1-advanced-local-infrastructure-30-min","title":"B1: Advanced Local Infrastructure (30 min)","text":"<pre><code># locals.tf - Advanced local values\nlocals {\n  timestamp = formatdate(\"YYYY-MM-DD-hhmm\", timestamp())\n  project_prefix = \"${var.project_name}-${var.environment}\"\n\n  # Complex data structures\n  service_configs = {\n    web = {\n      port = 8080\n      replicas = var.environment == \"production\" ? 3 : 1\n      memory = \"512M\"\n    }\n    api = {\n      port = 3000\n      replicas = 2\n      memory = \"256M\"\n    }\n    worker = {\n      port = null\n      replicas = 1\n      memory = \"1G\"\n    }\n  }\n\n  # Conditional resources\n  monitoring_enabled = var.environment != \"development\"\n  backup_enabled = var.environment == \"production\"\n}\n\n# Service configuration files\nresource \"local_file\" \"service_configs\" {\n  for_each = local.service_configs\n\n  content = templatefile(\"${path.module}/templates/service.tpl\", {\n    service_name = each.key\n    port         = each.value.port\n    replicas     = each.value.replicas\n    memory       = each.value.memory\n    environment  = var.environment\n  })\n\n  filename = \"${local_directory.config.path}/${each.key}-service.yaml\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#b2-template-files-ja-functions-25-min","title":"B2: Template Files ja Functions (25 min)","text":"<pre><code># templates/nginx.conf.tpl\nupstream ${service_name} {\n%{ for i in range(replicas) ~}\n    server ${service_name}-${i}:${port};\n%{ endfor ~}\n}\n\nserver {\n    listen 80;\n    server_name ${domain};\n\n    location / {\n        proxy_pass http://${service_name};\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n%{ if ssl_enabled ~}\n    listen 443 ssl;\n    ssl_certificate /etc/ssl/certs/${domain}.crt;\n    ssl_certificate_key /etc/ssl/private/${domain}.key;\n%{ endif ~}\n}\n\n# Use template\nresource \"local_file\" \"nginx_config\" {\n  content = templatefile(\"${path.module}/templates/nginx.conf.tpl\", {\n    service_name = \"webapp\"\n    replicas     = 3\n    port         = 8080\n    domain       = \"myapp.local\"\n    ssl_enabled  = var.environment == \"production\"\n  })\n\n  filename = \"${local_directory.config.path}/nginx.conf\"\n}\n</code></pre>"},{"location":"terraform_basics/lab/#b3-modules-ja-code-organization-35-min","title":"B3: Modules ja Code Organization (35 min)","text":"<pre><code># modules/webapp/main.tf\nresource \"local_directory\" \"app_dir\" {\n  path = \"${var.base_path}/${var.app_name}\"\n}\n\nresource \"local_file\" \"app_config\" {\n  content = jsonencode({\n    app_name    = var.app_name\n    environment = var.environment\n    database_url = var.database_url\n    api_key     = var.api_key\n    features    = var.features\n  })\n  filename = \"${local_directory.app_dir.path}/config.json\"\n}\n\nresource \"local_file\" \"docker_compose\" {\n  content = templatefile(\"${path.module}/docker-compose.tpl\", {\n    app_name     = var.app_name\n    image_tag    = var.image_tag\n    environment  = var.environment\n    replicas     = var.replicas\n  })\n  filename = \"${local_directory.app_dir.path}/docker-compose.yml\"\n}\n\n# modules/webapp/variables.tf\nvariable \"app_name\" {\n  description = \"Application name\"\n  type        = string\n}\n\nvariable \"environment\" {\n  description = \"Environment\"\n  type        = string\n  validation {\n    condition     = contains([\"dev\", \"staging\", \"prod\"], var.environment)\n    error_message = \"Environment must be dev, staging, or prod.\"\n  }\n}\n\nvariable \"replicas\" {\n  description = \"Number of replicas\"\n  type        = number\n  default     = 1\n  validation {\n    condition     = var.replicas &gt; 0 &amp;&amp; var.replicas &lt;= 10\n    error_message = \"Replicas must be between 1 and 10.\"\n  }\n}\n\n# Use module\nmodule \"frontend\" {\n  source = \"./modules/webapp\"\n\n  app_name    = \"frontend\"\n  environment = var.environment\n  replicas    = var.environment == \"prod\" ? 3 : 1\n  base_path   = local_directory.project_root.path\n\n  database_url = \"postgres://user:pass@db:5432/frontend\"\n  api_key      = var.frontend_api_key\n  features = {\n    analytics = var.environment == \"prod\"\n    debug     = var.environment != \"prod\"\n  }\n}\n\nmodule \"backend\" {\n  source = \"./modules/webapp\"\n\n  app_name    = \"backend\"\n  environment = var.environment\n  replicas    = 2\n  base_path   = local_directory.project_root.path\n\n  database_url = \"postgres://user:pass@db:5432/backend\"\n  api_key      = var.backend_api_key\n  features = {\n    worker_mode = true\n    cache       = var.environment == \"prod\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/lab/#b4-terraform-workspaces-ja-state-management-20-min","title":"B4: Terraform Workspaces ja State Management (20 min)","text":"<pre><code># Create workspaces for different environments\nterraform workspace new development\nterraform workspace new staging\nterraform workspace new production\n\n# Switch between workspaces\nterraform workspace select development\nterraform plan -var-file=\"environments/dev.tfvars\"\nterraform apply\n\nterraform workspace select production\nterraform plan -var-file=\"environments/prod.tfvars\"\nterraform apply\n\n# List workspaces\nterraform workspace list\n\n# Workspace-specific variables\nvariable \"workspace_configs\" {\n  description = \"Workspace-specific configurations\"\n  type = map(object({\n    replicas     = number\n    memory_limit = string\n    disk_size    = number\n  }))\n\n  default = {\n    development = {\n      replicas     = 1\n      memory_limit = \"256M\"\n      disk_size    = 10\n    }\n    staging = {\n      replicas     = 2\n      memory_limit = \"512M\"\n      disk_size    = 20\n    }\n    production = {\n      replicas     = 5\n      memory_limit = \"1G\"\n      disk_size    = 100\n    }\n  }\n}\n\nlocals {\n  workspace_config = var.workspace_configs[terraform.workspace]\n}\n</code></pre>"},{"location":"terraform_basics/lab/#b5-advanced-data-sources-ja-external-integration-25-min","title":"B5: Advanced Data Sources ja External Integration (25 min)","text":"<pre><code># External data source\ndata \"external\" \"git_info\" {\n  program = [\"bash\", \"-c\", &lt;&lt;-EOT\n    echo '{\"branch\":\"'$(git branch --show-current)'\",\"commit\":\"'$(git rev-parse --short HEAD)'\",\"timestamp\":\"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'\"}'\n  EOT\n  ]\n}\n\n# HTTP data source (for external APIs)\ndata \"http\" \"service_discovery\" {\n  url = \"https://api.internal.com/services\"\n  request_headers = {\n    Accept = \"application/json\"\n    Authorization = \"Bearer ${var.api_token}\"\n  }\n}\n\nlocals {\n  services = jsondecode(data.http.service_discovery.body)\n  git_info = data.external.git_info.result\n}\n\n# Generate deployment metadata\nresource \"local_file\" \"deployment_info\" {\n  content = jsonencode({\n    deployment_id   = random_uuid.deployment.result\n    git_branch     = local.git_info.branch\n    git_commit     = local.git_info.commit\n    deployed_at    = local.git_info.timestamp\n    environment    = var.environment\n    terraform_version = \"v${terraform.version}\"\n    services       = local.services\n  })\n\n  filename = \"${local_directory.project_root.path}/deployment-info.json\"\n}\n\nresource \"random_uuid\" \"deployment\" {}\n\n# Integration with external systems\nresource \"local_file\" \"monitoring_config\" {\n  content = templatefile(\"${path.module}/templates/monitoring.yml.tpl\", {\n    services    = local.services\n    environment = var.environment\n    alerts = {\n      cpu_threshold    = var.environment == \"production\" ? 80 : 90\n      memory_threshold = var.environment == \"production\" ? 85 : 95\n      disk_threshold   = 90\n    }\n  })\n\n  filename = \"${local_directory.config.path}/monitoring.yml\"\n}\n</code></pre> <p>Kas teil on k\u00fcsimusi? \ud83e\udd14</p>"},{"location":"terraform_basics/lab/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":"<ul> <li>Terraform CLI Commands: https://www.terraform.io/docs/cli</li> <li>Local Provider: https://registry.terraform.io/providers/hashicorp/local/latest/docs</li> <li>HCL Language: https://www.terraform.io/docs/language</li> <li>Terraform Best Practices: https://www.terraform.io/docs/cloud/guides/recommended-practices</li> </ul>"},{"location":"terraform_basics/lab/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"terraform_basics/lab/#levinumad-probleemid-ja-lahendused","title":"Levinumad probleemid ja lahendused:","text":"<p>1. Provider not found: <pre><code># Solution: Run terraform init\nterraform init\n</code></pre></p> <p>2. State file issues: <pre><code># Check state\nterraform state list\n\n# Refresh state\nterraform refresh\n</code></pre></p> <p>3. Permission issues: <pre><code># Check file permissions\nls -la\n\n# Fix permissions if needed\nchmod 644 *.txt\n</code></pre></p> <p>4. Variable validation errors: <pre><code># Check variable values\nterraform plan -var=\"environment=development\"\n</code></pre></p>"},{"location":"terraform_basics/lecture/","title":"\ud83d\udcda Terraform Basics: Infrastructure as Code","text":"<p>Kestus: 2 tundi (\u00fclevaade) Teemad: Terraform fundamentals, HCL language, Local providers, State management</p>"},{"location":"terraform_basics/lecture/#opivaljundid","title":"\ud83c\udfaf \u00d5piv\u00e4ljundid","text":"<p>P\u00e4rast seda tundi oskate: - M\u00f5ista Infrastructure as Code m\u00f5istet - miks ja kuidas kasutada - Kirjutada lihtsaid Terraform faile - HCL s\u00fcntaks ja p\u00f5hilised ressursid - Kasutada local provider'eid - failis\u00fcsteemi ja kohalike ressursside haldamine - Hallata Terraform state - miks oluline ja kuidas kasutada - Rakendada p\u00f5hilisi parimaid praktikaid - turvaline ja korrektne kasutamine</p>"},{"location":"terraform_basics/lecture/#loeng-231-infrastructure-as-code-concepts-15-min","title":"\ud83d\udcd6 Loeng 23.1: Infrastructure as Code Concepts (15 min)","text":""},{"location":"terraform_basics/lecture/#tere-tulemast-infrastructure-as-code-maailma","title":"Tere tulemast Infrastructure as Code maailma!","text":"<p>Tere tagasi! Eelmisel n\u00e4dalal \u00f5ppisime Docker Compose'i ja orkestreerimist. T\u00e4na astume j\u00e4rgmisele tasemele - \u00f5pime infrastruktuuri kui koodi haldamist.</p>"},{"location":"terraform_basics/lecture/#mis-on-infrastructure-as-code-iac","title":"Mis on Infrastructure as Code (IaC)?","text":"<p>Infrastructure as Code t\u00e4hendab, et infrastruktuuri (serverid, v\u00f5rgud, andmebaasid) kirjeldatakse ja hallatakse koodi abil, mitte k\u00e4sitsi konfiguratsioonide abil.</p> <p>Kujutage ette seda nii: - Traditsiooniline l\u00e4henemine: K\u00e4sitsi serverite loomine ja konfiguratsioon - IaC l\u00e4henemine: Kood kirjeldab, mida soovid, ja t\u00f6\u00f6riist teeb selle sinu eest</p>"},{"location":"terraform_basics/lecture/#miks-iac-on-oluline","title":"Miks IaC on oluline?","text":"<ul> <li>Konsistentsus - sama infrastruktuur igal kord</li> <li>Kiirus - automatiseeritud juurutamine</li> <li>Turvalisus - v\u00e4hem inimeste vigu</li> <li>Skaleerimine - lihtne kopeerida ja muuta</li> </ul> <pre><code>graph TB\n    subgraph \"\ud83c\udfd7\ufe0f Traditsiooniline l\u00e4henemine\"\n        Manual[\ud83d\udc64 K\u00e4sitsi konfiguratsioon]\n        Error[\u274c Inimeste vead]\n        Slow[\ud83d\udc0c Aeglane]\n        Inconsistent[\ud83d\udd04 Ebakindel]\n    end\n\n    subgraph \"\ud83d\udcbb Infrastructure as Code\"\n        Code[\ud83d\udcdd Kood]\n        Version[\ud83d\udcda Versioneerimine]\n        Test[\ud83e\uddea Testimine]\n        Automate[\u26a1 Automatiseerimine]\n    end\n\n    Manual --&gt; Error\n    Manual --&gt; Slow\n    Manual --&gt; Inconsistent\n\n    Code --&gt; Version\n    Code --&gt; Test\n    Code --&gt; Automate\n\n    style Manual fill:#ff9999\n    style Code fill:#99ff99</code></pre> <p>Miks IaC on oluline? - Konsistentsus - sama infrastruktuur igal kord - Kiirus - automatiseeritud juurutamine - Turvalisus - v\u00e4hem inimeste vigu - Skaleerimine - lihtne kopeerida ja muuta - Dokumentatsioon - kood on dokumentatsioon</p>"},{"location":"terraform_basics/lecture/#reaalne-probleem-lihtne-web-rakendus","title":"Reaalne probleem: Lihtne web rakendus","text":"<p>Kujutage ette, et teil on lihtne web rakendus:</p> <pre><code>graph TB\n    subgraph \"\ud83c\udf10 Lihtne Web Rakendus\"\n        User[\ud83d\udc64 Kasutaja]\n        Web[\ud83d\udda5\ufe0f Web Server&lt;br/&gt;HTML, CSS, JavaScript]\n        DB[\ud83d\uddc4\ufe0f Andmebaas&lt;br/&gt;PostgreSQL]\n    end\n\n    User --&gt; Web\n    Web --&gt; DB</code></pre> <p>Traditsiooniline l\u00e4henemine: 1. K\u00e4sitsi serveri loomine 2. K\u00e4sitsi andmebaasi seadistamine 3. K\u00e4sitsi \u00fchenduste konfigureerimine</p> <p>IaC l\u00e4henemine: 1. Kood kirjeldab, mida soovid 2. Terraform teeb selle sinu eest 3. Sama kood t\u00f6\u00f6tab igal kord</p>"},{"location":"terraform_basics/lecture/#terraform-vs-teised-iac-tooriistad","title":"Terraform vs teised IaC t\u00f6\u00f6riistad","text":"<p>Terraform on populaarne valik, aga pole ainus:</p> T\u00f6\u00f6riist Tugevused N\u00f5rkused Parim kasutamine Terraform Multi-cloud, declarative, state management K\u00f5rge \u00f5ppimisk\u00f5ver, HCL s\u00fcntaks Cloud infrastruktuur Ansible Agentless, YAML, idempotent Limited infrastructure Configuration management CloudFormation AWS native, JSON/YAML AWS only, complex syntax AWS environments (not covered) Pulumi General programming languages Newer, smaller community Complex logic <p>Miks Terraform? - Multi-cloud - t\u00f6\u00f6tab kohalikult, VirtualBox, Docker jne (meie kursusel kohalik) - Declarative - kirjeldad mida tahad, mitte kuidas - State management - teab, mis on juba olemas - Large community - palju dokumentatsiooni ja n\u00e4iteid</p>"},{"location":"terraform_basics/lecture/#loeng-232-hcl-syntax-ja-providers-20-min","title":"\ud83d\udcd6 Loeng 23.2: HCL Syntax ja Providers (20 min)","text":""},{"location":"terraform_basics/lecture/#hashicorp-configuration-language-hcl","title":"HashiCorp Configuration Language (HCL)","text":"<p>HCL on Terraform'i konfiguratsioonikeel. See on lihtne, loetav ja v\u00f5imas. Kujutage ette HCL-i kui \"infrastruktuuri kirjeldamise keelt\" - nagu HTML kirjeldab veebilehte, kirjeldab HCL teie infrastruktuuri.</p> <p>Miks HCL? - Loetav - sarnane JSON-iga, aga lihtsam - V\u00f5imas - toetab funktsioone ja loogikat - Turvaline - t\u00fc\u00fcbi kontroll ja valideerimine - Dokumenteeritud - kood ise on dokumentatsioon</p>"},{"location":"terraform_basics/lecture/#pohiline-hcl-suntaks","title":"P\u00f5hiline HCL s\u00fcntaks","text":"<p>HCL koosneb neljast p\u00f5hilistest ploki t\u00fc\u00fcbist, mis on nagu laused looduses. Iga plokk kirjeldab midagi konkreetset ja on oma s\u00fcntaksiga.</p>"},{"location":"terraform_basics/lecture/#1-resource-block-ressursi-loomine","title":"1. Resource Block - ressursi loomine","text":"<p>Resource on Terraform'i p\u00f5hiline \u00fcksus - see kirjeldab, mida soovid luua. Kujutage ette seda kui \"tellimust\" - sa \u00fctled Terraform'ile: \"loo mulle see ja see\".</p> <p>Resource'i s\u00fcntaks on: <code>resource \"provider_type\" \"local_name\" { konfiguratsioon }</code></p> <p>N\u00e4ide - Kohaliku faili loomine:</p> <pre><code>resource \"local_file\" \"web_config\" {\n  content  = \"Server configuration for web application\"\n  filename = \"web_config.txt\"\n\n  tags = {\n    Name = \"Web Config\"\n    Environment = \"Local\"\n    Project = \"Terraform Basics Lab\"\n    CreatedBy = \"Terraform\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>local_file</code> - kohaliku faili t\u00fc\u00fcp - <code>web_config</code> - kohalik nimi (saad seda kasutada viitamiseks) - <code>content</code> - faili sisu - <code>filename</code> - faili nimi ja asukoht - <code>tags</code> - siltid, mis aitavad identifitseerida ja organiseerida</p>"},{"location":"terraform_basics/lecture/#2-data-source-olemasoleva-info-lugemine","title":"2. Data Source - olemasoleva info lugemine","text":"<p>Data source ei loo midagi uut, vaid loeb olemasolevat infot. See on nagu \"k\u00fcsimus\" - sa k\u00fcsid: \"anna mulle see ja see info\".</p> <p>N\u00e4ide - Kohaliku faili lugemine:</p> <pre><code>data \"local_file\" \"config\" {\n  filename = \"config.txt\"\n}\n</code></pre> <p>Mida see teeb? - Loeb olemasoleva kohaliku faili sisu - <code>filename</code> - faili asukoht - Saad kasutada <code>data.local_file.config.content</code> muutujana</p>"},{"location":"terraform_basics/lecture/#3-variable-dunaamiline-vaartus","title":"3. Variable - d\u00fcnaamiline v\u00e4\u00e4rtus","text":"<p>Variable v\u00f5imaldab muuta v\u00e4\u00e4rtusi ilma koodi muutmata. See on nagu \"seadistus\" - sama kood, aga erinevad v\u00e4\u00e4rtused.</p> <p>N\u00e4ide - instance type muutuja:</p> <pre><code>variable \"file_name\" {\n  description = \"Local file name\"\n  type        = string\n  default     = \"config.txt\"\n\n  validation {\n    condition     = contains([\"t2.micro\", \"t2.small\", \"t2.medium\"], var.instance_type)\n    error_message = \"Instance type must be t2.micro, t2.small, or t2.medium.\"\n  }\n}\n</code></pre> <p>Mida see teeb? - <code>description</code> - kirjeldus, mida muutuja teeb - <code>type</code> - andmet\u00fc\u00fcp (string, number, bool, list, map) - <code>default</code> - vaikev\u00e4\u00e4rtus - <code>validation</code> - kontrollib, et v\u00e4\u00e4rtus oleks korrektne</p>"},{"location":"terraform_basics/lecture/#4-output-tagastatav-vaartus","title":"4. Output - tagastatav v\u00e4\u00e4rtus","text":"<p>Output v\u00f5imaldab n\u00e4ha loodud ressursside infot. See on nagu \"vastus\" - mida Terraform tagastab p\u00e4rast t\u00f6\u00f6 l\u00f5petamist.</p> <p>N\u00e4ide - serveri IP aadress:</p> <pre><code>output \"public_ip\" {\n  description = \"Public IP of the web server\"\n  value       = local_file.web_config.filename\n}\n</code></pre> <p>Mida see teeb? - <code>description</code> - kirjeldus, mida v\u00e4ljund tagastab - <code>value</code> - v\u00e4\u00e4rtus, mida tagastada (serveri avalik IP)</p>"},{"location":"terraform_basics/lecture/#2-data-types-andmetuubid","title":"2. Data types - andmet\u00fc\u00fcbid","text":"<p>Terraform toetab erinevaid andmet\u00fc\u00fcpe, nagu ka teised programmeerimiskeeled. Iga t\u00fc\u00fcp on m\u00f5eldud teatud kindlatele andmetele ja kasutamise juhtumitele.</p> <p>String - tekst String on tavaline tekst, mis on jutum\u00e4rkides. Kasutatakse nimede, kirjelduste ja tekstiliste v\u00e4\u00e4rtuste jaoks.</p> <pre><code>variable \"name\" {\n  type    = string\n  default = \"my-server\"\n}\n</code></pre> <p>Number - arv Number on arv ilma jutum\u00e4rkideta. Kasutatakse pordide, m\u00e4lu, ketta suuruse jaoks.</p> <pre><code>variable \"port\" {\n  type    = number\n  default = 80\n}\n</code></pre> <p>Boolean - t\u00f5ev\u00e4\u00e4rtus Boolean on kas <code>true</code> (t\u00f5ene) v\u00f5i <code>false</code> (v\u00e4\u00e4r). Kasutatakse s\u00e4tete sisse/v\u00e4lja l\u00fclitamiseks.</p> <pre><code>variable \"enable_monitoring\" {\n  type    = bool\n  default = true\n}\n</code></pre> <p>List - nimekiri List on j\u00e4rjestatud kogum v\u00e4\u00e4rtusi. Kasutatakse, kui sul on mitu sarnast v\u00e4\u00e4rtust.</p> <pre><code>variable \"subnets\" {\n  type    = list(string)\n  default = [\"subnet-123\", \"subnet-456\", \"subnet-789\"]\n}\n</code></pre> <p>Map - kaart (v\u00f5ti-v\u00e4\u00e4rtus paarid) Map on v\u00f5tmete ja v\u00e4\u00e4rtuste kogum. Kasutatakse, kui sul on struktureeritud andmeid.</p> <pre><code>variable \"tags\" {\n  type = map(string)\n  default = {\n    Environment = \"Production\"\n    Project     = \"WebApp\"\n    Owner       = \"DevOps Team\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#3-functions-ja-expressions-funktsioonid-ja-avaldised","title":"3. Functions ja expressions - funktsioonid ja avaldised","text":"<p>Terraform toetab funktsioone ja avaldisi, mis v\u00f5imaldavad teha loogilisi operatsioone ja andmete t\u00f6\u00f6tlemist. Need on nagu valemid Excelis - v\u00f5imaldavad teha arvutusi ja loogilisi otsuseid.</p> <p>String concatenation - stringide \u00fchendamine</p> <p>Locals v\u00f5imaldab defineerida v\u00e4\u00e4rtusi, mida saab korduvalt kasutada. See on nagu muutuja, mis on ainult selle faili sees.</p> <pre><code>locals {\n  full_name = \"${var.project_name}-${var.environment}\"\n  domain_name = \"${var.subdomain}.${var.domain}\"\n}\n</code></pre> <p>Conditional logic - tingimuslik loogika</p> <p>Ternary operator v\u00f5imaldab teha tingimuslikke otsuseid: <code>tingimus ? t\u00f5ene_v\u00e4\u00e4rtus : v\u00e4\u00e4r_v\u00e4\u00e4rtus</code></p> <pre><code>resource \"local_file\" \"config\" {\n  content = var.environment == \"production\" ? var.prod_config : var.dev_config\n  filename = var.config_filename\n  count = var.enable_config ? 1 : 0\n}\n</code></pre> <p>File reading - faili lugemine</p> <p><code>file()</code> funktsioon loeb faili sisu ja tagastab selle stringina. Kasutatakse skriptide ja konfiguratsioonide jaoks.</p> <pre><code>resource \"local_file\" \"config\" {\n  content = file(\"${path.module}/config_template.txt\")\n  filename = \"generated_config.txt\"\n}\n</code></pre> <p>Loops ja iteration - ts\u00fcklid ja kordused</p> <p><code>for_each</code> v\u00f5imaldab luua mitu ressurssi nimekirja p\u00f5hjal.</p> <pre><code>resource \"local_file\" \"configs\" {\n  for_each = toset(var.config_names)\n\n  content  = \"Configuration for ${each.key}\"\n  filename = \"${each.key}_config.txt\"\n\n  tags = {\n    Name = each.key\n    Index = each.value\n  }\n}\n</code></pre> <p>Mathematical operations - matemaatilised operatsioonid</p> <p>Terraform toetab matemaatilisi operatsioone ja funktsioone.</p> <pre><code>locals {\n  subnet_size = pow(2, 32 - var.cidr_block_size)\n  average_load = (var.min_instances + var.max_instances) / 2\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#terraform-providers","title":"Terraform Providers","text":"<p>Provider on plugin, mis v\u00f5imaldab Terraform'il suhelda erinevate teenustega. Kujutage ette provider'it kui \"t\u00f5lki\" - see t\u00f5lgib Terraform'i k\u00e4sud konkreetse teenuse (local, VirtualBox, Docker) keelde.</p> <p>Miks provider'id on olulised? - \u00dchtne s\u00fcntaks - sama HCL kood t\u00f6\u00f6tab erinevate teenustega - Spetsialiseeritud funktsioonid - iga provider toetab oma teenuse v\u00f5imalusi - Versioonihaldus - saad m\u00e4\u00e4rata, millist provider'i versiooni kasutada - Turvalisus - provider haldab autentimist ja autoriseerimist</p> <p>Local Provider n\u00e4ide:</p> <pre><code># ==========================================\n# TERRAFORM CONFIGURATION - Terraform'i seaded\n# ==========================================\n# See plokk m\u00e4\u00e4rab, milliseid provider'eid ja versioone kasutada\nterraform {\n  # M\u00e4\u00e4ra Terraform'i versioon (valikuline, aga soovituslik)\n  required_version = \"&gt;= 1.0\"\n\n  # M\u00e4\u00e4ra vajalikud provider'id ja nende versioonid\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"  # Provider'i allikas (HashiCorp'i registry)\n      version = \"~&gt; 2.0\"           # Versioon: 2.x.x\n    }\n  }\n}\n\n# ==========================================\n# LOCAL PROVIDER CONFIGURATION - kohalikud seaded\n# ==========================================\n# Kohalik provider ei vaja erilisi seadeid\n# T\u00f6\u00f6tab kohe kohalikus failis\u00fcsteemis\n\n# ==========================================\n# LOCAL RESOURCE - kohalik ressurss\n# ==========================================\n# N\u00fc\u00fcd saame luua kohalikke ressursse\nresource \"local_file\" \"web_config\" {\n  content  = \"Web server configuration for local development\"\n  filename = \"web_config.txt\"\n\n  tags = {\n    Name = \"Web Config\"           # Resurssi nimi\n    Purpose = \"Learning Terraform\" # Lisainfo\n  }\n}\n</code></pre> <p>Local Provider n\u00e4ide (lab jaoks):</p> <p>Local provider v\u00f5imaldab luua faile ja katalooge kohalikus failis\u00fcsteemis. See on suurep\u00e4rane \u00f5ppimiseks, kuna ei vaja cloud'i ega makse.</p> <pre><code># ==========================================\n# LOCAL PROVIDER - kohalik failis\u00fcsteem\n# ==========================================\n# Local provider t\u00f6\u00f6tab ainult kohalikus failis\u00fcsteemis\n# Ei vaja interneti \u00fchendust ega cloud'i teenuseid\nterraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"  # HashiCorp'i local provider\n      version = \"~&gt; 2.0\"           # Versioon 2.x.x\n    }\n  }\n}\n\n# ==========================================\n# CREATE A LOCAL FILE - kohaliku faili loomine\n# ==========================================\n# local_file loob v\u00f5i uuendab faili kohalikus failis\u00fcsteemis\nresource \"local_file\" \"hello\" {\n  content  = \"Hello, Terraform!\"  # Faili sisu\n  filename = \"${path.module}/hello.txt\"  # Faili nimi ja asukoht\n  # path.module on kaust, kus praegune .tf fail asub\n}\n\n# ==========================================\n# CREATE A DIRECTORY - kataloogi loomine\n# ==========================================\n# local_directory loob kataloogi, kui seda pole olemas\nresource \"local_directory\" \"example\" {\n  path = \"${path.module}/example_dir\"  # Kataloogi tee\n}\n\n# ==========================================\n# CREATE A CONFIGURATION FILE - konfiguratsioonifaili loomine\n# ==========================================\n# Looge JSON konfiguratsioonifail\nresource \"local_file\" \"config\" {\n  content = jsonencode({\n    project_name = \"Week 23 Lab\"\n    environment  = \"development\"\n    created_by   = \"Terraform\"\n    timestamp    = timestamp()\n    version      = \"1.0.0\"\n  })\n  filename = \"${path.module}/config.json\"\n}\n\n# ==========================================\n# CREATE A SCRIPT FILE - skriptifaili loomine\n# ==========================================\n# Looge Bash skript\nresource \"local_file\" \"script\" {\n  content = &lt;&lt;-EOF\n    #!/bin/bash\n    echo \"This script was created by Terraform\"\n    echo \"Project: Week 23 Lab\"\n    echo \"Timestamp: $(date)\"\n    echo \"Current directory: $(pwd)\"\n  EOF\n  filename = \"${path.module}/scripts/startup.sh\"\n}\n</code></pre> <p>Docker Provider n\u00e4ide:</p> <p>Docker provider v\u00f5imaldab hallata Docker container'eid ja image'e Terraform'i abil. See on kasulik, kui soovid hallata container'eid kui infrastruktuuri osa.</p> <pre><code># ==========================================\n# DOCKER PROVIDER - Docker container'ite haldamine\n# ==========================================\n# Docker provider v\u00f5imaldab hallata Docker container'eid Terraform'i abil\n# See on kasulik, kui soovid hallata container'eid kui infrastruktuuri osa\nterraform {\n  required_providers {\n    docker = {\n      source  = \"kreuzwerker/docker\"  # Kolmanda osapoole Docker provider\n      version = \"~&gt; 3.0\"              # Versioon 3.x.x\n    }\n  }\n}\n\n# ==========================================\n# DOCKER PROVIDER CONFIGURATION - Docker seaded\n# ==========================================\n# M\u00e4\u00e4rab, kuidas \u00fchenduda Docker daemon'iga\nprovider \"docker\" {\n  host = \"unix:///var/run/docker.sock\"  # Docker socket'i asukoht Linuxis\n  # Windows: \"npipe:////./pipe/docker_engine\"\n  # Remote: \"tcp://docker-host:2376\"\n}\n\n# ==========================================\n# PULL DOCKER IMAGE - Docker image'i allalaadimine\n# ==========================================\n# docker_image allalaadib image'i Docker Hub'ist v\u00f5i muust registry'st\nresource \"docker_image\" \"nginx\" {\n  name = \"nginx:latest\"  # Image'i nimi ja tag\n  # Alternatiivid:\n  # name = \"nginx:1.21\"     # Konkreetne versioon\n  # name = \"my-registry.com/nginx:latest\"  # Privaatne registry\n}\n\n# ==========================================\n# CREATE DOCKER CONTAINER - Docker container'i loomine\n# ==========================================\n# docker_container loob ja haldab Docker container'eid\nresource \"docker_container\" \"web\" {\n  name  = \"web-server\"                    # Container'i nimi\n  image = docker_image.nginx.image_id     # Kasuta allalaaditud image'i\n\n  # Port mapping - \u00fchenda container'i port 80 host'i portiga 8080\n  ports {\n    internal = 80    # Container'i sees olev port\n    external = 8080  # Host'i port (http://localhost:8080)\n  }\n\n  # Keskkonnamuutujad\n  env = [\n    \"NGINX_HOST=localhost\",\n    \"NGINX_PORT=80\"\n  ]\n\n  # Volume mounting - \u00fchenda host'i kaust container'i kausta\n  volumes {\n    container_path = \"/usr/share/nginx/html\"  # Container'i kaust\n    host_path      = \"${path.module}/web\"     # Host'i kaust\n    read_only      = false                    # Lugemine ja kirjutamine\n  }\n\n  # Container'i k\u00e4ivitamise k\u00e4sud\n  command = [\"nginx\", \"-g\", \"daemon off;\"]\n\n  # Restart policy\n  restart = \"unless-stopped\"  # Taask\u00e4ivita, kui pole k\u00e4sitsi peatatud\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#provider-konfiguratsiooni-best-practices","title":"Provider konfiguratsiooni best practices","text":"<p>Provider'ite konfiguratsioon on kriitiline Terraform'i stabiilsuse ja turvalisuse jaoks. J\u00e4rgige neid best practices, et v\u00e4ltida probleeme.</p> <p>1. Versioonide fikseerimine - oluline stabiilsuse jaoks:</p> <pre><code># ==========================================\n# VERSION PINNING - versioonide fikseerimine\n# ==========================================\n# ALATI fikseeri provider'ite versioonid, et v\u00e4ltida ootamatuid muudatusi\nterraform {\n  required_providers {\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"  # 2.x.x, aga mitte 3.0.0\n      # ~&gt; t\u00e4hendab \"v\u00e4hemalt 2.0, aga v\u00e4hem kui 3.0\"\n      # See v\u00f5imaldab saada bug fix'e, aga mitte breaking change'e\n    }\n\n    # Mitu provider'it\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"~&gt; 2.0\"\n    }\n\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n</code></pre> <p>2. Keskkonnamuutujad - turvaline autentimine:</p> <pre><code># ==========================================\n# ENVIRONMENT VARIABLES - keskkonnamuutujad\n# ==========================================\n# \u00c4RA kunagi kirjuta access key'e otse koodi!\n# Kasuta keskkonnamuutujaid v\u00f5i kohalikke seadeid\n\n# Local provider credentials (ei vaja)\n# Kohalik provider t\u00f6\u00f6tab kohe, ei vaja erilisi seadeid\n\n# V\u00f5i kasuta keskkonnamuutujaid\nexport TF_VAR_project_name=\"my-project\"\nexport TF_VAR_environment=\"development\"\n</code></pre> <p>3. Multiple providers - erinevate keskkondade haldamine:</p> <pre><code># ==========================================\n# MULTIPLE PROVIDERS - mitu provider'it\n# ==========================================\n# Kasutage alias'e, kui teil on mitu sama t\u00fc\u00fcpi provider'it\n# N\u00e4iteks: erinevad kohalikud keskkonnad v\u00f5i projektid\n\n# Production environment\nprovider \"local\" {\n  alias = \"prod\"         # Unikaalne nimi\n}\n\n# Development environment  \nprovider \"local\" {\n  alias = \"dev\"          # Unikaalne nimi\n}\n\n# Kasuta konkreetset provider'it\nresource \"local_file\" \"prod_config\" {\n  provider = local.prod  # M\u00e4\u00e4ra, millist provider'it kasutada\n  content  = \"Production configuration\"\n  filename = \"prod_config.txt\"\n\n  tags = {\n    Environment = \"Production\"\n    ManagedBy   = \"Terraform\"\n  }\n}\n\nresource \"local_file\" \"dev_config\" {\n  provider = local.dev   # M\u00e4\u00e4ra, millist provider'it kasutada\n  content  = \"Development configuration\"\n  filename = \"dev_config.txt\"\n\n  tags = {\n    Environment = \"Development\"\n    ManagedBy   = \"Terraform\"\n  }\n}\n</code></pre> <p>4. Provider konfiguratsiooni valideerimine:</p> <pre><code># ==========================================\n# PROVIDER VALIDATION - provider'i kontroll\n# ==========================================\n# Lisage valideerimine, et kontrollida provider'i seadeid\n\nprovider \"local\" {\n  # Kohalik provider ei vaja valideerimist\n  # T\u00f6\u00f6tab k\u00f5ikides keskkondades\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#loeng-233-resources-ja-data-sources-18-min","title":"\ud83d\udcd6 Loeng 23.3: Resources ja Data Sources (18 min)","text":""},{"location":"terraform_basics/lecture/#terraform-resources","title":"Terraform Resources","text":"<p>Resource on Terraform'i p\u00f5hiline \u00fcksus - see kirjeldab, mida soovid luua, muuta v\u00f5i kustutada.</p>"},{"location":"terraform_basics/lecture/#pohilised-resource-tuubid","title":"P\u00f5hilised resource t\u00fc\u00fcbid","text":"<p>1. Local resources:</p> <pre><code># Local File\nresource \"local_file\" \"web_config\" {\n  content  = \"Web server configuration\"\n  filename = var.config_filename\n\n  # Local configuration dependencies\ncontent = data.local_file.template.content\n\n  user_data = &lt;&lt;-EOF\n              #!/bin/bash\n              apt-get update\n              apt-get install -y nginx\n              systemctl start nginx\n              EOF\n\n  tags = {\n    Name = \"Web Server\"\n  }\n}\n\n# Auto Scaling Group (Local equivalent)\nresource \"local_file\" \"web_config\" {\n  content  = \"Web application configuration with scaling settings\"\n  filename = \"web_config.txt\"\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n</code></pre> <p>2. Local configuration resources:</p> <pre><code># Main configuration directory\nresource \"local_directory\" \"main\" {\n  path = \"./config\"\n}\n\n# Configuration file\nresource \"local_file\" \"config\" {\n  content  = \"Main configuration file\"\n  filename = \"${local_directory.main.path}/main.conf\"\n\n  tags = {\n    Name = \"Main Config\"\n  }\n}\n\n# Template file\nresource \"local_file\" \"template\" {\n  content  = \"Configuration template\"\n  filename = \"${local_directory.main.path}/template.conf\"\n\n  tags = {\n    Name = \"Config Template\"\n  }\n}\n\n# Settings file\nresource \"local_file\" \"settings\" {\n  content  = \"Application settings\"\n  filename = \"${local_directory.main.path}/settings.conf\"\n\n  tags = {\n    Name = \"Settings\"\n  }\n}\n</code></pre> <p>3. Local storage resources:</p> <pre><code># Data directory\nresource \"local_directory\" \"data\" {\n  path = \"./data\"\n}\n\n# Random ID for unique names\nresource \"random_id\" \"file_suffix\" {\n  byte_length = 4\n}\n\n# Database configuration file\nresource \"local_file\" \"db_config\" {\n  content  = \"Database configuration for local development\"\n  filename = \"${local_directory.data.path}/database.conf\"\n\n  tags = {\n    Name = \"Database Config\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#data-sources","title":"Data Sources","text":"<p>Data source v\u00f5imaldab lugeda olemasolevat infot, mida saab kasutada resource'ide konfiguratsioonis.</p> <p>1. Local data sources:</p> <pre><code># File lookup\ndata \"local_file\" \"template\" {\n  filename = \"template.txt\"\n}\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n}\n\n# Availability zones\ndata \"local_file\" \"available_config\" {\n  filename = \"available_config.txt\"\n}\n\n# Local configuration data\ndata \"local_file\" \"default_config\" {\n  filename = \"default_config.txt\"\n}\n\n# Configuration files\ndata \"local_file\" \"configs\" {\n  filename = \"configs.txt\"\n}\n</code></pre> <p>2. Local data sources:</p> <pre><code># File content\ndata \"local_file\" \"config\" {\n  filename = \"${path.module}/config.json\"\n}\n\n# Directory listing\ndata \"local_file\" \"script\" {\n  filename = \"${path.module}/scripts/startup.sh\"\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#resource-dependencies","title":"Resource dependencies","text":"<p>Terraform automaatselt tuvastab s\u00f5ltuvused, aga m\u00f5nikord pead neid selges\u00f5naliselt m\u00e4\u00e4rama:</p> <pre><code># Implicit dependency (recommended)\nresource \"local_file\" \"web_config\" {\n  content  = data.local_file.template.content\n  filename = \"web_config.txt\"\n}\n\n# Explicit dependency\nresource \"local_file\" \"web_config\" {\n  content  = data.local_file.template.content\n  filename = \"web_config.txt\"\n\n  depends_on = [local_directory.config, local_file.template]\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#resource-lifecycle","title":"Resource lifecycle","text":"<p>Lifecycle rules v\u00f5imaldavad kontrollida, kuidas Terraform hallab ressurssi:</p> <pre><code>resource \"local_file\" \"web_config\" {\n  content  = data.local_file.template.content\n  filename = \"web_config.txt\"\n\n  lifecycle {\n    # Prevent recreation when content changes\n    ignore_changes = [content]\n\n    # Create new resource before destroying old\n    create_before_destroy = true\n\n    # Prevent accidental deletion\n    prevent_destroy = false\n  }\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#loeng-234-state-management-12-min","title":"\ud83d\udcd6 Loeng 23.4: State Management (12 min)","text":""},{"location":"terraform_basics/lecture/#mis-on-terraform-state","title":"Mis on Terraform State?","text":"<p>Terraform state on fail, mis sisaldab teavet teie infrastruktuuri kohta - mis ressursid on olemas, nende ID-d, atribuudid ja s\u00f5ltuvused.</p>"},{"location":"terraform_basics/lecture/#state-faili-roll","title":"State faili roll","text":"<pre><code>graph TB\n    subgraph \"Terraform Workflow\"\n        Code[\ud83d\udcdd Terraform Code]\n        State[\ud83d\uddc4\ufe0f State File]\n        Cloud[\u2601\ufe0f Cloud Infrastructure]\n    end\n\n    Code --&gt;|terraform plan| State\n    State --&gt;|terraform apply| Cloud\n    Cloud --&gt;|terraform refresh| State\n\n    style State fill:#ffcc99\n    style Cloud fill:#99ccff</code></pre> <p>State fail sisaldab: - Resource metadata - ID-d, atribuudid, s\u00f5ltuvused - Current state - mis on praegu olemas - Desired state - mis peaks olema - Dependencies - milline j\u00e4rjekord</p>"},{"location":"terraform_basics/lecture/#state-faili-naide","title":"State faili n\u00e4ide","text":"<pre><code>{\n  \"version\": 4,\n  \"terraform_version\": \"1.5.0\",\n  \"serial\": 1,\n  \"lineage\": \"abc123\",\n  \"outputs\": {\n    \"public_ip\": {\n      \"value\": \"52.23.45.67\",\n      \"type\": \"string\"\n    }\n  },\n  \"resources\": [\n    {\n      \"mode\": \"managed\",\n      \"type\": \"local_file\",\n      \"name\": \"web_server\",\n      \"provider\": \"provider[\\\"registry.terraform.io/hashicorp/local\\\"]\",\n      \"instances\": [\n        {\n          \"schema_version\": 1,\n          \"attributes\": {\n            \"id\": \"i-1234567890abcdef0\",\n            \"instance_type\": \"t2.micro\",\n            \"public_ip\": \"52.23.45.67\",\n            \"tags\": {\n              \"Name\": \"Web Server\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#state-management-probleemid","title":"State management probleemid","text":"<p>1. Local state faili probleemid:</p> <pre><code># State fail on kohalikus failis\u00fcsteemis\nterraform.tfstate\n\n# Probleemid:\n# - Ei t\u00f6\u00f6ta meeskonnaga\n# - Ei ole backup'i\n# - Ei ole concurrent access\n# - Ei ole versioning\n</code></pre> <p>2. Remote state lahendused:</p> <pre><code># Terraform Cloud\nterraform {\n  cloud {\n    organization = \"my-org\"\n    workspaces {\n      name = \"web-app\"\n    }\n  }\n}\n\n# Local backend\nterraform {\n  backend \"local\" {\n    path = \"terraform.tfstate\"\n  }\n}\n\n# Azure Storage backend\nterraform {\n  backend \"azurerm\" {\n    resource_group_name  = \"terraform-rg\"\n    storage_account_name = \"tfstate12345\"\n    container_name       = \"tfstate\"\n    key                  = \"web-app.terraform.tfstate\"\n  }\n}\n</code></pre>"},{"location":"terraform_basics/lecture/#state-management-best-practices","title":"State management best practices","text":"<p>1. Remote state kasutamine:</p> <pre><code># Local backend konfiguratsioon\nterraform {\n  backend \"local\" {\n    path = \"terraform.tfstate\"\n  }\n}\n</code></pre> <p>2. State locking:</p> <pre><code># Local file for state locking\nresource \"local_file\" \"terraform_locks\" {\n  content  = \"State lock file\"\n  filename = \"terraform.lock\"\n}\n</code></pre> <p>3. State separation:</p> <pre><code># Erinevad keskkonnad erinevates state failides\nenvironments/\n\u251c\u2500\u2500 dev/\n\u2502   \u2514\u2500\u2500 terraform.tfstate\n\u251c\u2500\u2500 staging/\n\u2502   \u2514\u2500\u2500 terraform.tfstate\n\u2514\u2500\u2500 prod/\n    \u2514\u2500\u2500 terraform.tfstate\n</code></pre> <p>4. State import:</p> <pre><code># Import existing resources\nterraform import local_file.web_config web_config.txt\n\n# Import with configuration\nterraform import 'local_file.web_config[0]' web_config.txt\n</code></pre>"},{"location":"terraform_basics/lecture/#state-security","title":"State security","text":"<p>1. Encryption:</p> <pre><code>terraform {\n  backend \"local\" {\n    path = \"terraform.tfstate\"\n  }\n}\n</code></pre> <p>2. Access control:</p> <pre><code># Local file access policy\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"read\",\n\"write\",\n\"delete\"\n      ],\n      \"Resource\": \"local://terraform.tfstate\"\n    }\n  ]\n}\n</code></pre> <p>3. State backup:</p> <pre><code># Regular backups\ncp terraform.tfstate backups/$(date +%Y%m%d)/terraform.tfstate\n</code></pre>"},{"location":"terraform_basics/lecture/#state-troubleshooting","title":"State troubleshooting","text":"<p>1. State inconsistencies:</p> <pre><code># Refresh state from cloud\nterraform refresh\n\n# Plan to see differences\nterraform plan\n\n# Force update if needed\nterraform apply -refresh=false\n</code></pre> <p>2. State corruption:</p> <pre><code># Backup current state\ncp terraform.tfstate terraform.tfstate.backup\n\n# Remove from state (careful!)\nterraform state rm local_file.web_config\n\n# Re-import if needed\nterraform import local_file.web_config web_config.txt\n</code></pre> <p>3. State inspection:</p> <pre><code># List all resources in state\nterraform state list\n\n# Show specific resource\nterraform state show local_file.web_config\n\n# Move resource in state\nterraform state mv local_file.old_name local_file.new_name\n</code></pre>"},{"location":"terraform_basics/lecture/#kokkuvote","title":"\ud83c\udfaf Kokkuv\u00f5te","text":"<p>T\u00e4na \u00f5ppisime:</p> <p>Infrastructure as Code m\u00f5istet - miks ja kuidas kasutada HCL s\u00fcntaksit - Terraform'i konfiguratsioonikeel Providers ja resources - erinevate teenuste kasutamine State management - infrastruktuuri oleku haldamine  </p> <p>J\u00e4rgmise n\u00e4dala teemad: - Terraform praktika lab'is - Multi-environment infrastruktuur - Advanced Terraform features</p> <p>Kas teil on k\u00fcsimusi? \ud83e\udd14</p>"},{"location":"terraform_basics/lecture/#lisaressursid","title":"\ud83d\udcda Lisaressursid","text":"<ul> <li>Terraform Documentation: https://www.terraform.io/docs</li> <li>HCL Language: https://www.terraform.io/docs/language</li> <li>Local Provider: https://registry.terraform.io/providers/hashicorp/local/latest/docs</li> <li>Terraform Best Practices: https://www.terraform.io/docs/cloud/guides/recommended-practices</li> </ul>"}]}